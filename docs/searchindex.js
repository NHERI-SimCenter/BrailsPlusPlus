Search.setIndex({"alltitles": {"API Reference": [[341, "api-reference"]], "About": [[339, "about"]], "Acknowledgements": [[340, "acknowledgements"]], "Building Footprints": [[1, "building-footprints"]], "Contents:": [[7, null], [8, null]], "Copyright and License": [[344, "copyright-and-license"]], "Downloading Images": [[2, "downloading-images"]], "Example:": [[236, "example"]], "Examples": [[0, "examples"]], "Examples Gallery": [[0, "examples-gallery"]], "Footprint Notebook": [[1, "footprint-notebook"]], "How to Cite": [[342, "how-to-cite"]], "Image Filters": [[3, "image-filters"]], "Importer": [[4, "importer"]], "Imputation Algorithms": [[5, "imputation-algorithms"]], "Imputation Notebook": [[5, "imputation-notebook"]], "Indices and tables": [[7, "indices-and-tables"], [8, "indices-and-tables"]], "Installation": [[343, "installation"]], "NSI Integration": [[6, "nsi-integration"]], "NSI Integration Notebook": [[6, "nsi-integration-notebook"]], "Notes:": [[236, "notes"]], "Submodules": [[9, "submodules"], [12, "submodules"], [14, "submodules"], [16, "submodules"], [18, "submodules"], [20, "submodules"], [21, "submodules"], [24, "submodules"], [26, "submodules"], [28, "submodules"], [49, "submodules"], [51, "submodules"], [53, "submodules"], [57, "submodules"], [58, "submodules"], [60, "submodules"], [62, "submodules"], [64, "submodules"], [71, "submodules"], [77, "submodules"], [78, "submodules"], [85, "submodules"], [87, "submodules"], [89, "submodules"], [91, "submodules"], [92, "submodules"], [95, "submodules"], [96, "submodules"], [97, "submodules"], [105, "submodules"], [110, "submodules"], [112, "submodules"], [113, "submodules"], [119, "submodules"], [132, "submodules"], [140, "submodules"], [146, "submodules"], [150, "submodules"], [154, "submodules"], [162, "submodules"], [165, "submodules"], [170, "submodules"], [173, "submodules"], [175, "submodules"], [177, "submodules"], [184, "submodules"], [190, "submodules"], [191, "submodules"], [198, "submodules"], [201, "submodules"], [204, "submodules"], [206, "submodules"], [208, "submodules"], [210, "submodules"], [211, "submodules"], [213, "submodules"], [220, "submodules"], [226, "submodules"], [227, "submodules"], [235, "submodules"], [237, "submodules"], [240, "submodules"], [242, "submodules"], [244, "submodules"], [246, "submodules"], [248, "submodules"], [250, "submodules"], [255, "submodules"], [257, "submodules"], [261, "submodules"], [270, "submodules"], [275, "submodules"], [278, "submodules"], [285, "submodules"], [286, "submodules"], [289, "submodules"], [292, "submodules"], [294, "submodules"], [297, "submodules"], [299, "submodules"], [301, "submodules"], [303, "submodules"], [305, "submodules"], [307, "submodules"], [309, "submodules"], [312, "submodules"], [315, "submodules"], [318, "submodules"], [322, "submodules"], [332, "submodules"]], "Subpackages": [[9, "subpackages"], [12, "subpackages"], [14, "subpackages"], [16, "subpackages"], [20, "subpackages"], [57, "subpackages"], [60, "subpackages"], [62, "subpackages"], [77, "subpackages"], [91, "subpackages"], [95, "subpackages"], [96, "subpackages"], [103, "subpackages"], [104, "subpackages"], [112, "subpackages"], [146, "subpackages"], [173, "subpackages"], [175, "subpackages"], [190, "subpackages"], [210, "subpackages"], [211, "subpackages"], [226, "subpackages"], [248, "subpackages"], [255, "subpackages"], [257, "subpackages"], [275, "subpackages"], [285, "subpackages"], [322, "subpackages"]], "brails": [[338, "brails"]], "brails package": [[9, "module-brails"]], "brails.constants module": [[10, "module-brails.constants"]], "brails.exceptions module": [[11, "module-brails.exceptions"]], "brails.filters package": [[12, "module-brails.filters"]], "brails.filters.filter module": [[13, "module-brails.filters.filter"]], "brails.filters.filter.Filter": [[345, "brails-filters-filter-filter"]], "brails.filters.house_view package": [[14, "module-brails.filters.house_view"]], "brails.filters.house_view.house_view module": [[15, "module-brails.filters.house_view.house_view"]], "brails.imputers package": [[16, "module-brails.imputers"]], "brails.imputers.imputation module": [[17, "module-brails.imputers.imputation"]], "brails.imputers.knn_imputer package": [[18, "module-brails.imputers.knn_imputer"]], "brails.imputers.knn_imputer.knn_imputer module": [[19, "module-brails.imputers.knn_imputer.knn_imputer"]], "brails.inferers package": [[20, "module-brails.inferers"]], "brails.inferers.hazus_inferer package": [[21, "module-brails.inferers.hazus_inferer"]], "brails.inferers.hazus_inferer.hazus_inferer module": [[22, "module-brails.inferers.hazus_inferer.hazus_inferer"]], "brails.inferers.hazus_inferer.hazus_rulesets module": [[23, "module-brails.inferers.hazus_inferer.hazus_rulesets"]], "brails.inferers.hazus_inferer_earthquake package": [[24, "module-brails.inferers.hazus_inferer_earthquake"]], "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake module": [[25, "module-brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake"]], "brails.inferers.hazus_inferer_flood package": [[26, "module-brails.inferers.hazus_inferer_flood"]], "brails.inferers.hazus_inferer_flood.hazus_inferer_flood module": [[27, "module-brails.inferers.hazus_inferer_flood.hazus_inferer_flood"]], "brails.inferers.hazus_inferer_wind package": [[28, "module-brails.inferers.hazus_inferer_wind"]], "brails.inferers.hazus_inferer_wind.BuildingClassRulesets module": [[29, "module-brails.inferers.hazus_inferer_wind.BuildingClassRulesets"]], "brails.inferers.hazus_inferer_wind.WindCECBRulesets module": [[30, "module-brails.inferers.hazus_inferer_wind.WindCECBRulesets"]], "brails.inferers.hazus_inferer_wind.WindCERBRulesets module": [[31, "module-brails.inferers.hazus_inferer_wind.WindCERBRulesets"]], "brails.inferers.hazus_inferer_wind.WindEFRulesets module": [[32, "module-brails.inferers.hazus_inferer_wind.WindEFRulesets"]], "brails.inferers.hazus_inferer_wind.WindMECBRulesets module": [[33, "module-brails.inferers.hazus_inferer_wind.WindMECBRulesets"]], "brails.inferers.hazus_inferer_wind.WindMERBRulesets module": [[34, "module-brails.inferers.hazus_inferer_wind.WindMERBRulesets"]], "brails.inferers.hazus_inferer_wind.WindMHRulesets module": [[35, "module-brails.inferers.hazus_inferer_wind.WindMHRulesets"]], "brails.inferers.hazus_inferer_wind.WindMLRIRulesets module": [[36, "module-brails.inferers.hazus_inferer_wind.WindMLRIRulesets"]], "brails.inferers.hazus_inferer_wind.WindMLRMRulesets module": [[37, "module-brails.inferers.hazus_inferer_wind.WindMLRMRulesets"]], "brails.inferers.hazus_inferer_wind.WindMMUHRulesets module": [[38, "module-brails.inferers.hazus_inferer_wind.WindMMUHRulesets"]], "brails.inferers.hazus_inferer_wind.WindMSFRulesets module": [[39, "module-brails.inferers.hazus_inferer_wind.WindMSFRulesets"]], "brails.inferers.hazus_inferer_wind.WindMetaVarRulesets module": [[40, "module-brails.inferers.hazus_inferer_wind.WindMetaVarRulesets"]], "brails.inferers.hazus_inferer_wind.WindSECBRulesets module": [[41, "module-brails.inferers.hazus_inferer_wind.WindSECBRulesets"]], "brails.inferers.hazus_inferer_wind.WindSERBRulesets module": [[42, "module-brails.inferers.hazus_inferer_wind.WindSERBRulesets"]], "brails.inferers.hazus_inferer_wind.WindSPMBRulesets module": [[43, "module-brails.inferers.hazus_inferer_wind.WindSPMBRulesets"]], "brails.inferers.hazus_inferer_wind.WindWMUHRulesets module": [[44, "module-brails.inferers.hazus_inferer_wind.WindWMUHRulesets"]], "brails.inferers.hazus_inferer_wind.WindWSFRulesets module": [[45, "module-brails.inferers.hazus_inferer_wind.WindWSFRulesets"]], "brails.inferers.hazus_inferer_wind.auto_HU_NJ module": [[46, "module-brails.inferers.hazus_inferer_wind.auto_HU_NJ"]], "brails.inferers.hazus_inferer_wind.hazus_inferer_wind module": [[47, "module-brails.inferers.hazus_inferer_wind.hazus_inferer_wind"]], "brails.inferers.inference_engine module": [[48, "module-brails.inferers.inference_engine"]], "brails.inferers.nlcd_inferer package": [[49, "module-brails.inferers.nlcd_inferer"]], "brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover module": [[50, "module-brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover"]], "brails.inferers.simcenter_inferer package": [[51, "module-brails.inferers.simcenter_inferer"]], "brails.inferers.simcenter_inferer.simCenter_inferer module": [[52, "module-brails.inferers.simcenter_inferer.simCenter_inferer"]], "brails.inferers.user_inferer package": [[53, "module-brails.inferers.user_inferer"]], "brails.inferers.user_inferer.content_value_inferer module": [[54, "module-brails.inferers.user_inferer.content_value_inferer"]], "brails.inferers.user_inferer.floor_area_inferer module": [[55, "module-brails.inferers.user_inferer.floor_area_inferer"]], "brails.inferers.user_inferer.user_inferer module": [[56, "module-brails.inferers.user_inferer.user_inferer"]], "brails.processors package": [[57, "module-brails.processors"]], "brails.processors.building_material_llm package": [[58, "module-brails.processors.building_material_llm"]], "brails.processors.building_material_llm.building_material_llm module": [[59, "module-brails.processors.building_material_llm.building_material_llm"]], "brails.processors.chimney_detector package": [[60, "module-brails.processors.chimney_detector"]], "brails.processors.chimney_detector.chimney_detector module": [[61, "module-brails.processors.chimney_detector.chimney_detector"]], "brails.processors.chimney_detector.lib package": [[62, "module-brails.processors.chimney_detector.lib"]], "brails.processors.chimney_detector.lib.backbone module": [[63, "module-brails.processors.chimney_detector.lib.backbone"]], "brails.processors.chimney_detector.lib.efficientdet package": [[64, "module-brails.processors.chimney_detector.lib.efficientdet"]], "brails.processors.chimney_detector.lib.efficientdet.coco module": [[65, "module-brails.processors.chimney_detector.lib.efficientdet.coco"]], "brails.processors.chimney_detector.lib.efficientdet.config module": [[66, "module-brails.processors.chimney_detector.lib.efficientdet.config"]], "brails.processors.chimney_detector.lib.efficientdet.dataset module": [[67, "module-brails.processors.chimney_detector.lib.efficientdet.dataset"]], "brails.processors.chimney_detector.lib.efficientdet.loss module": [[68, "module-brails.processors.chimney_detector.lib.efficientdet.loss"]], "brails.processors.chimney_detector.lib.efficientdet.model module": [[69, "module-brails.processors.chimney_detector.lib.efficientdet.model"]], "brails.processors.chimney_detector.lib.efficientdet.utils module": [[70, "module-brails.processors.chimney_detector.lib.efficientdet.utils"]], "brails.processors.chimney_detector.lib.efficientnet package": [[71, "module-brails.processors.chimney_detector.lib.efficientnet"]], "brails.processors.chimney_detector.lib.efficientnet.model module": [[72, "module-brails.processors.chimney_detector.lib.efficientnet.model"]], "brails.processors.chimney_detector.lib.efficientnet.utils module": [[73, "module-brails.processors.chimney_detector.lib.efficientnet.utils"]], "brails.processors.chimney_detector.lib.efficientnet.utils_extra module": [[74, "module-brails.processors.chimney_detector.lib.efficientnet.utils_extra"]], "brails.processors.chimney_detector.lib.infer_detector module": [[75, "module-brails.processors.chimney_detector.lib.infer_detector"]], "brails.processors.chimney_detector.lib.train_detector module": [[76, "module-brails.processors.chimney_detector.lib.train_detector"]], "brails.processors.chimney_detector.lib.utils package": [[77, "module-brails.processors.chimney_detector.lib.utils"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm package": [[78, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm module": [[79, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl module": [[80, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm module": [[81, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate module": [[82, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest module": [[83, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest"]], "brails.processors.chimney_detector.lib.utils.utils module": [[84, "module-brails.processors.chimney_detector.lib.utils.utils"]], "brails.processors.cons_type_classifier package": [[85, "module-brails.processors.cons_type_classifier"]], "brails.processors.cons_type_classifier.ConstructionTypeClassifier module": [[86, "module-brails.processors.cons_type_classifier.ConstructionTypeClassifier"]], "brails.processors.facade_parser package": [[87, "module-brails.processors.facade_parser"]], "brails.processors.facade_parser.facade_parser module": [[88, "module-brails.processors.facade_parser.facade_parser"]], "brails.processors.ffh_predictor_klepac package": [[89, "module-brails.processors.ffh_predictor_klepac"]], "brails.processors.ffh_predictor_klepac.ffh_predictor_klepac module": [[90, "module-brails.processors.ffh_predictor_klepac.ffh_predictor_klepac"]], "brails.processors.foundation_classifier package": [[91, "module-brails.processors.foundation_classifier"]], "brails.processors.foundation_classifier.attention_utils package": [[92, "module-brails.processors.foundation_classifier.attention_utils"]], "brails.processors.foundation_classifier.attention_utils.radam module": [[93, "module-brails.processors.foundation_classifier.attention_utils.radam"]], "brails.processors.foundation_classifier.attention_utils.utils module": [[94, "module-brails.processors.foundation_classifier.attention_utils.utils"]], "brails.processors.foundation_classifier.csail_segmentation_tool package": [[95, "module-brails.processors.foundation_classifier.csail_segmentation_tool"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg package": [[96, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config package": [[97, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults module": [[98, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data package": [[99, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset module": [[100, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval module": [[101, "brails-processors-foundation-classifier-csail-segmentation-tool-csail-seg-eval-module"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval_multipro module": [[102, "brails-processors-foundation-classifier-csail-segmentation-tool-csail-seg-eval-multipro-module"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib package": [[103, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn package": [[104, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules package": [[105, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm module": [[106, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm module": [[107, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate module": [[108, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest module": [[109, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel package": [[110, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel module": [[111, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils package": [[112, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data package": [[113, "brails-processors-foundation-classifier-csail-segmentation-tool-csail-seg-lib-utils-data-package"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataloader module": [[114, "brails-processors-foundation-classifier-csail-segmentation-tool-csail-seg-lib-utils-data-dataloader-module"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset module": [[115, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.distributed module": [[116, "brails-processors-foundation-classifier-csail-segmentation-tool-csail-seg-lib-utils-data-distributed-module"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler module": [[117, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th module": [[118, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models package": [[119, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet module": [[120, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet module": [[121, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models module": [[122, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet module": [[123, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext module": [[124, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils module": [[125, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.test module": [[126, "brails-processors-foundation-classifier-csail-segmentation-tool-csail-seg-test-module"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.train module": [[127, "brails-processors-foundation-classifier-csail-segmentation-tool-csail-seg-train-module"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils module": [[128, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation module": [[129, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation"]], "brails.processors.foundation_classifier.detect module": [[130, "brails-processors-foundation-classifier-detect-module"]], "brails.processors.foundation_classifier.foundation_classifier module": [[131, "module-brails.processors.foundation_classifier.foundation_classifier"]], "brails.processors.foundation_classifier.lib package": [[132, "module-brails.processors.foundation_classifier.lib"]], "brails.processors.foundation_classifier.lib.LinearAverage module": [[133, "module-brails.processors.foundation_classifier.lib.LinearAverage"]], "brails.processors.foundation_classifier.lib.NCEAverage module": [[134, "module-brails.processors.foundation_classifier.lib.NCEAverage"]], "brails.processors.foundation_classifier.lib.NCECriterion module": [[135, "module-brails.processors.foundation_classifier.lib.NCECriterion"]], "brails.processors.foundation_classifier.lib.alias_multinomial module": [[136, "module-brails.processors.foundation_classifier.lib.alias_multinomial"]], "brails.processors.foundation_classifier.lib.custom_transforms module": [[137, "module-brails.processors.foundation_classifier.lib.custom_transforms"]], "brails.processors.foundation_classifier.lib.normalize module": [[138, "module-brails.processors.foundation_classifier.lib.normalize"]], "brails.processors.foundation_classifier.lib.utils module": [[139, "module-brails.processors.foundation_classifier.lib.utils"]], "brails.processors.foundation_classifier.models package": [[140, "module-brails.processors.foundation_classifier.models"]], "brails.processors.foundation_classifier.models.attention_module module": [[141, "module-brails.processors.foundation_classifier.models.attention_module"]], "brails.processors.foundation_classifier.models.basic_layer module": [[142, "module-brails.processors.foundation_classifier.models.basic_layer"]], "brails.processors.foundation_classifier.models.residual_attention_network module": [[143, "module-brails.processors.foundation_classifier.models.residual_attention_network"]], "brails.processors.foundation_classifier.models.resnet_applied module": [[144, "module-brails.processors.foundation_classifier.models.resnet_applied"]], "brails.processors.foundation_classifier.models.sknet module": [[145, "module-brails.processors.foundation_classifier.models.sknet"]], "brails.processors.foundation_classifier.npid package": [[146, "module-brails.processors.foundation_classifier.npid"]], "brails.processors.foundation_classifier.npid.MDistance module": [[147, "brails-processors-foundation-classifier-npid-mdistance-module"]], "brails.processors.foundation_classifier.npid.cifar module": [[148, "brails-processors-foundation-classifier-npid-cifar-module"]], "brails.processors.foundation_classifier.npid.main module": [[149, "brails-processors-foundation-classifier-npid-main-module"]], "brails.processors.foundation_classifier.npid.npid_datasets package": [[150, "module-brails.processors.foundation_classifier.npid.npid_datasets"]], "brails.processors.foundation_classifier.npid.npid_datasets.cifar module": [[151, "module-brails.processors.foundation_classifier.npid.npid_datasets.cifar"]], "brails.processors.foundation_classifier.npid.npid_datasets.folder module": [[152, "module-brails.processors.foundation_classifier.npid.npid_datasets.folder"]], "brails.processors.foundation_classifier.npid.npid_datasets.mnist module": [[153, "module-brails.processors.foundation_classifier.npid.npid_datasets.mnist"]], "brails.processors.foundation_classifier.npid.npid_lib package": [[154, "module-brails.processors.foundation_classifier.npid.npid_lib"]], "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage module": [[155, "module-brails.processors.foundation_classifier.npid.npid_lib.LinearAverage"]], "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage module": [[156, "module-brails.processors.foundation_classifier.npid.npid_lib.NCEAverage"]], "brails.processors.foundation_classifier.npid.npid_lib.NCECriterion module": [[157, "module-brails.processors.foundation_classifier.npid.npid_lib.NCECriterion"]], "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial module": [[158, "module-brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial"]], "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms module": [[159, "module-brails.processors.foundation_classifier.npid.npid_lib.custom_transforms"]], "brails.processors.foundation_classifier.npid.npid_lib.normalize module": [[160, "module-brails.processors.foundation_classifier.npid.npid_lib.normalize"]], "brails.processors.foundation_classifier.npid.npid_lib.utils module": [[161, "module-brails.processors.foundation_classifier.npid.npid_lib.utils"]], "brails.processors.foundation_classifier.npid.npid_models package": [[162, "brails-processors-foundation-classifier-npid-npid-models-package"]], "brails.processors.foundation_classifier.npid.npid_models.resnet module": [[163, "brails-processors-foundation-classifier-npid-npid-models-resnet-module"]], "brails.processors.foundation_classifier.npid.npid_models.resnet_cifar module": [[164, "brails-processors-foundation-classifier-npid-npid-models-resnet-cifar-module"]], "brails.processors.foundation_classifier.npid.npid_toolbox package": [[165, "module-brails.processors.foundation_classifier.npid.npid_toolbox"]], "brails.processors.foundation_classifier.npid.npid_toolbox.calculate_all_distances module": [[166, "brails-processors-foundation-classifier-npid-npid-toolbox-calculate-all-distances-module"]], "brails.processors.foundation_classifier.npid.test module": [[167, "brails-processors-foundation-classifier-npid-test-module"]], "brails.processors.foundation_classifier.save_masked_images module": [[168, "brails-processors-foundation-classifier-save-masked-images-module"]], "brails.processors.foundation_classifier.train module": [[169, "brails-processors-foundation-classifier-train-module"]], "brails.processors.foundation_classifier.utils package": [[170, "module-brails.processors.foundation_classifier.utils"]], "brails.processors.foundation_classifier.utils.Datasets module": [[171, "module-brails.processors.foundation_classifier.utils.Datasets"]], "brails.processors.foundation_classifier.utils.generate_csv module": [[172, "brails-processors-foundation-classifier-utils-generate-csv-module"]], "brails.processors.garage_detector package": [[173, "module-brails.processors.garage_detector"]], "brails.processors.garage_detector.garage_detector module": [[174, "module-brails.processors.garage_detector.garage_detector"]], "brails.processors.garage_detector.lib package": [[175, "module-brails.processors.garage_detector.lib"]], "brails.processors.garage_detector.lib.backbone module": [[176, "module-brails.processors.garage_detector.lib.backbone"]], "brails.processors.garage_detector.lib.efficientdet package": [[177, "module-brails.processors.garage_detector.lib.efficientdet"]], "brails.processors.garage_detector.lib.efficientdet.coco module": [[178, "module-brails.processors.garage_detector.lib.efficientdet.coco"]], "brails.processors.garage_detector.lib.efficientdet.config module": [[179, "module-brails.processors.garage_detector.lib.efficientdet.config"]], "brails.processors.garage_detector.lib.efficientdet.dataset module": [[180, "module-brails.processors.garage_detector.lib.efficientdet.dataset"]], "brails.processors.garage_detector.lib.efficientdet.loss module": [[181, "module-brails.processors.garage_detector.lib.efficientdet.loss"]], "brails.processors.garage_detector.lib.efficientdet.model module": [[182, "module-brails.processors.garage_detector.lib.efficientdet.model"]], "brails.processors.garage_detector.lib.efficientdet.utils module": [[183, "module-brails.processors.garage_detector.lib.efficientdet.utils"]], "brails.processors.garage_detector.lib.efficientnet package": [[184, "module-brails.processors.garage_detector.lib.efficientnet"]], "brails.processors.garage_detector.lib.efficientnet.model module": [[185, "module-brails.processors.garage_detector.lib.efficientnet.model"]], "brails.processors.garage_detector.lib.efficientnet.utils module": [[186, "module-brails.processors.garage_detector.lib.efficientnet.utils"]], "brails.processors.garage_detector.lib.efficientnet.utils_extra module": [[187, "module-brails.processors.garage_detector.lib.efficientnet.utils_extra"]], "brails.processors.garage_detector.lib.infer_detector module": [[188, "module-brails.processors.garage_detector.lib.infer_detector"]], "brails.processors.garage_detector.lib.train_detector module": [[189, "module-brails.processors.garage_detector.lib.train_detector"]], "brails.processors.garage_detector.lib.utils package": [[190, "module-brails.processors.garage_detector.lib.utils"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm package": [[191, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm module": [[192, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl module": [[193, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm module": [[194, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.comm"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate module": [[195, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest module": [[196, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest"]], "brails.processors.garage_detector.lib.utils.utils module": [[197, "module-brails.processors.garage_detector.lib.utils.utils"]], "brails.processors.gpt_base_model package": [[198, "module-brails.processors.gpt_base_model"]], "brails.processors.gpt_base_model.GPT module": [[199, "module-brails.processors.gpt_base_model.GPT"]], "brails.processors.gpt_base_model.utils module": [[200, "module-brails.processors.gpt_base_model.utils"]], "brails.processors.image_classifier package": [[201, "module-brails.processors.image_classifier"]], "brails.processors.image_classifier.image_classifier module": [[202, "module-brails.processors.image_classifier.image_classifier"]], "brails.processors.image_processor module": [[203, "module-brails.processors.image_processor"]], "brails.processors.image_segmenter package": [[204, "module-brails.processors.image_segmenter"]], "brails.processors.image_segmenter.image_segmenter module": [[205, "module-brails.processors.image_segmenter.image_segmenter"]], "brails.processors.nFloor_gpt package": [[206, "module-brails.processors.nFloor_gpt"]], "brails.processors.nFloor_gpt.nFloor_gpt module": [[207, "module-brails.processors.nFloor_gpt.nFloor_gpt"]], "brails.processors.nFloor_vlm package": [[208, "module-brails.processors.nFloor_vlm"]], "brails.processors.nFloor_vlm.nFloor_vlm module": [[209, "module-brails.processors.nFloor_vlm.nFloor_vlm"]], "brails.processors.nfloors_detector package": [[210, "module-brails.processors.nfloors_detector"]], "brails.processors.nfloors_detector.lib package": [[211, "module-brails.processors.nfloors_detector.lib"]], "brails.processors.nfloors_detector.lib.backbone module": [[212, "module-brails.processors.nfloors_detector.lib.backbone"]], "brails.processors.nfloors_detector.lib.efficientdet package": [[213, "module-brails.processors.nfloors_detector.lib.efficientdet"]], "brails.processors.nfloors_detector.lib.efficientdet.coco module": [[214, "module-brails.processors.nfloors_detector.lib.efficientdet.coco"]], "brails.processors.nfloors_detector.lib.efficientdet.config module": [[215, "module-brails.processors.nfloors_detector.lib.efficientdet.config"]], "brails.processors.nfloors_detector.lib.efficientdet.dataset module": [[216, "module-brails.processors.nfloors_detector.lib.efficientdet.dataset"]], "brails.processors.nfloors_detector.lib.efficientdet.loss module": [[217, "module-brails.processors.nfloors_detector.lib.efficientdet.loss"]], "brails.processors.nfloors_detector.lib.efficientdet.model module": [[218, "module-brails.processors.nfloors_detector.lib.efficientdet.model"]], "brails.processors.nfloors_detector.lib.efficientdet.utils module": [[219, "module-brails.processors.nfloors_detector.lib.efficientdet.utils"]], "brails.processors.nfloors_detector.lib.efficientnet package": [[220, "module-brails.processors.nfloors_detector.lib.efficientnet"]], "brails.processors.nfloors_detector.lib.efficientnet.model module": [[221, "module-brails.processors.nfloors_detector.lib.efficientnet.model"]], "brails.processors.nfloors_detector.lib.efficientnet.utils module": [[222, "module-brails.processors.nfloors_detector.lib.efficientnet.utils"]], "brails.processors.nfloors_detector.lib.efficientnet.utils_extra module": [[223, "module-brails.processors.nfloors_detector.lib.efficientnet.utils_extra"]], "brails.processors.nfloors_detector.lib.infer_detector module": [[224, "module-brails.processors.nfloors_detector.lib.infer_detector"]], "brails.processors.nfloors_detector.lib.train_detector module": [[225, "module-brails.processors.nfloors_detector.lib.train_detector"]], "brails.processors.nfloors_detector.lib.utils package": [[226, "module-brails.processors.nfloors_detector.lib.utils"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm package": [[227, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm module": [[228, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl module": [[229, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm module": [[230, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate module": [[231, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest module": [[232, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest"]], "brails.processors.nfloors_detector.lib.utils.utils module": [[233, "module-brails.processors.nfloors_detector.lib.utils.utils"]], "brails.processors.nfloors_detector.nfloor_detector module": [[234, "module-brails.processors.nfloors_detector.nfloor_detector"]], "brails.processors.occupancy_classifier package": [[235, "module-brails.processors.occupancy_classifier"]], "brails.processors.occupancy_classifier.occupancy_classifier module": [[236, "module-brails.processors.occupancy_classifier.occupancy_classifier"]], "brails.processors.other_idea package": [[237, "module-brails.processors.other_idea"]], "brails.processors.other_idea.arial_processing module": [[238, "module-brails.processors.other_idea.arial_processing"]], "brails.processors.other_idea.street_processor module": [[239, "module-brails.processors.other_idea.street_processor"]], "brails.processors.roof_shape_classifier package": [[240, "module-brails.processors.roof_shape_classifier"]], "brails.processors.roof_shape_classifier.roof_shape_classifier module": [[241, "module-brails.processors.roof_shape_classifier.roof_shape_classifier"]], "brails.processors.roof_shape_gpt package": [[242, "module-brails.processors.roof_shape_gpt"]], "brails.processors.roof_shape_gpt.roof_shape_gpt module": [[243, "module-brails.processors.roof_shape_gpt.roof_shape_gpt"]], "brails.processors.roof_shape_vlm package": [[244, "module-brails.processors.roof_shape_vlm"]], "brails.processors.roof_shape_vlm.roof_shape_vlm module": [[245, "module-brails.processors.roof_shape_vlm.roof_shape_vlm"]], "brails.processors.street_level_damage_detection package": [[246, "module-brails.processors.street_level_damage_detection"]], "brails.processors.street_level_damage_detection.street_level_damage_detection module": [[247, "module-brails.processors.street_level_damage_detection.street_level_damage_detection"]], "brails.processors.vlm_image_classifier package": [[248, "module-brails.processors.vlm_image_classifier"]], "brails.processors.vlm_image_classifier.CLIPClassifier module": [[249, "module-brails.processors.vlm_image_classifier.CLIPClassifier"]], "brails.processors.vlm_image_classifier.clip package": [[250, "module-brails.processors.vlm_image_classifier.clip"]], "brails.processors.vlm_image_classifier.clip.clip module": [[251, "module-brails.processors.vlm_image_classifier.clip.clip"]], "brails.processors.vlm_image_classifier.clip.model module": [[252, "module-brails.processors.vlm_image_classifier.clip.model"]], "brails.processors.vlm_image_classifier.clip.simple_tokenizer module": [[253, "module-brails.processors.vlm_image_classifier.clip.simple_tokenizer"]], "brails.processors.vlm_image_classifier.clip.utils module": [[254, "module-brails.processors.vlm_image_classifier.clip.utils"]], "brails.processors.vlm_segmenter package": [[255, "module-brails.processors.vlm_segmenter"]], "brails.processors.vlm_segmenter.grounded_sam_utils module": [[256, "module-brails.processors.vlm_segmenter.grounded_sam_utils"]], "brails.processors.vlm_segmenter.segment_anything package": [[257, "module-brails.processors.vlm_segmenter.segment_anything"]], "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator module": [[258, "module-brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator"]], "brails.processors.vlm_segmenter.segment_anything.build_sam module": [[259, "module-brails.processors.vlm_segmenter.segment_anything.build_sam"]], "brails.processors.vlm_segmenter.segment_anything.build_sam_hq module": [[260, "module-brails.processors.vlm_segmenter.segment_anything.build_sam_hq"]], "brails.processors.vlm_segmenter.segment_anything.modeling package": [[261, "module-brails.processors.vlm_segmenter.segment_anything.modeling"]], "brails.processors.vlm_segmenter.segment_anything.modeling.common module": [[262, "module-brails.processors.vlm_segmenter.segment_anything.modeling.common"]], "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder module": [[263, "module-brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder module": [[264, "module-brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq module": [[265, "module-brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq"]], "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder module": [[266, "module-brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder"]], "brails.processors.vlm_segmenter.segment_anything.modeling.sam module": [[267, "module-brails.processors.vlm_segmenter.segment_anything.modeling.sam"]], "brails.processors.vlm_segmenter.segment_anything.modeling.transformer module": [[268, "module-brails.processors.vlm_segmenter.segment_anything.modeling.transformer"]], "brails.processors.vlm_segmenter.segment_anything.predictor module": [[269, "module-brails.processors.vlm_segmenter.segment_anything.predictor"]], "brails.processors.vlm_segmenter.segment_anything.utils package": [[270, "module-brails.processors.vlm_segmenter.segment_anything.utils"]], "brails.processors.vlm_segmenter.segment_anything.utils.amg module": [[271, "module-brails.processors.vlm_segmenter.segment_anything.utils.amg"]], "brails.processors.vlm_segmenter.segment_anything.utils.onnx module": [[272, "module-brails.processors.vlm_segmenter.segment_anything.utils.onnx"]], "brails.processors.vlm_segmenter.segment_anything.utils.transforms module": [[273, "module-brails.processors.vlm_segmenter.segment_anything.utils.transforms"]], "brails.processors.vlm_segmenter.vlm_segmenter module": [[274, "module-brails.processors.vlm_segmenter.vlm_segmenter"]], "brails.processors.year_built_classifier package": [[275, "module-brails.processors.year_built_classifier"]], "brails.processors.year_built_classifier.Resnet module": [[276, "module-brails.processors.year_built_classifier.Resnet"]], "brails.processors.year_built_classifier.detect module": [[277, "brails-processors-year-built-classifier-detect-module"]], "brails.processors.year_built_classifier.lib package": [[278, "module-brails.processors.year_built_classifier.lib"]], "brails.processors.year_built_classifier.lib.datasets module": [[279, "module-brails.processors.year_built_classifier.lib.datasets"]], "brails.processors.year_built_classifier.lib.utils module": [[280, "module-brails.processors.year_built_classifier.lib.utils"]], "brails.processors.year_built_classifier.model module": [[281, "module-brails.processors.year_built_classifier.model"]], "brails.processors.year_built_classifier.train module": [[282, "brails-processors-year-built-classifier-train-module"]], "brails.processors.year_built_classifier.weights package": [[283, "module-brails.processors.year_built_classifier.weights"]], "brails.processors.year_built_classifier.year_built_classifier module": [[284, "module-brails.processors.year_built_classifier.year_built_classifier"]], "brails.scrapers package": [[285, "module-brails.scrapers"]], "brails.scrapers.asce_hazard_data_scraper package": [[286, "module-brails.scrapers.asce_hazard_data_scraper"]], "brails.scrapers.asce_hazard_data_scraper.asce_hazard_data_scraper module": [[287, "brails-scrapers-asce-hazard-data-scraper-asce-hazard-data-scraper-module"]], "brails.scrapers.asset_data_augmenter module": [[288, "module-brails.scrapers.asset_data_augmenter"]], "brails.scrapers.fema_firm_scraper package": [[289, "module-brails.scrapers.fema_firm_scraper"]], "brails.scrapers.fema_firm_scraper.fema_firm_scraper module": [[290, "module-brails.scrapers.fema_firm_scraper.fema_firm_scraper"]], "brails.scrapers.footprint_scraper module": [[291, "module-brails.scrapers.footprint_scraper"]], "brails.scrapers.google_satellite package": [[292, "module-brails.scrapers.google_satellite"]], "brails.scrapers.google_satellite.google_satellite module": [[293, "module-brails.scrapers.google_satellite.google_satellite"]], "brails.scrapers.google_streetview package": [[294, "module-brails.scrapers.google_streetview"]], "brails.scrapers.google_streetview.google_streetview module": [[295, "module-brails.scrapers.google_streetview.google_streetview"]], "brails.scrapers.image_scraper module": [[296, "module-brails.scrapers.image_scraper"]], "brails.scrapers.ms_footprint_scraper package": [[297, "module-brails.scrapers.ms_footprint_scraper"]], "brails.scrapers.ms_footprint_scraper.ms_footprint_handler module": [[298, "module-brails.scrapers.ms_footprint_scraper.ms_footprint_handler"]], "brails.scrapers.nbi_scraper package": [[299, "module-brails.scrapers.nbi_scraper"]], "brails.scrapers.nbi_scraper.nbi_scraper module": [[300, "module-brails.scrapers.nbi_scraper.nbi_scraper"]], "brails.scrapers.nsi_parser package": [[301, "module-brails.scrapers.nsi_parser"]], "brails.scrapers.nsi_parser.nsi_parser module": [[302, "module-brails.scrapers.nsi_parser.nsi_parser"]], "brails.scrapers.nti_scraper package": [[303, "module-brails.scrapers.nti_scraper"]], "brails.scrapers.nti_scraper.nti_scraper module": [[304, "module-brails.scrapers.nti_scraper.nti_scraper"]], "brails.scrapers.osm_footprint_scraper package": [[305, "module-brails.scrapers.osm_footprint_scraper"]], "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper module": [[306, "module-brails.scrapers.osm_footprint_scraper.osm_footprint_scraper"]], "brails.scrapers.osm_power_network_scraper package": [[307, "module-brails.scrapers.osm_power_network_scraper"]], "brails.scrapers.osm_power_network_scraper.osm_power_network_scraper module": [[308, "module-brails.scrapers.osm_power_network_scraper.osm_power_network_scraper"]], "brails.scrapers.overture_maps_scraper package": [[309, "module-brails.scrapers.overture_maps_scraper"]], "brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper module": [[310, "module-brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper"]], "brails.scrapers.overture_maps_scraper.overture_maps_scraper module": [[311, "module-brails.scrapers.overture_maps_scraper.overture_maps_scraper"]], "brails.scrapers.usa_footprint_scraper package": [[312, "module-brails.scrapers.usa_footprint_scraper"]], "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper module": [[313, "module-brails.scrapers.usa_footprint_scraper.usa_footprint_scraper"]], "brails.scrapers.user_footprints module": [[314, "module-brails.scrapers.user_footprints"]], "brails.scrapers.usgs_data_scrapers package": [[315, "module-brails.scrapers.usgs_data_scrapers"]], "brails.scrapers.usgs_data_scrapers.nlcd_scraper module": [[316, "module-brails.scrapers.usgs_data_scrapers.nlcd_scraper"]], "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper module": [[317, "module-brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper"]], "brails.types package": [[318, "module-brails.types"]], "brails.types.asset_inventory module": [[319, "module-brails.types.asset_inventory"]], "brails.types.asset_inventory.Asset": [[346, "brails-types-asset-inventory-asset"]], "brails.types.asset_inventory.AssetInventory": [[347, "brails-types-asset-inventory-assetinventory"]], "brails.types.image_set module": [[320, "module-brails.types.image_set"]], "brails.types.image_set.Image": [[348, "brails-types-image-set-image"]], "brails.types.image_set.ImageSet": [[349, "brails-types-image-set-imageset"]], "brails.types.region_boundary module": [[321, "module-brails.types.region_boundary"]], "brails.types.region_boundary.RegionBoundary": [[350, "brails-types-region-boundary-regionboundary"]], "brails.utils package": [[322, "module-brails.utils"]], "brails.utils.arcgisapi_service_helper module": [[323, "module-brails.utils.arcgisapi_service_helper"]], "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper": [[351, "brails-utils-arcgisapi-service-helper-arcgisapiservicehelper"]], "brails.utils.geo_tools module": [[324, "module-brails.utils.geo_tools"]], "brails.utils.geo_tools.GeoTools": [[352, "brails-utils-geo-tools-geotools"]], "brails.utils.importer module": [[325, "module-brails.utils.importer"]], "brails.utils.importer.Importer": [[353, "brails-utils-importer-importer"]], "brails.utils.input_validator module": [[326, "module-brails.utils.input_validator"]], "brails.utils.input_validator.InputValidator": [[354, "brails-utils-input-validator-inputvalidator"]], "brails.utils.inventory_validator module": [[327, "module-brails.utils.inventory_validator"]], "brails.utils.inventory_validator.InventoryValidator": [[355, "brails-utils-inventory-validator-inventoryvalidator"]], "brails.utils.model_utils module": [[328, "module-brails.utils.model_utils"]], "brails.utils.model_utils.ModelUtils": [[356, "brails-utils-model-utils-modelutils"]], "brails.utils.plot_tools module": [[329, "module-brails.utils.plot_tools"]], "brails.utils.plot_tools.PlotTools": [[357, "brails-utils-plot-tools-plottools"]], "brails.utils.rapid_utils module": [[330, "module-brails.utils.rapid_utils"]], "brails.utils.rapid_utils.RAPIDUtils": [[358, "brails-utils-rapid-utils-rapidutils"]], "brails.utils.segmentation_utils module": [[331, "module-brails.utils.segmentation_utils"]], "brails.utils.segmentation_utils.SegmentationUtils": [[359, "brails-utils-segmentation-utils-segmentationutils"]], "brails.utils.spatial_join_methods package": [[332, "module-brails.utils.spatial_join_methods"]], "brails.utils.spatial_join_methods.base module": [[333, "module-brails.utils.spatial_join_methods.base"]], "brails.utils.spatial_join_methods.base.SpatialJoinMethods": [[360, "brails-utils-spatial-join-methods-base-spatialjoinmethods"]], "brails.utils.spatial_join_methods.distance_based_point_matcher module": [[334, "module-brails.utils.spatial_join_methods.distance_based_point_matcher"]], "brails.utils.spatial_join_methods.distance_based_point_matcher.DistanceBasedPointMatcher": [[361, "brails-utils-spatial-join-methods-distance-based-point-matcher-distancebasedpointmatcher"]], "brails.utils.spatial_join_methods.get_points_in_polygons module": [[335, "module-brails.utils.spatial_join_methods.get_points_in_polygons"]], "brails.utils.spatial_join_methods.get_points_in_polygons.GetPointsInPolygons": [[362, "brails-utils-spatial-join-methods-get-points-in-polygons-getpointsinpolygons"]], "brails.utils.spatial_join_methods.get_points_near_polygons module": [[336, "module-brails.utils.spatial_join_methods.get_points_near_polygons"]], "brails.utils.spatial_join_methods.get_points_near_polygons.GetPointsNearPolygons": [[363, "brails-utils-spatial-join-methods-get-points-near-polygons-getpointsnearpolygons"]], "brails.utils.unit_converter module": [[337, "module-brails.utils.unit_converter"]], "brails.utils.unit_converter.UnitConverter": [[364, "brails-utils-unit-converter-unitconverter"]]}, "docnames": ["examples/examples", "examples/footprint/footprint", "examples/image_downloads/image_downloads", "examples/image_filters/image_filters", "examples/importer/importer", "examples/imputation/imputation", "examples/nsi_integration/nsi_integration", "index", "index_old", "rst-code/brails", "rst-code/brails.constants", "rst-code/brails.exceptions", "rst-code/brails.filters", "rst-code/brails.filters.filter", "rst-code/brails.filters.house_view", "rst-code/brails.filters.house_view.house_view", "rst-code/brails.imputers", "rst-code/brails.imputers.imputation", "rst-code/brails.imputers.knn_imputer", "rst-code/brails.imputers.knn_imputer.knn_imputer", "rst-code/brails.inferers", "rst-code/brails.inferers.hazus_inferer", "rst-code/brails.inferers.hazus_inferer.hazus_inferer", "rst-code/brails.inferers.hazus_inferer.hazus_rulesets", "rst-code/brails.inferers.hazus_inferer_earthquake", "rst-code/brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake", "rst-code/brails.inferers.hazus_inferer_flood", "rst-code/brails.inferers.hazus_inferer_flood.hazus_inferer_flood", "rst-code/brails.inferers.hazus_inferer_wind", "rst-code/brails.inferers.hazus_inferer_wind.BuildingClassRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindCECBRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindCERBRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindEFRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindMECBRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindMERBRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindMHRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindMLRIRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindMLRMRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindMMUHRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindMSFRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindMetaVarRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindSECBRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindSERBRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindSPMBRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindWMUHRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindWSFRulesets", "rst-code/brails.inferers.hazus_inferer_wind.auto_HU_NJ", "rst-code/brails.inferers.hazus_inferer_wind.hazus_inferer_wind", "rst-code/brails.inferers.inference_engine", "rst-code/brails.inferers.nlcd_inferer", "rst-code/brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover", "rst-code/brails.inferers.simcenter_inferer", "rst-code/brails.inferers.simcenter_inferer.simCenter_inferer", "rst-code/brails.inferers.user_inferer", "rst-code/brails.inferers.user_inferer.content_value_inferer", "rst-code/brails.inferers.user_inferer.floor_area_inferer", "rst-code/brails.inferers.user_inferer.user_inferer", "rst-code/brails.processors", "rst-code/brails.processors.building_material_llm", "rst-code/brails.processors.building_material_llm.building_material_llm", "rst-code/brails.processors.chimney_detector", "rst-code/brails.processors.chimney_detector.chimney_detector", "rst-code/brails.processors.chimney_detector.lib", "rst-code/brails.processors.chimney_detector.lib.backbone", "rst-code/brails.processors.chimney_detector.lib.efficientdet", "rst-code/brails.processors.chimney_detector.lib.efficientdet.coco", "rst-code/brails.processors.chimney_detector.lib.efficientdet.config", "rst-code/brails.processors.chimney_detector.lib.efficientdet.dataset", "rst-code/brails.processors.chimney_detector.lib.efficientdet.loss", "rst-code/brails.processors.chimney_detector.lib.efficientdet.model", "rst-code/brails.processors.chimney_detector.lib.efficientdet.utils", "rst-code/brails.processors.chimney_detector.lib.efficientnet", "rst-code/brails.processors.chimney_detector.lib.efficientnet.model", "rst-code/brails.processors.chimney_detector.lib.efficientnet.utils", "rst-code/brails.processors.chimney_detector.lib.efficientnet.utils_extra", "rst-code/brails.processors.chimney_detector.lib.infer_detector", "rst-code/brails.processors.chimney_detector.lib.train_detector", "rst-code/brails.processors.chimney_detector.lib.utils", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest", "rst-code/brails.processors.chimney_detector.lib.utils.utils", "rst-code/brails.processors.cons_type_classifier", "rst-code/brails.processors.cons_type_classifier.ConstructionTypeClassifier", "rst-code/brails.processors.facade_parser", "rst-code/brails.processors.facade_parser.facade_parser", "rst-code/brails.processors.ffh_predictor_klepac", "rst-code/brails.processors.ffh_predictor_klepac.ffh_predictor_klepac", "rst-code/brails.processors.foundation_classifier", "rst-code/brails.processors.foundation_classifier.attention_utils", "rst-code/brails.processors.foundation_classifier.attention_utils.radam", "rst-code/brails.processors.foundation_classifier.attention_utils.utils", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval_multipro", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataloader", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.distributed", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.test", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.train", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation", "rst-code/brails.processors.foundation_classifier.detect", "rst-code/brails.processors.foundation_classifier.foundation_classifier", "rst-code/brails.processors.foundation_classifier.lib", "rst-code/brails.processors.foundation_classifier.lib.LinearAverage", "rst-code/brails.processors.foundation_classifier.lib.NCEAverage", "rst-code/brails.processors.foundation_classifier.lib.NCECriterion", "rst-code/brails.processors.foundation_classifier.lib.alias_multinomial", "rst-code/brails.processors.foundation_classifier.lib.custom_transforms", "rst-code/brails.processors.foundation_classifier.lib.normalize", "rst-code/brails.processors.foundation_classifier.lib.utils", "rst-code/brails.processors.foundation_classifier.models", "rst-code/brails.processors.foundation_classifier.models.attention_module", "rst-code/brails.processors.foundation_classifier.models.basic_layer", "rst-code/brails.processors.foundation_classifier.models.residual_attention_network", "rst-code/brails.processors.foundation_classifier.models.resnet_applied", "rst-code/brails.processors.foundation_classifier.models.sknet", "rst-code/brails.processors.foundation_classifier.npid", "rst-code/brails.processors.foundation_classifier.npid.MDistance", "rst-code/brails.processors.foundation_classifier.npid.cifar", "rst-code/brails.processors.foundation_classifier.npid.main", "rst-code/brails.processors.foundation_classifier.npid.npid_datasets", "rst-code/brails.processors.foundation_classifier.npid.npid_datasets.cifar", "rst-code/brails.processors.foundation_classifier.npid.npid_datasets.folder", "rst-code/brails.processors.foundation_classifier.npid.npid_datasets.mnist", "rst-code/brails.processors.foundation_classifier.npid.npid_lib", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.LinearAverage", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.NCEAverage", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.NCECriterion", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.custom_transforms", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.normalize", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.utils", "rst-code/brails.processors.foundation_classifier.npid.npid_models", "rst-code/brails.processors.foundation_classifier.npid.npid_models.resnet", "rst-code/brails.processors.foundation_classifier.npid.npid_models.resnet_cifar", "rst-code/brails.processors.foundation_classifier.npid.npid_toolbox", "rst-code/brails.processors.foundation_classifier.npid.npid_toolbox.calculate_all_distances", "rst-code/brails.processors.foundation_classifier.npid.test", "rst-code/brails.processors.foundation_classifier.save_masked_images", "rst-code/brails.processors.foundation_classifier.train", "rst-code/brails.processors.foundation_classifier.utils", "rst-code/brails.processors.foundation_classifier.utils.Datasets", "rst-code/brails.processors.foundation_classifier.utils.generate_csv", "rst-code/brails.processors.garage_detector", "rst-code/brails.processors.garage_detector.garage_detector", "rst-code/brails.processors.garage_detector.lib", "rst-code/brails.processors.garage_detector.lib.backbone", "rst-code/brails.processors.garage_detector.lib.efficientdet", "rst-code/brails.processors.garage_detector.lib.efficientdet.coco", "rst-code/brails.processors.garage_detector.lib.efficientdet.config", "rst-code/brails.processors.garage_detector.lib.efficientdet.dataset", "rst-code/brails.processors.garage_detector.lib.efficientdet.loss", "rst-code/brails.processors.garage_detector.lib.efficientdet.model", "rst-code/brails.processors.garage_detector.lib.efficientdet.utils", "rst-code/brails.processors.garage_detector.lib.efficientnet", "rst-code/brails.processors.garage_detector.lib.efficientnet.model", "rst-code/brails.processors.garage_detector.lib.efficientnet.utils", "rst-code/brails.processors.garage_detector.lib.efficientnet.utils_extra", "rst-code/brails.processors.garage_detector.lib.infer_detector", "rst-code/brails.processors.garage_detector.lib.train_detector", "rst-code/brails.processors.garage_detector.lib.utils", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.comm", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest", "rst-code/brails.processors.garage_detector.lib.utils.utils", "rst-code/brails.processors.gpt_base_model", "rst-code/brails.processors.gpt_base_model.GPT", "rst-code/brails.processors.gpt_base_model.utils", "rst-code/brails.processors.image_classifier", "rst-code/brails.processors.image_classifier.image_classifier", "rst-code/brails.processors.image_processor", "rst-code/brails.processors.image_segmenter", "rst-code/brails.processors.image_segmenter.image_segmenter", "rst-code/brails.processors.nFloor_gpt", "rst-code/brails.processors.nFloor_gpt.nFloor_gpt", "rst-code/brails.processors.nFloor_vlm", "rst-code/brails.processors.nFloor_vlm.nFloor_vlm", "rst-code/brails.processors.nfloors_detector", "rst-code/brails.processors.nfloors_detector.lib", "rst-code/brails.processors.nfloors_detector.lib.backbone", "rst-code/brails.processors.nfloors_detector.lib.efficientdet", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.coco", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.config", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.dataset", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.loss", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.model", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.utils", "rst-code/brails.processors.nfloors_detector.lib.efficientnet", "rst-code/brails.processors.nfloors_detector.lib.efficientnet.model", "rst-code/brails.processors.nfloors_detector.lib.efficientnet.utils", "rst-code/brails.processors.nfloors_detector.lib.efficientnet.utils_extra", "rst-code/brails.processors.nfloors_detector.lib.infer_detector", "rst-code/brails.processors.nfloors_detector.lib.train_detector", "rst-code/brails.processors.nfloors_detector.lib.utils", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest", "rst-code/brails.processors.nfloors_detector.lib.utils.utils", "rst-code/brails.processors.nfloors_detector.nfloor_detector", "rst-code/brails.processors.occupancy_classifier", "rst-code/brails.processors.occupancy_classifier.occupancy_classifier", "rst-code/brails.processors.other_idea", "rst-code/brails.processors.other_idea.arial_processing", "rst-code/brails.processors.other_idea.street_processor", "rst-code/brails.processors.roof_shape_classifier", "rst-code/brails.processors.roof_shape_classifier.roof_shape_classifier", "rst-code/brails.processors.roof_shape_gpt", "rst-code/brails.processors.roof_shape_gpt.roof_shape_gpt", "rst-code/brails.processors.roof_shape_vlm", "rst-code/brails.processors.roof_shape_vlm.roof_shape_vlm", "rst-code/brails.processors.street_level_damage_detection", "rst-code/brails.processors.street_level_damage_detection.street_level_damage_detection", "rst-code/brails.processors.vlm_image_classifier", "rst-code/brails.processors.vlm_image_classifier.CLIPClassifier", "rst-code/brails.processors.vlm_image_classifier.clip", "rst-code/brails.processors.vlm_image_classifier.clip.clip", "rst-code/brails.processors.vlm_image_classifier.clip.model", "rst-code/brails.processors.vlm_image_classifier.clip.simple_tokenizer", "rst-code/brails.processors.vlm_image_classifier.clip.utils", "rst-code/brails.processors.vlm_segmenter", "rst-code/brails.processors.vlm_segmenter.grounded_sam_utils", "rst-code/brails.processors.vlm_segmenter.segment_anything", "rst-code/brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator", "rst-code/brails.processors.vlm_segmenter.segment_anything.build_sam", "rst-code/brails.processors.vlm_segmenter.segment_anything.build_sam_hq", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.common", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.sam", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.transformer", "rst-code/brails.processors.vlm_segmenter.segment_anything.predictor", "rst-code/brails.processors.vlm_segmenter.segment_anything.utils", "rst-code/brails.processors.vlm_segmenter.segment_anything.utils.amg", "rst-code/brails.processors.vlm_segmenter.segment_anything.utils.onnx", "rst-code/brails.processors.vlm_segmenter.segment_anything.utils.transforms", "rst-code/brails.processors.vlm_segmenter.vlm_segmenter", "rst-code/brails.processors.year_built_classifier", "rst-code/brails.processors.year_built_classifier.Resnet", "rst-code/brails.processors.year_built_classifier.detect", "rst-code/brails.processors.year_built_classifier.lib", "rst-code/brails.processors.year_built_classifier.lib.datasets", "rst-code/brails.processors.year_built_classifier.lib.utils", "rst-code/brails.processors.year_built_classifier.model", "rst-code/brails.processors.year_built_classifier.train", "rst-code/brails.processors.year_built_classifier.weights", "rst-code/brails.processors.year_built_classifier.year_built_classifier", "rst-code/brails.scrapers", "rst-code/brails.scrapers.asce_hazard_data_scraper", "rst-code/brails.scrapers.asce_hazard_data_scraper.asce_hazard_data_scraper", "rst-code/brails.scrapers.asset_data_augmenter", "rst-code/brails.scrapers.fema_firm_scraper", "rst-code/brails.scrapers.fema_firm_scraper.fema_firm_scraper", "rst-code/brails.scrapers.footprint_scraper", "rst-code/brails.scrapers.google_satellite", "rst-code/brails.scrapers.google_satellite.google_satellite", "rst-code/brails.scrapers.google_streetview", "rst-code/brails.scrapers.google_streetview.google_streetview", "rst-code/brails.scrapers.image_scraper", "rst-code/brails.scrapers.ms_footprint_scraper", "rst-code/brails.scrapers.ms_footprint_scraper.ms_footprint_handler", "rst-code/brails.scrapers.nbi_scraper", "rst-code/brails.scrapers.nbi_scraper.nbi_scraper", "rst-code/brails.scrapers.nsi_parser", "rst-code/brails.scrapers.nsi_parser.nsi_parser", "rst-code/brails.scrapers.nti_scraper", "rst-code/brails.scrapers.nti_scraper.nti_scraper", "rst-code/brails.scrapers.osm_footprint_scraper", "rst-code/brails.scrapers.osm_footprint_scraper.osm_footprint_scraper", "rst-code/brails.scrapers.osm_power_network_scraper", "rst-code/brails.scrapers.osm_power_network_scraper.osm_power_network_scraper", "rst-code/brails.scrapers.overture_maps_scraper", "rst-code/brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper", "rst-code/brails.scrapers.overture_maps_scraper.overture_maps_scraper", "rst-code/brails.scrapers.usa_footprint_scraper", "rst-code/brails.scrapers.usa_footprint_scraper.usa_footprint_scraper", "rst-code/brails.scrapers.user_footprints", "rst-code/brails.scrapers.usgs_data_scrapers", "rst-code/brails.scrapers.usgs_data_scrapers.nlcd_scraper", "rst-code/brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper", "rst-code/brails.types", "rst-code/brails.types.asset_inventory", "rst-code/brails.types.image_set", "rst-code/brails.types.region_boundary", "rst-code/brails.utils", "rst-code/brails.utils.arcgisapi_service_helper", "rst-code/brails.utils.geo_tools", "rst-code/brails.utils.importer", "rst-code/brails.utils.input_validator", "rst-code/brails.utils.inventory_validator", "rst-code/brails.utils.model_utils", "rst-code/brails.utils.plot_tools", "rst-code/brails.utils.rapid_utils", "rst-code/brails.utils.segmentation_utils", "rst-code/brails.utils.spatial_join_methods", "rst-code/brails.utils.spatial_join_methods.base", "rst-code/brails.utils.spatial_join_methods.distance_based_point_matcher", "rst-code/brails.utils.spatial_join_methods.get_points_in_polygons", "rst-code/brails.utils.spatial_join_methods.get_points_near_polygons", "rst-code/brails.utils.unit_converter", "rst-code/modules", "rst-doc/about", "rst-doc/acknowledgements", "rst-doc/api_autosummary", "rst-doc/cite", "rst-doc/install", "rst-doc/license", "rst-doc/rst-code/brails.filters.filter.Filter", "rst-doc/rst-code/brails.types.asset_inventory.Asset", "rst-doc/rst-code/brails.types.asset_inventory.AssetInventory", "rst-doc/rst-code/brails.types.image_set.Image", "rst-doc/rst-code/brails.types.image_set.ImageSet", "rst-doc/rst-code/brails.types.region_boundary.RegionBoundary", "rst-doc/rst-code/brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper", "rst-doc/rst-code/brails.utils.geo_tools.GeoTools", "rst-doc/rst-code/brails.utils.importer.Importer", "rst-doc/rst-code/brails.utils.input_validator.InputValidator", "rst-doc/rst-code/brails.utils.inventory_validator.InventoryValidator", "rst-doc/rst-code/brails.utils.model_utils.ModelUtils", "rst-doc/rst-code/brails.utils.plot_tools.PlotTools", "rst-doc/rst-code/brails.utils.rapid_utils.RAPIDUtils", "rst-doc/rst-code/brails.utils.segmentation_utils.SegmentationUtils", "rst-doc/rst-code/brails.utils.spatial_join_methods.base.SpatialJoinMethods", "rst-doc/rst-code/brails.utils.spatial_join_methods.distance_based_point_matcher.DistanceBasedPointMatcher", "rst-doc/rst-code/brails.utils.spatial_join_methods.get_points_in_polygons.GetPointsInPolygons", "rst-doc/rst-code/brails.utils.spatial_join_methods.get_points_near_polygons.GetPointsNearPolygons", "rst-doc/rst-code/brails.utils.unit_converter.UnitConverter"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["examples/examples.rst", "examples/footprint/footprint.rst", "examples/image_downloads/image_downloads.rst", "examples/image_filters/image_filters.rst", "examples/importer/importer.rst", "examples/imputation/imputation.rst", "examples/nsi_integration/nsi_integration.rst", "index.rst", "index_old.rst", "rst-code/brails.rst", "rst-code/brails.constants.rst", "rst-code/brails.exceptions.rst", "rst-code/brails.filters.rst", "rst-code/brails.filters.filter.rst", "rst-code/brails.filters.house_view.rst", "rst-code/brails.filters.house_view.house_view.rst", "rst-code/brails.imputers.rst", "rst-code/brails.imputers.imputation.rst", "rst-code/brails.imputers.knn_imputer.rst", "rst-code/brails.imputers.knn_imputer.knn_imputer.rst", "rst-code/brails.inferers.rst", "rst-code/brails.inferers.hazus_inferer.rst", "rst-code/brails.inferers.hazus_inferer.hazus_inferer.rst", "rst-code/brails.inferers.hazus_inferer.hazus_rulesets.rst", "rst-code/brails.inferers.hazus_inferer_earthquake.rst", "rst-code/brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.rst", "rst-code/brails.inferers.hazus_inferer_flood.rst", "rst-code/brails.inferers.hazus_inferer_flood.hazus_inferer_flood.rst", "rst-code/brails.inferers.hazus_inferer_wind.rst", "rst-code/brails.inferers.hazus_inferer_wind.BuildingClassRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindCECBRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindCERBRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindEFRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindMECBRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindMERBRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindMHRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindMLRIRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindMLRMRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindMMUHRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindMSFRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindMetaVarRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindSECBRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindSERBRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindSPMBRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindWMUHRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindWSFRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.auto_HU_NJ.rst", "rst-code/brails.inferers.hazus_inferer_wind.hazus_inferer_wind.rst", "rst-code/brails.inferers.inference_engine.rst", "rst-code/brails.inferers.nlcd_inferer.rst", "rst-code/brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover.rst", "rst-code/brails.inferers.simcenter_inferer.rst", "rst-code/brails.inferers.simcenter_inferer.simCenter_inferer.rst", "rst-code/brails.inferers.user_inferer.rst", "rst-code/brails.inferers.user_inferer.content_value_inferer.rst", "rst-code/brails.inferers.user_inferer.floor_area_inferer.rst", "rst-code/brails.inferers.user_inferer.user_inferer.rst", "rst-code/brails.processors.rst", "rst-code/brails.processors.building_material_llm.rst", "rst-code/brails.processors.building_material_llm.building_material_llm.rst", "rst-code/brails.processors.chimney_detector.rst", "rst-code/brails.processors.chimney_detector.chimney_detector.rst", "rst-code/brails.processors.chimney_detector.lib.rst", "rst-code/brails.processors.chimney_detector.lib.backbone.rst", "rst-code/brails.processors.chimney_detector.lib.efficientdet.rst", "rst-code/brails.processors.chimney_detector.lib.efficientdet.coco.rst", "rst-code/brails.processors.chimney_detector.lib.efficientdet.config.rst", "rst-code/brails.processors.chimney_detector.lib.efficientdet.dataset.rst", "rst-code/brails.processors.chimney_detector.lib.efficientdet.loss.rst", "rst-code/brails.processors.chimney_detector.lib.efficientdet.model.rst", "rst-code/brails.processors.chimney_detector.lib.efficientdet.utils.rst", "rst-code/brails.processors.chimney_detector.lib.efficientnet.rst", "rst-code/brails.processors.chimney_detector.lib.efficientnet.model.rst", "rst-code/brails.processors.chimney_detector.lib.efficientnet.utils.rst", "rst-code/brails.processors.chimney_detector.lib.efficientnet.utils_extra.rst", "rst-code/brails.processors.chimney_detector.lib.infer_detector.rst", "rst-code/brails.processors.chimney_detector.lib.train_detector.rst", "rst-code/brails.processors.chimney_detector.lib.utils.rst", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.rst", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm.rst", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.rst", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.rst", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.rst", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest.rst", "rst-code/brails.processors.chimney_detector.lib.utils.utils.rst", "rst-code/brails.processors.cons_type_classifier.rst", "rst-code/brails.processors.cons_type_classifier.ConstructionTypeClassifier.rst", "rst-code/brails.processors.facade_parser.rst", "rst-code/brails.processors.facade_parser.facade_parser.rst", "rst-code/brails.processors.ffh_predictor_klepac.rst", "rst-code/brails.processors.ffh_predictor_klepac.ffh_predictor_klepac.rst", "rst-code/brails.processors.foundation_classifier.rst", "rst-code/brails.processors.foundation_classifier.attention_utils.rst", "rst-code/brails.processors.foundation_classifier.attention_utils.radam.rst", "rst-code/brails.processors.foundation_classifier.attention_utils.utils.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval_multipro.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataloader.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.distributed.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.test.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.train.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.rst", "rst-code/brails.processors.foundation_classifier.detect.rst", "rst-code/brails.processors.foundation_classifier.foundation_classifier.rst", "rst-code/brails.processors.foundation_classifier.lib.rst", "rst-code/brails.processors.foundation_classifier.lib.LinearAverage.rst", "rst-code/brails.processors.foundation_classifier.lib.NCEAverage.rst", "rst-code/brails.processors.foundation_classifier.lib.NCECriterion.rst", "rst-code/brails.processors.foundation_classifier.lib.alias_multinomial.rst", "rst-code/brails.processors.foundation_classifier.lib.custom_transforms.rst", "rst-code/brails.processors.foundation_classifier.lib.normalize.rst", "rst-code/brails.processors.foundation_classifier.lib.utils.rst", "rst-code/brails.processors.foundation_classifier.models.rst", "rst-code/brails.processors.foundation_classifier.models.attention_module.rst", "rst-code/brails.processors.foundation_classifier.models.basic_layer.rst", "rst-code/brails.processors.foundation_classifier.models.residual_attention_network.rst", "rst-code/brails.processors.foundation_classifier.models.resnet_applied.rst", "rst-code/brails.processors.foundation_classifier.models.sknet.rst", "rst-code/brails.processors.foundation_classifier.npid.rst", "rst-code/brails.processors.foundation_classifier.npid.MDistance.rst", "rst-code/brails.processors.foundation_classifier.npid.cifar.rst", "rst-code/brails.processors.foundation_classifier.npid.main.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_datasets.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_datasets.cifar.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_datasets.folder.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_datasets.mnist.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.NCECriterion.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.normalize.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.utils.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_models.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_models.resnet.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_models.resnet_cifar.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_toolbox.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_toolbox.calculate_all_distances.rst", "rst-code/brails.processors.foundation_classifier.npid.test.rst", "rst-code/brails.processors.foundation_classifier.save_masked_images.rst", "rst-code/brails.processors.foundation_classifier.train.rst", "rst-code/brails.processors.foundation_classifier.utils.rst", "rst-code/brails.processors.foundation_classifier.utils.Datasets.rst", "rst-code/brails.processors.foundation_classifier.utils.generate_csv.rst", "rst-code/brails.processors.garage_detector.rst", "rst-code/brails.processors.garage_detector.garage_detector.rst", "rst-code/brails.processors.garage_detector.lib.rst", "rst-code/brails.processors.garage_detector.lib.backbone.rst", "rst-code/brails.processors.garage_detector.lib.efficientdet.rst", "rst-code/brails.processors.garage_detector.lib.efficientdet.coco.rst", "rst-code/brails.processors.garage_detector.lib.efficientdet.config.rst", "rst-code/brails.processors.garage_detector.lib.efficientdet.dataset.rst", "rst-code/brails.processors.garage_detector.lib.efficientdet.loss.rst", "rst-code/brails.processors.garage_detector.lib.efficientdet.model.rst", "rst-code/brails.processors.garage_detector.lib.efficientdet.utils.rst", "rst-code/brails.processors.garage_detector.lib.efficientnet.rst", "rst-code/brails.processors.garage_detector.lib.efficientnet.model.rst", "rst-code/brails.processors.garage_detector.lib.efficientnet.utils.rst", "rst-code/brails.processors.garage_detector.lib.efficientnet.utils_extra.rst", "rst-code/brails.processors.garage_detector.lib.infer_detector.rst", "rst-code/brails.processors.garage_detector.lib.train_detector.rst", "rst-code/brails.processors.garage_detector.lib.utils.rst", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.rst", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm.rst", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.rst", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.rst", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.rst", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest.rst", "rst-code/brails.processors.garage_detector.lib.utils.utils.rst", "rst-code/brails.processors.gpt_base_model.rst", "rst-code/brails.processors.gpt_base_model.GPT.rst", "rst-code/brails.processors.gpt_base_model.utils.rst", "rst-code/brails.processors.image_classifier.rst", "rst-code/brails.processors.image_classifier.image_classifier.rst", "rst-code/brails.processors.image_processor.rst", "rst-code/brails.processors.image_segmenter.rst", "rst-code/brails.processors.image_segmenter.image_segmenter.rst", "rst-code/brails.processors.nFloor_gpt.rst", "rst-code/brails.processors.nFloor_gpt.nFloor_gpt.rst", "rst-code/brails.processors.nFloor_vlm.rst", "rst-code/brails.processors.nFloor_vlm.nFloor_vlm.rst", "rst-code/brails.processors.nfloors_detector.rst", "rst-code/brails.processors.nfloors_detector.lib.rst", "rst-code/brails.processors.nfloors_detector.lib.backbone.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.coco.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.config.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.dataset.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.loss.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.model.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.utils.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientnet.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientnet.model.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientnet.utils.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientnet.utils_extra.rst", "rst-code/brails.processors.nfloors_detector.lib.infer_detector.rst", "rst-code/brails.processors.nfloors_detector.lib.train_detector.rst", "rst-code/brails.processors.nfloors_detector.lib.utils.rst", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.rst", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm.rst", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.rst", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.rst", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.rst", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest.rst", "rst-code/brails.processors.nfloors_detector.lib.utils.utils.rst", "rst-code/brails.processors.nfloors_detector.nfloor_detector.rst", "rst-code/brails.processors.occupancy_classifier.rst", "rst-code/brails.processors.occupancy_classifier.occupancy_classifier.rst", "rst-code/brails.processors.other_idea.rst", "rst-code/brails.processors.other_idea.arial_processing.rst", "rst-code/brails.processors.other_idea.street_processor.rst", "rst-code/brails.processors.roof_shape_classifier.rst", "rst-code/brails.processors.roof_shape_classifier.roof_shape_classifier.rst", "rst-code/brails.processors.roof_shape_gpt.rst", "rst-code/brails.processors.roof_shape_gpt.roof_shape_gpt.rst", "rst-code/brails.processors.roof_shape_vlm.rst", "rst-code/brails.processors.roof_shape_vlm.roof_shape_vlm.rst", "rst-code/brails.processors.street_level_damage_detection.rst", "rst-code/brails.processors.street_level_damage_detection.street_level_damage_detection.rst", "rst-code/brails.processors.vlm_image_classifier.rst", "rst-code/brails.processors.vlm_image_classifier.CLIPClassifier.rst", "rst-code/brails.processors.vlm_image_classifier.clip.rst", "rst-code/brails.processors.vlm_image_classifier.clip.clip.rst", "rst-code/brails.processors.vlm_image_classifier.clip.model.rst", "rst-code/brails.processors.vlm_image_classifier.clip.simple_tokenizer.rst", "rst-code/brails.processors.vlm_image_classifier.clip.utils.rst", "rst-code/brails.processors.vlm_segmenter.rst", "rst-code/brails.processors.vlm_segmenter.grounded_sam_utils.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.build_sam.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.build_sam_hq.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.common.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.sam.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.transformer.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.predictor.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.utils.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.utils.amg.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.utils.onnx.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.utils.transforms.rst", "rst-code/brails.processors.vlm_segmenter.vlm_segmenter.rst", "rst-code/brails.processors.year_built_classifier.rst", "rst-code/brails.processors.year_built_classifier.Resnet.rst", "rst-code/brails.processors.year_built_classifier.detect.rst", "rst-code/brails.processors.year_built_classifier.lib.rst", "rst-code/brails.processors.year_built_classifier.lib.datasets.rst", "rst-code/brails.processors.year_built_classifier.lib.utils.rst", "rst-code/brails.processors.year_built_classifier.model.rst", "rst-code/brails.processors.year_built_classifier.train.rst", "rst-code/brails.processors.year_built_classifier.weights.rst", "rst-code/brails.processors.year_built_classifier.year_built_classifier.rst", "rst-code/brails.scrapers.rst", "rst-code/brails.scrapers.asce_hazard_data_scraper.rst", "rst-code/brails.scrapers.asce_hazard_data_scraper.asce_hazard_data_scraper.rst", "rst-code/brails.scrapers.asset_data_augmenter.rst", "rst-code/brails.scrapers.fema_firm_scraper.rst", "rst-code/brails.scrapers.fema_firm_scraper.fema_firm_scraper.rst", "rst-code/brails.scrapers.footprint_scraper.rst", "rst-code/brails.scrapers.google_satellite.rst", "rst-code/brails.scrapers.google_satellite.google_satellite.rst", "rst-code/brails.scrapers.google_streetview.rst", "rst-code/brails.scrapers.google_streetview.google_streetview.rst", "rst-code/brails.scrapers.image_scraper.rst", "rst-code/brails.scrapers.ms_footprint_scraper.rst", "rst-code/brails.scrapers.ms_footprint_scraper.ms_footprint_handler.rst", "rst-code/brails.scrapers.nbi_scraper.rst", "rst-code/brails.scrapers.nbi_scraper.nbi_scraper.rst", "rst-code/brails.scrapers.nsi_parser.rst", "rst-code/brails.scrapers.nsi_parser.nsi_parser.rst", "rst-code/brails.scrapers.nti_scraper.rst", "rst-code/brails.scrapers.nti_scraper.nti_scraper.rst", "rst-code/brails.scrapers.osm_footprint_scraper.rst", "rst-code/brails.scrapers.osm_footprint_scraper.osm_footprint_scraper.rst", "rst-code/brails.scrapers.osm_power_network_scraper.rst", "rst-code/brails.scrapers.osm_power_network_scraper.osm_power_network_scraper.rst", "rst-code/brails.scrapers.overture_maps_scraper.rst", "rst-code/brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper.rst", "rst-code/brails.scrapers.overture_maps_scraper.overture_maps_scraper.rst", "rst-code/brails.scrapers.usa_footprint_scraper.rst", "rst-code/brails.scrapers.usa_footprint_scraper.usa_footprint_scraper.rst", "rst-code/brails.scrapers.user_footprints.rst", "rst-code/brails.scrapers.usgs_data_scrapers.rst", "rst-code/brails.scrapers.usgs_data_scrapers.nlcd_scraper.rst", "rst-code/brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.rst", "rst-code/brails.types.rst", "rst-code/brails.types.asset_inventory.rst", "rst-code/brails.types.image_set.rst", "rst-code/brails.types.region_boundary.rst", "rst-code/brails.utils.rst", "rst-code/brails.utils.arcgisapi_service_helper.rst", "rst-code/brails.utils.geo_tools.rst", "rst-code/brails.utils.importer.rst", "rst-code/brails.utils.input_validator.rst", "rst-code/brails.utils.inventory_validator.rst", "rst-code/brails.utils.model_utils.rst", "rst-code/brails.utils.plot_tools.rst", "rst-code/brails.utils.rapid_utils.rst", "rst-code/brails.utils.segmentation_utils.rst", "rst-code/brails.utils.spatial_join_methods.rst", "rst-code/brails.utils.spatial_join_methods.base.rst", "rst-code/brails.utils.spatial_join_methods.distance_based_point_matcher.rst", "rst-code/brails.utils.spatial_join_methods.get_points_in_polygons.rst", "rst-code/brails.utils.spatial_join_methods.get_points_near_polygons.rst", "rst-code/brails.utils.unit_converter.rst", "rst-code/modules.rst", "rst-doc/about.rst", "rst-doc/acknowledgements.rst", "rst-doc/api_autosummary.rst", "rst-doc/cite.rst", "rst-doc/install.rst", "rst-doc/license.rst", "rst-doc/rst-code/brails.filters.filter.Filter.rst", "rst-doc/rst-code/brails.types.asset_inventory.Asset.rst", "rst-doc/rst-code/brails.types.asset_inventory.AssetInventory.rst", "rst-doc/rst-code/brails.types.image_set.Image.rst", "rst-doc/rst-code/brails.types.image_set.ImageSet.rst", "rst-doc/rst-code/brails.types.region_boundary.RegionBoundary.rst", "rst-doc/rst-code/brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.rst", "rst-doc/rst-code/brails.utils.geo_tools.GeoTools.rst", "rst-doc/rst-code/brails.utils.importer.Importer.rst", "rst-doc/rst-code/brails.utils.input_validator.InputValidator.rst", "rst-doc/rst-code/brails.utils.inventory_validator.InventoryValidator.rst", "rst-doc/rst-code/brails.utils.model_utils.ModelUtils.rst", "rst-doc/rst-code/brails.utils.plot_tools.PlotTools.rst", "rst-doc/rst-code/brails.utils.rapid_utils.RAPIDUtils.rst", "rst-doc/rst-code/brails.utils.segmentation_utils.SegmentationUtils.rst", "rst-doc/rst-code/brails.utils.spatial_join_methods.base.SpatialJoinMethods.rst", "rst-doc/rst-code/brails.utils.spatial_join_methods.distance_based_point_matcher.DistanceBasedPointMatcher.rst", "rst-doc/rst-code/brails.utils.spatial_join_methods.get_points_in_polygons.GetPointsInPolygons.rst", "rst-doc/rst-code/brails.utils.spatial_join_methods.get_points_near_polygons.GetPointsNearPolygons.rst", "rst-doc/rst-code/brails.utils.unit_converter.UnitConverter.rst"], "indexentries": {"__init__() (brails.filters.filter.filter method)": [[345, "brails.filters.filter.Filter.__init__", false]], "__init__() (brails.types.asset_inventory.asset method)": [[346, "brails.types.asset_inventory.Asset.__init__", false]], "__init__() (brails.types.asset_inventory.assetinventory method)": [[347, "brails.types.asset_inventory.AssetInventory.__init__", false]], "__init__() (brails.types.image_set.image method)": [[348, "brails.types.image_set.Image.__init__", false]], "__init__() (brails.types.image_set.imageset method)": [[349, "brails.types.image_set.ImageSet.__init__", false]], "__init__() (brails.types.region_boundary.regionboundary method)": [[350, "brails.types.region_boundary.RegionBoundary.__init__", false]], "__init__() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[351, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.__init__", false]], "__init__() (brails.utils.geo_tools.geotools method)": [[352, "brails.utils.geo_tools.GeoTools.__init__", false]], "__init__() (brails.utils.importer.importer method)": [[353, "brails.utils.importer.Importer.__init__", false]], "__init__() (brails.utils.input_validator.inputvalidator method)": [[354, "brails.utils.input_validator.InputValidator.__init__", false]], "__init__() (brails.utils.inventory_validator.inventoryvalidator method)": [[355, "brails.utils.inventory_validator.InventoryValidator.__init__", false]], "__init__() (brails.utils.model_utils.modelutils method)": [[356, "brails.utils.model_utils.ModelUtils.__init__", false]], "__init__() (brails.utils.plot_tools.plottools method)": [[357, "brails.utils.plot_tools.PlotTools.__init__", false]], "__init__() (brails.utils.rapid_utils.rapidutils method)": [[358, "brails.utils.rapid_utils.RAPIDUtils.__init__", false]], "__init__() (brails.utils.segmentation_utils.segmentationutils method)": [[359, "brails.utils.segmentation_utils.SegmentationUtils.__init__", false]], "__init__() (brails.utils.spatial_join_methods.base.spatialjoinmethods method)": [[360, "brails.utils.spatial_join_methods.base.SpatialJoinMethods.__init__", false]], "__init__() (brails.utils.spatial_join_methods.distance_based_point_matcher.distancebasedpointmatcher method)": [[361, "brails.utils.spatial_join_methods.distance_based_point_matcher.DistanceBasedPointMatcher.__init__", false]], "__init__() (brails.utils.spatial_join_methods.get_points_in_polygons.getpointsinpolygons method)": [[362, "brails.utils.spatial_join_methods.get_points_in_polygons.GetPointsInPolygons.__init__", false]], "__init__() (brails.utils.spatial_join_methods.get_points_near_polygons.getpointsnearpolygons method)": [[363, "brails.utils.spatial_join_methods.get_points_near_polygons.GetPointsNearPolygons.__init__", false]], "__init__() (brails.utils.unit_converter.unitconverter method)": [[364, "brails.utils.unit_converter.UnitConverter.__init__", false]], "__len__() (brails.processors.image_segmenter.image_segmenter.datasetbinary method)": [[205, "brails.processors.image_segmenter.image_segmenter.DatasetBinary.__len__", false]], "__len__() (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder method)": [[279, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.__len__", false]], "_join_implementation() (brails.utils.spatial_join_methods.get_points_in_polygons.getpointsinpolygons method)": [[335, "brails.utils.spatial_join_methods.get_points_in_polygons.GetPointsInPolygons._join_implementation", false], [362, "brails.utils.spatial_join_methods.get_points_in_polygons.GetPointsInPolygons._join_implementation", false]], "_join_implementation() (brails.utils.spatial_join_methods.get_points_near_polygons.getpointsnearpolygons method)": [[336, "brails.utils.spatial_join_methods.get_points_near_polygons.GetPointsNearPolygons._join_implementation", false], [363, "brails.utils.spatial_join_methods.get_points_near_polygons.GetPointsNearPolygons._join_implementation", false]], "accuracy() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[128, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.accuracy", false]], "adamw (class in brails.processors.foundation_classifier.attention_utils.radam)": [[93, "brails.processors.foundation_classifier.attention_utils.radam.AdamW", false]], "add() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.averagemeter method)": [[128, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.AverageMeter.add", false]], "add_asset() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.add_asset", false]], "add_asset_coordinates() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.add_asset_coordinates", false]], "add_asset_features() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.add_asset_features", false]], "add_asset_features_from_csv() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.add_asset_features_from_csv", false]], "add_decomposed_rel_pos() (in module brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[263, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.add_decomposed_rel_pos", false]], "add_default() (in module brails.inferers.hazus_inferer_wind.windmetavarrulesets)": [[40, "brails.inferers.hazus_inferer_wind.WindMetaVarRulesets.add_default", false]], "add_features() (brails.types.asset_inventory.asset method)": [[319, "brails.types.asset_inventory.Asset.add_features", false]], "add_features_to_asset() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[22, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.add_features_to_asset", false]], "add_image() (brails.types.image_set.imageset method)": [[320, "brails.types.image_set.ImageSet.add_image", false]], "add_model_predictions() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.add_model_predictions", false]], "addgaussiannoise (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.AddGaussianNoise", false]], "addgaussiannoise (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.AddGaussianNoise", false]], "addgaussianpoissonnoise (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.AddGaussianPoissonNoise", false]], "addgaussianpoissonnoise (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.AddGaussianPoissonNoise", false]], "addspecklenoise (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.AddSpeckleNoise", false]], "addspecklenoise (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.AddSpeckleNoise", false]], "aggregate_predictions() (in module brails.processors.vlm_image_classifier.clip.utils)": [[254, "brails.processors.vlm_image_classifier.clip.utils.aggregate_predictions", false]], "aliasmethod (class in brails.processors.foundation_classifier.lib.alias_multinomial)": [[136, "brails.processors.foundation_classifier.lib.alias_multinomial.AliasMethod", false]], "aliasmethod (class in brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial)": [[158, "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial.AliasMethod", false]], "anchors (class in brails.processors.chimney_detector.lib.efficientdet.utils)": [[70, "brails.processors.chimney_detector.lib.efficientdet.utils.Anchors", false]], "anchors (class in brails.processors.garage_detector.lib.efficientdet.utils)": [[183, "brails.processors.garage_detector.lib.efficientdet.utils.Anchors", false]], "anchors (class in brails.processors.nfloors_detector.lib.efficientdet.utils)": [[219, "brails.processors.nfloors_detector.lib.efficientdet.utils.Anchors", false]], "api_key (brails.scrapers.google_streetview.google_streetview.googlestreetview attribute)": [[295, "brails.scrapers.google_streetview.google_streetview.GoogleStreetview.api_key", false]], "apply_boxes() (brails.processors.vlm_segmenter.segment_anything.utils.transforms.resizelongestside method)": [[273, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide.apply_boxes", false]], "apply_boxes_torch() (brails.processors.vlm_segmenter.segment_anything.utils.transforms.resizelongestside method)": [[273, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide.apply_boxes_torch", false]], "apply_coords() (brails.processors.vlm_segmenter.segment_anything.utils.transforms.resizelongestside method)": [[273, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide.apply_coords", false]], "apply_coords_torch() (brails.processors.vlm_segmenter.segment_anything.utils.transforms.resizelongestside method)": [[273, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide.apply_coords_torch", false]], "apply_image() (brails.processors.vlm_segmenter.segment_anything.utils.transforms.resizelongestside method)": [[273, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide.apply_image", false]], "apply_image_torch() (brails.processors.vlm_segmenter.segment_anything.utils.transforms.resizelongestside method)": [[273, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide.apply_image_torch", false]], "arcgisapiservicehelper (class in brails.utils.arcgisapi_service_helper)": [[323, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper", false], [351, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper", false]], "area_from_rle() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[271, "brails.processors.vlm_segmenter.segment_anything.utils.amg.area_from_rle", false]], "arialprocessing (class in brails.processors.other_idea.arial_processing)": [[238, "brails.processors.other_idea.arial_processing.ArialProcessing", false]], "as_numpy() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest)": [[109, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest.as_numpy", false]], "as_numpy() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th.as_numpy", false]], "as_variable() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th.as_variable", false]], "aspectaware_resize_padding() (in module brails.processors.chimney_detector.lib.utils.utils)": [[84, "brails.processors.chimney_detector.lib.utils.utils.aspectaware_resize_padding", false]], "aspectaware_resize_padding() (in module brails.processors.garage_detector.lib.utils.utils)": [[197, "brails.processors.garage_detector.lib.utils.utils.aspectaware_resize_padding", false]], "aspectaware_resize_padding() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[233, "brails.processors.nfloors_detector.lib.utils.utils.aspectaware_resize_padding", false]], "asserttensorclose() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest.torchtestcase method)": [[83, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase.assertTensorClose", false]], "asserttensorclose() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest.torchtestcase method)": [[109, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest.TorchTestCase.assertTensorClose", false]], "asserttensorclose() (brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest.torchtestcase method)": [[196, "brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase.assertTensorClose", false]], "asserttensorclose() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest.torchtestcase method)": [[232, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase.assertTensorClose", false]], "asset (class in brails.types.asset_inventory)": [[319, "brails.types.asset_inventory.Asset", false], [346, "brails.types.asset_inventory.Asset", false]], "asset_id (brails.types.asset_inventory.asset attribute)": [[319, "brails.types.asset_inventory.Asset.asset_id", false], [346, "brails.types.asset_inventory.Asset.asset_id", false]], "assetdataaugmenter (class in brails.scrapers.asset_data_augmenter)": [[288, "brails.scrapers.asset_data_augmenter.AssetDataAugmenter", false]], "assetinventory (class in brails.types.asset_inventory)": [[319, "brails.types.asset_inventory.AssetInventory", false], [347, "brails.types.asset_inventory.AssetInventory", false]], "async_copy_to() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel)": [[111, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel.async_copy_to", false]], "attention (class in brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[263, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.Attention", false]], "attention (class in brails.processors.vlm_segmenter.segment_anything.modeling.transformer)": [[268, "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.Attention", false]], "attention() (brails.processors.vlm_image_classifier.clip.model.residualattentionblock method)": [[252, "brails.processors.vlm_image_classifier.clip.model.ResidualAttentionBlock.attention", false]], "attentionmodule_pre (class in brails.processors.foundation_classifier.models.attention_module)": [[141, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_pre", false]], "attentionmodule_stage0 (class in brails.processors.foundation_classifier.models.attention_module)": [[141, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage0", false]], "attentionmodule_stage1 (class in brails.processors.foundation_classifier.models.attention_module)": [[141, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage1", false]], "attentionmodule_stage1_cifar (class in brails.processors.foundation_classifier.models.attention_module)": [[141, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage1_cifar", false]], "attentionmodule_stage2 (class in brails.processors.foundation_classifier.models.attention_module)": [[141, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage2", false]], "attentionmodule_stage2_cifar (class in brails.processors.foundation_classifier.models.attention_module)": [[141, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage2_cifar", false]], "attentionmodule_stage3 (class in brails.processors.foundation_classifier.models.attention_module)": [[141, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage3", false]], "attentionmodule_stage3_cifar (class in brails.processors.foundation_classifier.models.attention_module)": [[141, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage3_cifar", false]], "attentionpool2d (class in brails.processors.vlm_image_classifier.clip.model)": [[252, "brails.processors.vlm_image_classifier.clip.model.AttentionPool2d", false]], "attributes (brails.scrapers.nsi_parser.nsi_parser.nsi_parser attribute)": [[302, "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser.attributes", false]], "augmenter (class in brails.processors.chimney_detector.lib.efficientdet.dataset)": [[67, "brails.processors.chimney_detector.lib.efficientdet.dataset.Augmenter", false]], "augmenter (class in brails.processors.garage_detector.lib.efficientdet.dataset)": [[180, "brails.processors.garage_detector.lib.efficientdet.dataset.Augmenter", false]], "augmenter (class in brails.processors.nfloors_detector.lib.efficientdet.dataset)": [[216, "brails.processors.nfloors_detector.lib.efficientdet.dataset.Augmenter", false]], "auto_populate() (brails.inferers.hazus_inferer_flood.hazus_inferer_flood.hazusinfererflood method)": [[27, "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood.auto_populate", false]], "auto_populate() (in module brails.inferers.hazus_inferer_wind.auto_hu_nj)": [[46, "brails.inferers.hazus_inferer_wind.auto_HU_NJ.auto_populate", false]], "available_models() (in module brails.processors.vlm_image_classifier.clip.clip)": [[251, "brails.processors.vlm_image_classifier.clip.clip.available_models", false]], "average() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.averagemeter method)": [[128, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.AverageMeter.average", false]], "averagemeter (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[128, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.AverageMeter", false]], "averagemeter (class in brails.processors.foundation_classifier.lib.utils)": [[139, "brails.processors.foundation_classifier.lib.utils.AverageMeter", false]], "averagemeter (class in brails.processors.foundation_classifier.npid.npid_lib.utils)": [[161, "brails.processors.foundation_classifier.npid.npid_lib.utils.AverageMeter", false]], "backward() (brails.processors.chimney_detector.lib.efficientnet.utils.swishimplementation static method)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.SwishImplementation.backward", false]], "backward() (brails.processors.foundation_classifier.lib.linearaverage.linearaverageop static method)": [[133, "brails.processors.foundation_classifier.lib.LinearAverage.LinearAverageOp.backward", false]], "backward() (brails.processors.foundation_classifier.lib.nceaverage.ncefunction static method)": [[134, "brails.processors.foundation_classifier.lib.NCEAverage.NCEFunction.backward", false]], "backward() (brails.processors.foundation_classifier.npid.npid_lib.linearaverage.linearaverageop static method)": [[155, "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.LinearAverageOp.backward", false]], "backward() (brails.processors.foundation_classifier.npid.npid_lib.nceaverage.ncefunction static method)": [[156, "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.NCEFunction.backward", false]], "backward() (brails.processors.garage_detector.lib.efficientnet.utils.swishimplementation static method)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.SwishImplementation.backward", false]], "backward() (brails.processors.nfloors_detector.lib.efficientnet.utils.swishimplementation static method)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.SwishImplementation.backward", false]], "base_folder (brails.processors.foundation_classifier.npid.npid_datasets.cifar.cifar100instance attribute)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance.base_folder", false]], "base_folder (brails.processors.foundation_classifier.npid.npid_datasets.cifar100instance attribute)": [[150, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance.base_folder", false]], "basedataset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset)": [[100, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.BaseDataset", false]], "basic_clean() (in module brails.processors.vlm_image_classifier.clip.simple_tokenizer)": [[253, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.basic_clean", false]], "basicconv (class in brails.processors.year_built_classifier.model)": [[281, "brails.processors.year_built_classifier.model.BasicConv", false]], "batch_iterator() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[271, "brails.processors.vlm_segmenter.segment_anything.utils.amg.batch_iterator", false]], "batch_norm_epsilon (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.batch_norm_epsilon", false]], "batch_norm_epsilon (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.batch_norm_epsilon", false]], "batch_norm_epsilon (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.batch_norm_epsilon", false]], "batch_norm_momentum (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.batch_norm_momentum", false]], "batch_norm_momentum (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.batch_norm_momentum", false]], "batch_norm_momentum (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.batch_norm_momentum", false]], "batch_size (brails.processors.image_segmenter.image_segmenter.imagesegmenter attribute)": [[205, "brails.processors.image_segmenter.image_segmenter.ImageSegmenter.batch_size", false]], "batch_size (brails.processors.vlm_image_classifier.clipclassifier.clipclassifier attribute)": [[249, "brails.processors.vlm_image_classifier.CLIPClassifier.CLIPClassifier.batch_size", false]], "batched_mask_to_box() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[271, "brails.processors.vlm_segmenter.segment_anything.utils.amg.batched_mask_to_box", false]], "batchnorm2dreimpl (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl)": [[80, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl", false]], "batchnorm2dreimpl (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl)": [[193, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl", false]], "batchnorm2dreimpl (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl)": [[229, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl", false]], "batchsampler (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler)": [[117, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler.BatchSampler", false]], "bbox2poly() (brails.utils.geo_tools.geotools static method)": [[324, "brails.utils.geo_tools.GeoTools.bbox2poly", false]], "bboxtransform (class in brails.processors.chimney_detector.lib.efficientdet.utils)": [[70, "brails.processors.chimney_detector.lib.efficientdet.utils.BBoxTransform", false]], "bboxtransform (class in brails.processors.garage_detector.lib.efficientdet.utils)": [[183, "brails.processors.garage_detector.lib.efficientdet.utils.BBoxTransform", false]], "bboxtransform (class in brails.processors.nfloors_detector.lib.efficientdet.utils)": [[219, "brails.processors.nfloors_detector.lib.efficientdet.utils.BBoxTransform", false]], "bifpn (class in brails.processors.chimney_detector.lib.efficientdet.model)": [[69, "brails.processors.chimney_detector.lib.efficientdet.model.BiFPN", false]], "bifpn (class in brails.processors.garage_detector.lib.efficientdet.model)": [[182, "brails.processors.garage_detector.lib.efficientdet.model.BiFPN", false]], "bifpn (class in brails.processors.nfloors_detector.lib.efficientdet.model)": [[218, "brails.processors.nfloors_detector.lib.efficientdet.model.BiFPN", false]], "bilinearresize (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.BilinearResize", false]], "bilinearresize (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.BilinearResize", false]], "block (class in brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[263, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.Block", false]], "blockargs (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs", false]], "blockargs (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs", false]], "blockargs (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs", false]], "blockdecoder (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockDecoder", false]], "blockdecoder (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.BlockDecoder", false]], "blockdecoder (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockDecoder", false]], "boolean_string() (in module brails.processors.chimney_detector.lib.train_detector)": [[76, "brails.processors.chimney_detector.lib.train_detector.boolean_string", false]], "boolean_string() (in module brails.processors.garage_detector.lib.train_detector)": [[189, "brails.processors.garage_detector.lib.train_detector.boolean_string", false]], "boolean_string() (in module brails.processors.nfloors_detector.lib.train_detector)": [[225, "brails.processors.nfloors_detector.lib.train_detector.boolean_string", false]], "bottleneck (class in brails.processors.vlm_image_classifier.clip.model)": [[252, "brails.processors.vlm_image_classifier.clip.model.Bottleneck", false]], "boundingbox (class in brails.processors.vlm_segmenter.grounded_sam_utils)": [[256, "brails.processors.vlm_segmenter.grounded_sam_utils.BoundingBox", false]], "box (brails.filters.house_view.house_view.filterdetectionresult attribute)": [[15, "brails.filters.house_view.house_view.FilterDetectionResult.box", false]], "box (brails.processors.vlm_segmenter.grounded_sam_utils.detectionresult attribute)": [[256, "brails.processors.vlm_segmenter.grounded_sam_utils.DetectionResult.box", false]], "box_xyxy_to_xywh() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[271, "brails.processors.vlm_segmenter.segment_anything.utils.amg.box_xyxy_to_xywh", false]], "bpe() (brails.processors.vlm_image_classifier.clip.simple_tokenizer.simpletokenizer method)": [[253, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.SimpleTokenizer.bpe", false]], "brails": [[9, "module-brails", false]], "brails.constants": [[10, "module-brails.constants", false]], "brails.exceptions": [[11, "module-brails.exceptions", false]], "brails.filters": [[12, "module-brails.filters", false]], "brails.filters.filter": [[13, "module-brails.filters.filter", false]], "brails.filters.house_view": [[14, "module-brails.filters.house_view", false]], "brails.filters.house_view.house_view": [[15, "module-brails.filters.house_view.house_view", false]], "brails.imputers": [[16, "module-brails.imputers", false]], "brails.imputers.imputation": [[17, "module-brails.imputers.imputation", false]], "brails.imputers.knn_imputer": [[18, "module-brails.imputers.knn_imputer", false]], "brails.imputers.knn_imputer.knn_imputer": [[19, "module-brails.imputers.knn_imputer.knn_imputer", false]], "brails.inferers": [[20, "module-brails.inferers", false]], "brails.inferers.hazus_inferer": [[21, "module-brails.inferers.hazus_inferer", false]], "brails.inferers.hazus_inferer.hazus_inferer": [[22, "module-brails.inferers.hazus_inferer.hazus_inferer", false]], "brails.inferers.hazus_inferer.hazus_rulesets": [[23, "module-brails.inferers.hazus_inferer.hazus_rulesets", false]], "brails.inferers.hazus_inferer_earthquake": [[24, "module-brails.inferers.hazus_inferer_earthquake", false]], "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake": [[25, "module-brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake", false]], "brails.inferers.hazus_inferer_flood": [[26, "module-brails.inferers.hazus_inferer_flood", false]], "brails.inferers.hazus_inferer_flood.hazus_inferer_flood": [[27, "module-brails.inferers.hazus_inferer_flood.hazus_inferer_flood", false]], "brails.inferers.hazus_inferer_wind": [[28, "module-brails.inferers.hazus_inferer_wind", false]], "brails.inferers.hazus_inferer_wind.auto_hu_nj": [[46, "module-brails.inferers.hazus_inferer_wind.auto_HU_NJ", false]], "brails.inferers.hazus_inferer_wind.buildingclassrulesets": [[29, "module-brails.inferers.hazus_inferer_wind.BuildingClassRulesets", false]], "brails.inferers.hazus_inferer_wind.hazus_inferer_wind": [[47, "module-brails.inferers.hazus_inferer_wind.hazus_inferer_wind", false]], "brails.inferers.hazus_inferer_wind.windcecbrulesets": [[30, "module-brails.inferers.hazus_inferer_wind.WindCECBRulesets", false]], "brails.inferers.hazus_inferer_wind.windcerbrulesets": [[31, "module-brails.inferers.hazus_inferer_wind.WindCERBRulesets", false]], "brails.inferers.hazus_inferer_wind.windefrulesets": [[32, "module-brails.inferers.hazus_inferer_wind.WindEFRulesets", false]], "brails.inferers.hazus_inferer_wind.windmecbrulesets": [[33, "module-brails.inferers.hazus_inferer_wind.WindMECBRulesets", false]], "brails.inferers.hazus_inferer_wind.windmerbrulesets": [[34, "module-brails.inferers.hazus_inferer_wind.WindMERBRulesets", false]], "brails.inferers.hazus_inferer_wind.windmetavarrulesets": [[40, "module-brails.inferers.hazus_inferer_wind.WindMetaVarRulesets", false]], "brails.inferers.hazus_inferer_wind.windmhrulesets": [[35, "module-brails.inferers.hazus_inferer_wind.WindMHRulesets", false]], "brails.inferers.hazus_inferer_wind.windmlrirulesets": [[36, "module-brails.inferers.hazus_inferer_wind.WindMLRIRulesets", false]], "brails.inferers.hazus_inferer_wind.windmlrmrulesets": [[37, "module-brails.inferers.hazus_inferer_wind.WindMLRMRulesets", false]], "brails.inferers.hazus_inferer_wind.windmmuhrulesets": [[38, "module-brails.inferers.hazus_inferer_wind.WindMMUHRulesets", false]], "brails.inferers.hazus_inferer_wind.windmsfrulesets": [[39, "module-brails.inferers.hazus_inferer_wind.WindMSFRulesets", false]], "brails.inferers.hazus_inferer_wind.windsecbrulesets": [[41, "module-brails.inferers.hazus_inferer_wind.WindSECBRulesets", false]], "brails.inferers.hazus_inferer_wind.windserbrulesets": [[42, "module-brails.inferers.hazus_inferer_wind.WindSERBRulesets", false]], "brails.inferers.hazus_inferer_wind.windspmbrulesets": [[43, "module-brails.inferers.hazus_inferer_wind.WindSPMBRulesets", false]], "brails.inferers.hazus_inferer_wind.windwmuhrulesets": [[44, "module-brails.inferers.hazus_inferer_wind.WindWMUHRulesets", false]], "brails.inferers.hazus_inferer_wind.windwsfrulesets": [[45, "module-brails.inferers.hazus_inferer_wind.WindWSFRulesets", false]], "brails.inferers.inference_engine": [[48, "module-brails.inferers.inference_engine", false]], "brails.inferers.nlcd_inferer": [[49, "module-brails.inferers.nlcd_inferer", false]], "brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover": [[50, "module-brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover", false]], "brails.inferers.simcenter_inferer": [[51, "module-brails.inferers.simcenter_inferer", false]], "brails.inferers.simcenter_inferer.simcenter_inferer": [[52, "module-brails.inferers.simcenter_inferer.simCenter_inferer", false]], "brails.inferers.user_inferer": [[53, "module-brails.inferers.user_inferer", false]], "brails.inferers.user_inferer.content_value_inferer": [[54, "module-brails.inferers.user_inferer.content_value_inferer", false]], "brails.inferers.user_inferer.floor_area_inferer": [[55, "module-brails.inferers.user_inferer.floor_area_inferer", false]], "brails.inferers.user_inferer.user_inferer": [[56, "module-brails.inferers.user_inferer.user_inferer", false]], "brails.processors": [[57, "module-brails.processors", false]], "brails.processors.building_material_llm": [[58, "module-brails.processors.building_material_llm", false]], "brails.processors.building_material_llm.building_material_llm": [[59, "module-brails.processors.building_material_llm.building_material_llm", false]], "brails.processors.chimney_detector": [[60, "module-brails.processors.chimney_detector", false]], "brails.processors.chimney_detector.chimney_detector": [[61, "module-brails.processors.chimney_detector.chimney_detector", false]], "brails.processors.chimney_detector.lib": [[62, "module-brails.processors.chimney_detector.lib", false]], "brails.processors.chimney_detector.lib.backbone": [[63, "module-brails.processors.chimney_detector.lib.backbone", false]], "brails.processors.chimney_detector.lib.efficientdet": [[64, "module-brails.processors.chimney_detector.lib.efficientdet", false]], "brails.processors.chimney_detector.lib.efficientdet.coco": [[65, "module-brails.processors.chimney_detector.lib.efficientdet.coco", false]], "brails.processors.chimney_detector.lib.efficientdet.config": [[66, "module-brails.processors.chimney_detector.lib.efficientdet.config", false]], "brails.processors.chimney_detector.lib.efficientdet.dataset": [[67, "module-brails.processors.chimney_detector.lib.efficientdet.dataset", false]], "brails.processors.chimney_detector.lib.efficientdet.loss": [[68, "module-brails.processors.chimney_detector.lib.efficientdet.loss", false]], "brails.processors.chimney_detector.lib.efficientdet.model": [[69, "module-brails.processors.chimney_detector.lib.efficientdet.model", false]], "brails.processors.chimney_detector.lib.efficientdet.utils": [[70, "module-brails.processors.chimney_detector.lib.efficientdet.utils", false]], "brails.processors.chimney_detector.lib.efficientnet": [[71, "module-brails.processors.chimney_detector.lib.efficientnet", false]], "brails.processors.chimney_detector.lib.efficientnet.model": [[72, "module-brails.processors.chimney_detector.lib.efficientnet.model", false]], "brails.processors.chimney_detector.lib.efficientnet.utils": [[73, "module-brails.processors.chimney_detector.lib.efficientnet.utils", false]], "brails.processors.chimney_detector.lib.efficientnet.utils_extra": [[74, "module-brails.processors.chimney_detector.lib.efficientnet.utils_extra", false]], "brails.processors.chimney_detector.lib.infer_detector": [[75, "module-brails.processors.chimney_detector.lib.infer_detector", false]], "brails.processors.chimney_detector.lib.train_detector": [[76, "module-brails.processors.chimney_detector.lib.train_detector", false]], "brails.processors.chimney_detector.lib.utils": [[77, "module-brails.processors.chimney_detector.lib.utils", false]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm": [[78, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm", false]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm": [[79, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm", false]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl": [[80, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", false]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm": [[81, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm", false]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate": [[82, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate", false]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest": [[83, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest", false]], "brails.processors.chimney_detector.lib.utils.utils": [[84, "module-brails.processors.chimney_detector.lib.utils.utils", false]], "brails.processors.cons_type_classifier": [[85, "module-brails.processors.cons_type_classifier", false]], "brails.processors.cons_type_classifier.constructiontypeclassifier": [[86, "module-brails.processors.cons_type_classifier.ConstructionTypeClassifier", false]], "brails.processors.facade_parser": [[87, "module-brails.processors.facade_parser", false]], "brails.processors.facade_parser.facade_parser": [[88, "module-brails.processors.facade_parser.facade_parser", false]], "brails.processors.ffh_predictor_klepac": [[89, "module-brails.processors.ffh_predictor_klepac", false]], "brails.processors.ffh_predictor_klepac.ffh_predictor_klepac": [[90, "module-brails.processors.ffh_predictor_klepac.ffh_predictor_klepac", false]], "brails.processors.foundation_classifier": [[91, "module-brails.processors.foundation_classifier", false]], "brails.processors.foundation_classifier.attention_utils": [[92, "module-brails.processors.foundation_classifier.attention_utils", false]], "brails.processors.foundation_classifier.attention_utils.radam": [[93, "module-brails.processors.foundation_classifier.attention_utils.radam", false]], "brails.processors.foundation_classifier.attention_utils.utils": [[94, "module-brails.processors.foundation_classifier.attention_utils.utils", false]], "brails.processors.foundation_classifier.csail_segmentation_tool": [[95, "module-brails.processors.foundation_classifier.csail_segmentation_tool", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg": [[96, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config": [[97, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults": [[98, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data": [[99, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset": [[100, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib": [[103, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn": [[104, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules": [[105, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm": [[106, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm": [[107, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate": [[108, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest": [[109, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel": [[110, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel": [[111, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils": [[112, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset": [[115, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler": [[117, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th": [[118, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models": [[119, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet": [[120, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet": [[121, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models": [[122, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet": [[123, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext": [[124, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils": [[125, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils": [[128, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation": [[129, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation", false]], "brails.processors.foundation_classifier.foundation_classifier": [[131, "module-brails.processors.foundation_classifier.foundation_classifier", false]], "brails.processors.foundation_classifier.lib": [[132, "module-brails.processors.foundation_classifier.lib", false]], "brails.processors.foundation_classifier.lib.alias_multinomial": [[136, "module-brails.processors.foundation_classifier.lib.alias_multinomial", false]], "brails.processors.foundation_classifier.lib.custom_transforms": [[137, "module-brails.processors.foundation_classifier.lib.custom_transforms", false]], "brails.processors.foundation_classifier.lib.linearaverage": [[133, "module-brails.processors.foundation_classifier.lib.LinearAverage", false]], "brails.processors.foundation_classifier.lib.nceaverage": [[134, "module-brails.processors.foundation_classifier.lib.NCEAverage", false]], "brails.processors.foundation_classifier.lib.ncecriterion": [[135, "module-brails.processors.foundation_classifier.lib.NCECriterion", false]], "brails.processors.foundation_classifier.lib.normalize": [[138, "module-brails.processors.foundation_classifier.lib.normalize", false]], "brails.processors.foundation_classifier.lib.utils": [[139, "module-brails.processors.foundation_classifier.lib.utils", false]], "brails.processors.foundation_classifier.models": [[140, "module-brails.processors.foundation_classifier.models", false]], "brails.processors.foundation_classifier.models.attention_module": [[141, "module-brails.processors.foundation_classifier.models.attention_module", false]], "brails.processors.foundation_classifier.models.basic_layer": [[142, "module-brails.processors.foundation_classifier.models.basic_layer", false]], "brails.processors.foundation_classifier.models.residual_attention_network": [[143, "module-brails.processors.foundation_classifier.models.residual_attention_network", false]], "brails.processors.foundation_classifier.models.resnet_applied": [[144, "module-brails.processors.foundation_classifier.models.resnet_applied", false]], "brails.processors.foundation_classifier.models.sknet": [[145, "module-brails.processors.foundation_classifier.models.sknet", false]], "brails.processors.foundation_classifier.npid": [[146, "module-brails.processors.foundation_classifier.npid", false]], "brails.processors.foundation_classifier.npid.npid_datasets": [[150, "module-brails.processors.foundation_classifier.npid.npid_datasets", false]], "brails.processors.foundation_classifier.npid.npid_datasets.cifar": [[151, "module-brails.processors.foundation_classifier.npid.npid_datasets.cifar", false]], "brails.processors.foundation_classifier.npid.npid_datasets.folder": [[152, "module-brails.processors.foundation_classifier.npid.npid_datasets.folder", false]], "brails.processors.foundation_classifier.npid.npid_datasets.mnist": [[153, "module-brails.processors.foundation_classifier.npid.npid_datasets.mnist", false]], "brails.processors.foundation_classifier.npid.npid_lib": [[154, "module-brails.processors.foundation_classifier.npid.npid_lib", false]], "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial": [[158, "module-brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial", false]], "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms": [[159, "module-brails.processors.foundation_classifier.npid.npid_lib.custom_transforms", false]], "brails.processors.foundation_classifier.npid.npid_lib.linearaverage": [[155, "module-brails.processors.foundation_classifier.npid.npid_lib.LinearAverage", false]], "brails.processors.foundation_classifier.npid.npid_lib.nceaverage": [[156, "module-brails.processors.foundation_classifier.npid.npid_lib.NCEAverage", false]], "brails.processors.foundation_classifier.npid.npid_lib.ncecriterion": [[157, "module-brails.processors.foundation_classifier.npid.npid_lib.NCECriterion", false]], "brails.processors.foundation_classifier.npid.npid_lib.normalize": [[160, "module-brails.processors.foundation_classifier.npid.npid_lib.normalize", false]], "brails.processors.foundation_classifier.npid.npid_lib.utils": [[161, "module-brails.processors.foundation_classifier.npid.npid_lib.utils", false]], "brails.processors.foundation_classifier.npid.npid_toolbox": [[165, "module-brails.processors.foundation_classifier.npid.npid_toolbox", false]], "brails.processors.foundation_classifier.utils": [[170, "module-brails.processors.foundation_classifier.utils", false]], "brails.processors.foundation_classifier.utils.datasets": [[171, "module-brails.processors.foundation_classifier.utils.Datasets", false]], "brails.processors.garage_detector": [[173, "module-brails.processors.garage_detector", false]], "brails.processors.garage_detector.garage_detector": [[174, "module-brails.processors.garage_detector.garage_detector", false]], "brails.processors.garage_detector.lib": [[175, "module-brails.processors.garage_detector.lib", false]], "brails.processors.garage_detector.lib.backbone": [[176, "module-brails.processors.garage_detector.lib.backbone", false]], "brails.processors.garage_detector.lib.efficientdet": [[177, "module-brails.processors.garage_detector.lib.efficientdet", false]], "brails.processors.garage_detector.lib.efficientdet.coco": [[178, "module-brails.processors.garage_detector.lib.efficientdet.coco", false]], "brails.processors.garage_detector.lib.efficientdet.config": [[179, "module-brails.processors.garage_detector.lib.efficientdet.config", false]], "brails.processors.garage_detector.lib.efficientdet.dataset": [[180, "module-brails.processors.garage_detector.lib.efficientdet.dataset", false]], "brails.processors.garage_detector.lib.efficientdet.loss": [[181, "module-brails.processors.garage_detector.lib.efficientdet.loss", false]], "brails.processors.garage_detector.lib.efficientdet.model": [[182, "module-brails.processors.garage_detector.lib.efficientdet.model", false]], "brails.processors.garage_detector.lib.efficientdet.utils": [[183, "module-brails.processors.garage_detector.lib.efficientdet.utils", false]], "brails.processors.garage_detector.lib.efficientnet": [[184, "module-brails.processors.garage_detector.lib.efficientnet", false]], "brails.processors.garage_detector.lib.efficientnet.model": [[185, "module-brails.processors.garage_detector.lib.efficientnet.model", false]], "brails.processors.garage_detector.lib.efficientnet.utils": [[186, "module-brails.processors.garage_detector.lib.efficientnet.utils", false]], "brails.processors.garage_detector.lib.efficientnet.utils_extra": [[187, "module-brails.processors.garage_detector.lib.efficientnet.utils_extra", false]], "brails.processors.garage_detector.lib.infer_detector": [[188, "module-brails.processors.garage_detector.lib.infer_detector", false]], "brails.processors.garage_detector.lib.train_detector": [[189, "module-brails.processors.garage_detector.lib.train_detector", false]], "brails.processors.garage_detector.lib.utils": [[190, "module-brails.processors.garage_detector.lib.utils", false]], "brails.processors.garage_detector.lib.utils.sync_batchnorm": [[191, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm", false]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm": [[192, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm", false]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl": [[193, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", false]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm": [[194, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.comm", false]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate": [[195, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate", false]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest": [[196, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest", false]], "brails.processors.garage_detector.lib.utils.utils": [[197, "module-brails.processors.garage_detector.lib.utils.utils", false]], "brails.processors.gpt_base_model": [[198, "module-brails.processors.gpt_base_model", false]], "brails.processors.gpt_base_model.gpt": [[199, "module-brails.processors.gpt_base_model.GPT", false]], "brails.processors.gpt_base_model.utils": [[200, "module-brails.processors.gpt_base_model.utils", false]], "brails.processors.image_classifier": [[201, "module-brails.processors.image_classifier", false]], "brails.processors.image_classifier.image_classifier": [[202, "module-brails.processors.image_classifier.image_classifier", false]], "brails.processors.image_processor": [[203, "module-brails.processors.image_processor", false]], "brails.processors.image_segmenter": [[204, "module-brails.processors.image_segmenter", false]], "brails.processors.image_segmenter.image_segmenter": [[205, "module-brails.processors.image_segmenter.image_segmenter", false]], "brails.processors.nfloor_gpt": [[206, "module-brails.processors.nFloor_gpt", false]], "brails.processors.nfloor_gpt.nfloor_gpt": [[207, "module-brails.processors.nFloor_gpt.nFloor_gpt", false]], "brails.processors.nfloor_vlm": [[208, "module-brails.processors.nFloor_vlm", false]], "brails.processors.nfloor_vlm.nfloor_vlm": [[209, "module-brails.processors.nFloor_vlm.nFloor_vlm", false]], "brails.processors.nfloors_detector": [[210, "module-brails.processors.nfloors_detector", false]], "brails.processors.nfloors_detector.lib": [[211, "module-brails.processors.nfloors_detector.lib", false]], "brails.processors.nfloors_detector.lib.backbone": [[212, "module-brails.processors.nfloors_detector.lib.backbone", false]], "brails.processors.nfloors_detector.lib.efficientdet": [[213, "module-brails.processors.nfloors_detector.lib.efficientdet", false]], "brails.processors.nfloors_detector.lib.efficientdet.coco": [[214, "module-brails.processors.nfloors_detector.lib.efficientdet.coco", false]], "brails.processors.nfloors_detector.lib.efficientdet.config": [[215, "module-brails.processors.nfloors_detector.lib.efficientdet.config", false]], "brails.processors.nfloors_detector.lib.efficientdet.dataset": [[216, "module-brails.processors.nfloors_detector.lib.efficientdet.dataset", false]], "brails.processors.nfloors_detector.lib.efficientdet.loss": [[217, "module-brails.processors.nfloors_detector.lib.efficientdet.loss", false]], "brails.processors.nfloors_detector.lib.efficientdet.model": [[218, "module-brails.processors.nfloors_detector.lib.efficientdet.model", false]], "brails.processors.nfloors_detector.lib.efficientdet.utils": [[219, "module-brails.processors.nfloors_detector.lib.efficientdet.utils", false]], "brails.processors.nfloors_detector.lib.efficientnet": [[220, "module-brails.processors.nfloors_detector.lib.efficientnet", false]], "brails.processors.nfloors_detector.lib.efficientnet.model": [[221, "module-brails.processors.nfloors_detector.lib.efficientnet.model", false]], "brails.processors.nfloors_detector.lib.efficientnet.utils": [[222, "module-brails.processors.nfloors_detector.lib.efficientnet.utils", false]], "brails.processors.nfloors_detector.lib.efficientnet.utils_extra": [[223, "module-brails.processors.nfloors_detector.lib.efficientnet.utils_extra", false]], "brails.processors.nfloors_detector.lib.infer_detector": [[224, "module-brails.processors.nfloors_detector.lib.infer_detector", false]], "brails.processors.nfloors_detector.lib.train_detector": [[225, "module-brails.processors.nfloors_detector.lib.train_detector", false]], "brails.processors.nfloors_detector.lib.utils": [[226, "module-brails.processors.nfloors_detector.lib.utils", false]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm": [[227, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm", false]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm": [[228, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm", false]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl": [[229, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", false]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm": [[230, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm", false]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate": [[231, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate", false]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest": [[232, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest", false]], "brails.processors.nfloors_detector.lib.utils.utils": [[233, "module-brails.processors.nfloors_detector.lib.utils.utils", false]], "brails.processors.nfloors_detector.nfloor_detector": [[234, "module-brails.processors.nfloors_detector.nfloor_detector", false]], "brails.processors.occupancy_classifier": [[235, "module-brails.processors.occupancy_classifier", false]], "brails.processors.occupancy_classifier.occupancy_classifier": [[236, "module-brails.processors.occupancy_classifier.occupancy_classifier", false]], "brails.processors.other_idea": [[237, "module-brails.processors.other_idea", false]], "brails.processors.other_idea.arial_processing": [[238, "module-brails.processors.other_idea.arial_processing", false]], "brails.processors.other_idea.street_processor": [[239, "module-brails.processors.other_idea.street_processor", false]], "brails.processors.roof_shape_classifier": [[240, "module-brails.processors.roof_shape_classifier", false]], "brails.processors.roof_shape_classifier.roof_shape_classifier": [[241, "module-brails.processors.roof_shape_classifier.roof_shape_classifier", false]], "brails.processors.roof_shape_gpt": [[242, "module-brails.processors.roof_shape_gpt", false]], "brails.processors.roof_shape_gpt.roof_shape_gpt": [[243, "module-brails.processors.roof_shape_gpt.roof_shape_gpt", false]], "brails.processors.roof_shape_vlm": [[244, "module-brails.processors.roof_shape_vlm", false]], "brails.processors.roof_shape_vlm.roof_shape_vlm": [[245, "module-brails.processors.roof_shape_vlm.roof_shape_vlm", false]], "brails.processors.street_level_damage_detection": [[246, "module-brails.processors.street_level_damage_detection", false]], "brails.processors.street_level_damage_detection.street_level_damage_detection": [[247, "module-brails.processors.street_level_damage_detection.street_level_damage_detection", false]], "brails.processors.vlm_image_classifier": [[248, "module-brails.processors.vlm_image_classifier", false]], "brails.processors.vlm_image_classifier.clip": [[250, "module-brails.processors.vlm_image_classifier.clip", false]], "brails.processors.vlm_image_classifier.clip.clip": [[251, "module-brails.processors.vlm_image_classifier.clip.clip", false]], "brails.processors.vlm_image_classifier.clip.model": [[252, "module-brails.processors.vlm_image_classifier.clip.model", false]], "brails.processors.vlm_image_classifier.clip.simple_tokenizer": [[253, "module-brails.processors.vlm_image_classifier.clip.simple_tokenizer", false]], "brails.processors.vlm_image_classifier.clip.utils": [[254, "module-brails.processors.vlm_image_classifier.clip.utils", false]], "brails.processors.vlm_image_classifier.clipclassifier": [[249, "module-brails.processors.vlm_image_classifier.CLIPClassifier", false]], "brails.processors.vlm_segmenter": [[255, "module-brails.processors.vlm_segmenter", false]], "brails.processors.vlm_segmenter.grounded_sam_utils": [[256, "module-brails.processors.vlm_segmenter.grounded_sam_utils", false]], "brails.processors.vlm_segmenter.segment_anything": [[257, "module-brails.processors.vlm_segmenter.segment_anything", false]], "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator": [[258, "module-brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator", false]], "brails.processors.vlm_segmenter.segment_anything.build_sam": [[259, "module-brails.processors.vlm_segmenter.segment_anything.build_sam", false]], "brails.processors.vlm_segmenter.segment_anything.build_sam_hq": [[260, "module-brails.processors.vlm_segmenter.segment_anything.build_sam_hq", false]], "brails.processors.vlm_segmenter.segment_anything.modeling": [[261, "module-brails.processors.vlm_segmenter.segment_anything.modeling", false]], "brails.processors.vlm_segmenter.segment_anything.modeling.common": [[262, "module-brails.processors.vlm_segmenter.segment_anything.modeling.common", false]], "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder": [[263, "module-brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder", false]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder": [[264, "module-brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder", false]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq": [[265, "module-brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq", false]], "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder": [[266, "module-brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder", false]], "brails.processors.vlm_segmenter.segment_anything.modeling.sam": [[267, "module-brails.processors.vlm_segmenter.segment_anything.modeling.sam", false]], "brails.processors.vlm_segmenter.segment_anything.modeling.transformer": [[268, "module-brails.processors.vlm_segmenter.segment_anything.modeling.transformer", false]], "brails.processors.vlm_segmenter.segment_anything.predictor": [[269, "module-brails.processors.vlm_segmenter.segment_anything.predictor", false]], "brails.processors.vlm_segmenter.segment_anything.utils": [[270, "module-brails.processors.vlm_segmenter.segment_anything.utils", false]], "brails.processors.vlm_segmenter.segment_anything.utils.amg": [[271, "module-brails.processors.vlm_segmenter.segment_anything.utils.amg", false]], "brails.processors.vlm_segmenter.segment_anything.utils.onnx": [[272, "module-brails.processors.vlm_segmenter.segment_anything.utils.onnx", false]], "brails.processors.vlm_segmenter.segment_anything.utils.transforms": [[273, "module-brails.processors.vlm_segmenter.segment_anything.utils.transforms", false]], "brails.processors.vlm_segmenter.vlm_segmenter": [[274, "module-brails.processors.vlm_segmenter.vlm_segmenter", false]], "brails.processors.year_built_classifier": [[275, "module-brails.processors.year_built_classifier", false]], "brails.processors.year_built_classifier.lib": [[278, "module-brails.processors.year_built_classifier.lib", false]], "brails.processors.year_built_classifier.lib.datasets": [[279, "module-brails.processors.year_built_classifier.lib.datasets", false]], "brails.processors.year_built_classifier.lib.utils": [[280, "module-brails.processors.year_built_classifier.lib.utils", false]], "brails.processors.year_built_classifier.model": [[281, "module-brails.processors.year_built_classifier.model", false]], "brails.processors.year_built_classifier.resnet": [[276, "module-brails.processors.year_built_classifier.Resnet", false]], "brails.processors.year_built_classifier.weights": [[283, "module-brails.processors.year_built_classifier.weights", false]], "brails.processors.year_built_classifier.year_built_classifier": [[284, "module-brails.processors.year_built_classifier.year_built_classifier", false]], "brails.scrapers": [[285, "module-brails.scrapers", false]], "brails.scrapers.asce_hazard_data_scraper": [[286, "module-brails.scrapers.asce_hazard_data_scraper", false]], "brails.scrapers.asset_data_augmenter": [[288, "module-brails.scrapers.asset_data_augmenter", false]], "brails.scrapers.fema_firm_scraper": [[289, "module-brails.scrapers.fema_firm_scraper", false]], "brails.scrapers.fema_firm_scraper.fema_firm_scraper": [[290, "module-brails.scrapers.fema_firm_scraper.fema_firm_scraper", false]], "brails.scrapers.footprint_scraper": [[291, "module-brails.scrapers.footprint_scraper", false]], "brails.scrapers.google_satellite": [[292, "module-brails.scrapers.google_satellite", false]], "brails.scrapers.google_satellite.google_satellite": [[293, "module-brails.scrapers.google_satellite.google_satellite", false]], "brails.scrapers.google_streetview": [[294, "module-brails.scrapers.google_streetview", false]], "brails.scrapers.google_streetview.google_streetview": [[295, "module-brails.scrapers.google_streetview.google_streetview", false]], "brails.scrapers.image_scraper": [[296, "module-brails.scrapers.image_scraper", false]], "brails.scrapers.ms_footprint_scraper": [[297, "module-brails.scrapers.ms_footprint_scraper", false]], "brails.scrapers.ms_footprint_scraper.ms_footprint_handler": [[298, "module-brails.scrapers.ms_footprint_scraper.ms_footprint_handler", false]], "brails.scrapers.nbi_scraper": [[299, "module-brails.scrapers.nbi_scraper", false]], "brails.scrapers.nbi_scraper.nbi_scraper": [[300, "module-brails.scrapers.nbi_scraper.nbi_scraper", false]], "brails.scrapers.nsi_parser": [[301, "module-brails.scrapers.nsi_parser", false]], "brails.scrapers.nsi_parser.nsi_parser": [[302, "module-brails.scrapers.nsi_parser.nsi_parser", false]], "brails.scrapers.nti_scraper": [[303, "module-brails.scrapers.nti_scraper", false]], "brails.scrapers.nti_scraper.nti_scraper": [[304, "module-brails.scrapers.nti_scraper.nti_scraper", false]], "brails.scrapers.osm_footprint_scraper": [[305, "module-brails.scrapers.osm_footprint_scraper", false]], "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper": [[306, "module-brails.scrapers.osm_footprint_scraper.osm_footprint_scraper", false]], "brails.scrapers.osm_power_network_scraper": [[307, "module-brails.scrapers.osm_power_network_scraper", false]], "brails.scrapers.osm_power_network_scraper.osm_power_network_scraper": [[308, "module-brails.scrapers.osm_power_network_scraper.osm_power_network_scraper", false]], "brails.scrapers.overture_maps_scraper": [[309, "module-brails.scrapers.overture_maps_scraper", false]], "brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper": [[310, "module-brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper", false]], "brails.scrapers.overture_maps_scraper.overture_maps_scraper": [[311, "module-brails.scrapers.overture_maps_scraper.overture_maps_scraper", false]], "brails.scrapers.usa_footprint_scraper": [[312, "module-brails.scrapers.usa_footprint_scraper", false]], "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper": [[313, "module-brails.scrapers.usa_footprint_scraper.usa_footprint_scraper", false]], "brails.scrapers.user_footprints": [[314, "module-brails.scrapers.user_footprints", false]], "brails.scrapers.usgs_data_scrapers": [[315, "module-brails.scrapers.usgs_data_scrapers", false]], "brails.scrapers.usgs_data_scrapers.nlcd_scraper": [[316, "module-brails.scrapers.usgs_data_scrapers.nlcd_scraper", false]], "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper": [[317, "module-brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper", false]], "brails.types": [[318, "module-brails.types", false]], "brails.types.asset_inventory": [[319, "module-brails.types.asset_inventory", false]], "brails.types.image_set": [[320, "module-brails.types.image_set", false]], "brails.types.region_boundary": [[321, "module-brails.types.region_boundary", false]], "brails.utils": [[322, "module-brails.utils", false]], "brails.utils.arcgisapi_service_helper": [[323, "module-brails.utils.arcgisapi_service_helper", false]], "brails.utils.geo_tools": [[324, "module-brails.utils.geo_tools", false]], "brails.utils.importer": [[325, "module-brails.utils.importer", false]], "brails.utils.input_validator": [[326, "module-brails.utils.input_validator", false]], "brails.utils.inventory_validator": [[327, "module-brails.utils.inventory_validator", false]], "brails.utils.model_utils": [[328, "module-brails.utils.model_utils", false]], "brails.utils.plot_tools": [[329, "module-brails.utils.plot_tools", false]], "brails.utils.rapid_utils": [[330, "module-brails.utils.rapid_utils", false]], "brails.utils.segmentation_utils": [[331, "module-brails.utils.segmentation_utils", false]], "brails.utils.spatial_join_methods": [[332, "module-brails.utils.spatial_join_methods", false]], "brails.utils.spatial_join_methods.base": [[333, "module-brails.utils.spatial_join_methods.base", false]], "brails.utils.spatial_join_methods.distance_based_point_matcher": [[334, "module-brails.utils.spatial_join_methods.distance_based_point_matcher", false]], "brails.utils.spatial_join_methods.get_points_in_polygons": [[335, "module-brails.utils.spatial_join_methods.get_points_in_polygons", false]], "brails.utils.spatial_join_methods.get_points_near_polygons": [[336, "module-brails.utils.spatial_join_methods.get_points_near_polygons", false]], "brails.utils.unit_converter": [[337, "module-brails.utils.unit_converter", false]], "brails2r2dmap (brails.scrapers.nsi_parser.nsi_parser.nsi_parser attribute)": [[302, "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser.brails2r2dmap", false]], "brailserror": [[11, "brails.exceptions.BrailsError", false]], "build_all_layer_point_grids() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[271, "brails.processors.vlm_segmenter.segment_anything.utils.amg.build_all_layer_point_grids", false]], "build_attention_mask() (brails.processors.vlm_image_classifier.clip.model.clip method)": [[252, "brails.processors.vlm_image_classifier.clip.model.CLIP.build_attention_mask", false]], "build_decoder() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.modelbuilder static method)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ModelBuilder.build_decoder", false]], "build_encoder() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.modelbuilder static method)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ModelBuilder.build_encoder", false]], "build_model() (in module brails.processors.vlm_image_classifier.clip.model)": [[252, "brails.processors.vlm_image_classifier.clip.model.build_model", false]], "build_models() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[256, "brails.processors.vlm_segmenter.grounded_sam_utils.build_models", false]], "build_point_grid() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[271, "brails.processors.vlm_segmenter.segment_anything.utils.amg.build_point_grid", false]], "build_sam() (in module brails.processors.vlm_segmenter.segment_anything.build_sam)": [[259, "brails.processors.vlm_segmenter.segment_anything.build_sam.build_sam", false]], "build_sam_hq() (in module brails.processors.vlm_segmenter.segment_anything.build_sam_hq)": [[260, "brails.processors.vlm_segmenter.segment_anything.build_sam_hq.build_sam_hq", false]], "build_sam_hq_vit_b() (in module brails.processors.vlm_segmenter.segment_anything.build_sam_hq)": [[260, "brails.processors.vlm_segmenter.segment_anything.build_sam_hq.build_sam_hq_vit_b", false]], "build_sam_hq_vit_h() (in module brails.processors.vlm_segmenter.segment_anything.build_sam_hq)": [[260, "brails.processors.vlm_segmenter.segment_anything.build_sam_hq.build_sam_hq_vit_h", false]], "build_sam_hq_vit_l() (in module brails.processors.vlm_segmenter.segment_anything.build_sam_hq)": [[260, "brails.processors.vlm_segmenter.segment_anything.build_sam_hq.build_sam_hq_vit_l", false]], "build_sam_vit_b() (in module brails.processors.vlm_segmenter.segment_anything.build_sam)": [[259, "brails.processors.vlm_segmenter.segment_anything.build_sam.build_sam_vit_b", false]], "build_sam_vit_h() (in module brails.processors.vlm_segmenter.segment_anything.build_sam)": [[259, "brails.processors.vlm_segmenter.segment_anything.build_sam.build_sam_vit_h", false]], "build_sam_vit_l() (in module brails.processors.vlm_segmenter.segment_anything.build_sam)": [[259, "brails.processors.vlm_segmenter.segment_anything.build_sam.build_sam_vit_l", false]], "building_class() (in module brails.inferers.hazus_inferer_wind.buildingclassrulesets)": [[29, "brails.inferers.hazus_inferer_wind.BuildingClassRulesets.building_class", false]], "buildingmaterialllm (class in brails.processors.building_material_llm.building_material_llm)": [[59, "brails.processors.building_material_llm.building_material_llm.BuildingMaterialLLM", false]], "bytes_to_unicode() (in module brails.processors.vlm_image_classifier.clip.simple_tokenizer)": [[253, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.bytes_to_unicode", false]], "c1 (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.C1", false]], "c1deepsup (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.C1DeepSup", false]], "calc_iou() (in module brails.processors.chimney_detector.lib.efficientdet.loss)": [[68, "brails.processors.chimney_detector.lib.efficientdet.loss.calc_iou", false]], "calc_iou() (in module brails.processors.garage_detector.lib.efficientdet.loss)": [[181, "brails.processors.garage_detector.lib.efficientdet.loss.calc_iou", false]], "calc_iou() (in module brails.processors.nfloors_detector.lib.efficientdet.loss)": [[217, "brails.processors.nfloors_detector.lib.efficientdet.loss.calc_iou", false]], "calc_perf (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder attribute)": [[279, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.calc_perf", false]], "calculate_stability_score() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[271, "brails.processors.vlm_segmenter.segment_anything.utils.amg.calculate_stability_score", false]], "callbackcontext (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate)": [[82, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.CallbackContext", false]], "callbackcontext (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate)": [[108, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.CallbackContext", false]], "callbackcontext (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate)": [[195, "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.CallbackContext", false]], "callbackcontext (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate)": [[231, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.CallbackContext", false]], "cam_elevs (brails.processors.facade_parser.facade_parser.facadeparser attribute)": [[88, "brails.processors.facade_parser.facade_parser.FacadeParser.cam_elevs", false]], "cat() (brails.processors.vlm_segmenter.segment_anything.utils.amg.maskdata method)": [[271, "brails.processors.vlm_segmenter.segment_anything.utils.amg.MaskData.cat", false]], "categorize_and_split_cells() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[323, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.categorize_and_split_cells", false]], "category_in_df_to_indices() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[19, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.category_in_df_to_indices", false]], "cecb_config() (in module brails.inferers.hazus_inferer_wind.windcecbrulesets)": [[30, "brails.inferers.hazus_inferer_wind.WindCECBRulesets.CECB_config", false]], "center_crop() (in module brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.center_crop", false]], "center_crop() (in module brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.center_crop", false]], "centercropnumpy (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.CenterCropNumpy", false]], "centercropnumpy (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.CenterCropNumpy", false]], "centroids (brails.scrapers.footprint_scraper.footprintscraper attribute)": [[291, "brails.scrapers.footprint_scraper.FootprintScraper.centroids", false]], "cerb_config() (in module brails.inferers.hazus_inferer_wind.windcerbrulesets)": [[31, "brails.inferers.hazus_inferer_wind.WindCERBRulesets.CERB_config", false]], "change_feature_names() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.change_feature_names", false]], "check_keys() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[22, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.check_keys", false]], "check_keys() (brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.hazusinfererearthquake method)": [[25, "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.HazusInfererEarthquake.check_keys", false]], "checkpoint (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[131, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.checkpoint", false]], "checkpoint (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier attribute)": [[284, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.checkpoint", false]], "checkpoints_dir (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[131, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.checkpoints_dir", false]], "checkpoints_dir (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier attribute)": [[284, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.checkpoints_dir", false]], "chimneydetector (class in brails.processors.chimney_detector.chimney_detector)": [[61, "brails.processors.chimney_detector.chimney_detector.ChimneyDetector", false]], "cifar100instance (class in brails.processors.foundation_classifier.npid.npid_datasets)": [[150, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance", false]], "cifar100instance (class in brails.processors.foundation_classifier.npid.npid_datasets.cifar)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance", false]], "cifar10instance (class in brails.processors.foundation_classifier.npid.npid_datasets)": [[150, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR10Instance", false]], "cifar10instance (class in brails.processors.foundation_classifier.npid.npid_datasets.cifar)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR10Instance", false]], "class_weights (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder attribute)": [[279, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.class_weights", false]], "classes (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[131, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.classes", false]], "classes (brails.processors.image_segmenter.image_segmenter.imagesegmenter attribute)": [[205, "brails.processors.image_segmenter.image_segmenter.ImageSegmenter.classes", false]], "classes (brails.processors.street_level_damage_detection.street_level_damage_detection.damagedetection_streetlevel attribute)": [[247, "brails.processors.street_level_damage_detection.street_level_damage_detection.DamageDetection_StreetLevel.classes", false]], "classes (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder attribute)": [[279, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.classes", false]], "classes (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier attribute)": [[284, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.classes", false]], "classifier (class in brails.processors.chimney_detector.lib.efficientdet.model)": [[69, "brails.processors.chimney_detector.lib.efficientdet.model.Classifier", false]], "classifier (class in brails.processors.garage_detector.lib.efficientdet.model)": [[182, "brails.processors.garage_detector.lib.efficientdet.model.Classifier", false]], "classifier (class in brails.processors.nfloors_detector.lib.efficientdet.model)": [[218, "brails.processors.nfloors_detector.lib.efficientdet.model.Classifier", false]], "clean_floats() (in module brails.types.asset_inventory)": [[319, "brails.types.asset_inventory.clean_floats", false]], "clip (class in brails.processors.vlm_image_classifier.clip.model)": [[252, "brails.processors.vlm_image_classifier.clip.model.CLIP", false]], "clipboxes (class in brails.processors.chimney_detector.lib.efficientdet.utils)": [[70, "brails.processors.chimney_detector.lib.efficientdet.utils.ClipBoxes", false]], "clipboxes (class in brails.processors.garage_detector.lib.efficientdet.utils)": [[183, "brails.processors.garage_detector.lib.efficientdet.utils.ClipBoxes", false]], "clipboxes (class in brails.processors.nfloors_detector.lib.efficientdet.utils)": [[219, "brails.processors.nfloors_detector.lib.efficientdet.utils.ClipBoxes", false]], "clipclassifier (class in brails.processors.vlm_image_classifier.clipclassifier)": [[249, "brails.processors.vlm_image_classifier.CLIPClassifier.CLIPClassifier", false]], "clustering() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[19, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.clustering", false]], "coco (class in brails.processors.chimney_detector.lib.efficientdet.coco)": [[65, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO", false]], "coco (class in brails.processors.garage_detector.lib.efficientdet.coco)": [[178, "brails.processors.garage_detector.lib.efficientdet.coco.COCO", false]], "coco (class in brails.processors.nfloors_detector.lib.efficientdet.coco)": [[214, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO", false]], "coco_encode_rle() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[271, "brails.processors.vlm_segmenter.segment_anything.utils.amg.coco_encode_rle", false]], "cocodataset (class in brails.processors.chimney_detector.lib.efficientdet.dataset)": [[67, "brails.processors.chimney_detector.lib.efficientdet.dataset.CocoDataset", false]], "cocodataset (class in brails.processors.garage_detector.lib.efficientdet.dataset)": [[180, "brails.processors.garage_detector.lib.efficientdet.dataset.CocoDataset", false]], "cocodataset (class in brails.processors.nfloors_detector.lib.efficientdet.dataset)": [[216, "brails.processors.nfloors_detector.lib.efficientdet.dataset.CocoDataset", false]], "collater() (in module brails.processors.chimney_detector.lib.efficientdet.dataset)": [[67, "brails.processors.chimney_detector.lib.efficientdet.dataset.collater", false]], "collater() (in module brails.processors.garage_detector.lib.efficientdet.dataset)": [[180, "brails.processors.garage_detector.lib.efficientdet.dataset.collater", false]], "collater() (in module brails.processors.nfloors_detector.lib.efficientdet.dataset)": [[216, "brails.processors.nfloors_detector.lib.efficientdet.dataset.collater", false]], "colorencode() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[128, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.colorEncode", false]], "colors (brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.maskbuilding attribute)": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding.colors", false]], "combinedmaskdataset (class in brails.processors.foundation_classifier.npid.npid_datasets)": [[150, "brails.processors.foundation_classifier.npid.npid_datasets.CombinedMaskDataset", false]], "combinedmaskdataset (class in brails.processors.foundation_classifier.npid.npid_datasets.folder)": [[152, "brails.processors.foundation_classifier.npid.npid_datasets.folder.CombinedMaskDataset", false]], "compute_n_possible_worlds() (brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.hazusinfererearthquake method)": [[25, "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.HazusInfererEarthquake.compute_n_possible_worlds", false]], "compute_similarity() (in module brails.processors.vlm_image_classifier.clip.utils)": [[254, "brails.processors.vlm_image_classifier.clip.utils.compute_similarity", false]], "concatdataset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset)": [[115, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.ConcatDataset", false]], "config_file (brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.maskbuilding attribute)": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding.config_file", false]], "construct_confusion_matrix_image() (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier method)": [[284, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.construct_confusion_matrix_image", false]], "construct_confusion_matrix_image() (in module brails.processors.foundation_classifier.attention_utils.utils)": [[94, "brails.processors.foundation_classifier.attention_utils.utils.construct_confusion_matrix_image", false]], "construct_confusion_matrix_image() (in module brails.processors.year_built_classifier.lib.utils)": [[280, "brails.processors.year_built_classifier.lib.utils.construct_confusion_matrix_image", false]], "constypeclassifier (class in brails.processors.cons_type_classifier.constructiontypeclassifier)": [[86, "brails.processors.cons_type_classifier.ConstructionTypeClassifier.ConsTypeClassifier", false]], "conv2ddynamicsamepadding (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding", false]], "conv2ddynamicsamepadding (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding", false]], "conv2ddynamicsamepadding (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding", false]], "conv2dstaticsamepadding (class in brails.processors.chimney_detector.lib.efficientnet.utils_extra)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding", false]], "conv2dstaticsamepadding (class in brails.processors.garage_detector.lib.efficientnet.utils_extra)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding", false]], "conv2dstaticsamepadding (class in brails.processors.nfloors_detector.lib.efficientnet.utils_extra)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding", false]], "conv3x3_bn_relu() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.conv3x3_bn_relu", false]], "convert_area() (brails.utils.unit_converter.unitconverter static method)": [[337, "brails.utils.unit_converter.UnitConverter.convert_area", false]], "convert_length() (brails.utils.unit_converter.unitconverter static method)": [[337, "brails.utils.unit_converter.UnitConverter.convert_length", false]], "convert_model() (in module brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm)": [[79, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm.convert_model", false]], "convert_model() (in module brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm)": [[192, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm.convert_model", false]], "convert_model() (in module brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm)": [[228, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm.convert_model", false]], "convert_polygons_to_centroids() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.convert_polygons_to_centroids", false]], "convert_unit() (brails.utils.unit_converter.unitconverter static method)": [[337, "brails.utils.unit_converter.UnitConverter.convert_unit", false]], "convert_weight() (brails.utils.unit_converter.unitconverter static method)": [[337, "brails.utils.unit_converter.UnitConverter.convert_weight", false]], "convert_weights() (in module brails.processors.vlm_image_classifier.clip.model)": [[252, "brails.processors.vlm_image_classifier.clip.model.convert_weights", false]], "coordinates (brails.types.asset_inventory.asset attribute)": [[319, "brails.types.asset_inventory.Asset.coordinates", false], [346, "brails.types.asset_inventory.Asset.coordinates", false]], "correct() (brails.inferers.hazus_inferer_wind.hazus_inferer_wind.hazusinfererwind method)": [[47, "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind.correct", false]], "cosine_anneal_schedule() (in module brails.processors.year_built_classifier.lib.utils)": [[280, "brails.processors.year_built_classifier.lib.utils.cosine_anneal_schedule", false]], "create_overlaid_image() (brails.utils.segmentation_utils.segmentationutils static method)": [[331, "brails.utils.segmentation_utils.SegmentationUtils.create_overlaid_image", false]], "createindex() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[65, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.createIndex", false]], "createindex() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[178, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.createIndex", false]], "createindex() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[214, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.createIndex", false]], "cuda() (brails.processors.foundation_classifier.lib.alias_multinomial.aliasmethod method)": [[136, "brails.processors.foundation_classifier.lib.alias_multinomial.AliasMethod.cuda", false]], "cuda() (brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial.aliasmethod method)": [[158, "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial.AliasMethod.cuda", false]], "cummulative_sizes (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.concatdataset property)": [[115, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.ConcatDataset.cummulative_sizes", false]], "cumsum() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.concatdataset static method)": [[115, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.ConcatDataset.cumsum", false]], "customdataparallel (class in brails.processors.chimney_detector.lib.utils.utils)": [[84, "brails.processors.chimney_detector.lib.utils.utils.CustomDataParallel", false]], "customdataparallel (class in brails.processors.garage_detector.lib.utils.utils)": [[197, "brails.processors.garage_detector.lib.utils.utils.CustomDataParallel", false]], "customdataparallel (class in brails.processors.nfloors_detector.lib.utils.utils)": [[233, "brails.processors.nfloors_detector.lib.utils.utils.CustomDataParallel", false]], "damagedetection_streetlevel (class in brails.processors.street_level_damage_detection.street_level_damage_detection)": [[247, "brails.processors.street_level_damage_detection.street_level_damage_detection.DamageDetection_StreetLevel", false]], "data (brails.processors.foundation_classifier.npid.npid_datasets.cifar.cifar100instance attribute)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance.data", false]], "dataparallelwithcallback (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate)": [[82, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback", false]], "dataparallelwithcallback (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate)": [[108, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.DataParallelWithCallback", false]], "dataparallelwithcallback (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate)": [[195, "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback", false]], "dataparallelwithcallback (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate)": [[231, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback", false]], "dataset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset)": [[115, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.Dataset", false]], "datasetbinary (class in brails.processors.image_segmenter.image_segmenter)": [[205, "brails.processors.image_segmenter.image_segmenter.DatasetBinary", false]], "datasetrgb (class in brails.processors.image_segmenter.image_segmenter)": [[205, "brails.processors.image_segmenter.image_segmenter.DatasetRGB", false]], "dec_weights (brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.maskbuilding attribute)": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding.dec_weights", false]], "decode() (brails.processors.chimney_detector.lib.efficientnet.utils.blockdecoder static method)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockDecoder.decode", false]], "decode() (brails.processors.garage_detector.lib.efficientnet.utils.blockdecoder static method)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.BlockDecoder.decode", false]], "decode() (brails.processors.nfloors_detector.lib.efficientnet.utils.blockdecoder static method)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockDecoder.decode", false]], "decode() (brails.processors.vlm_image_classifier.clip.simple_tokenizer.simpletokenizer method)": [[253, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.SimpleTokenizer.decode", false]], "decode_segmap() (brails.utils.segmentation_utils.segmentationutils static method)": [[331, "brails.utils.segmentation_utils.SegmentationUtils.decode_segmap", false]], "default_bpe() (in module brails.processors.vlm_image_classifier.clip.simple_tokenizer)": [[253, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.default_bpe", false]], "denseblock (class in brails.processors.foundation_classifier.models.residual_attention_network)": [[143, "brails.processors.foundation_classifier.models.residual_attention_network.DenseBlock", false]], "depth_coefficient (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.depth_coefficient", false]], "depth_coefficient (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.depth_coefficient", false]], "depth_coefficient (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.depth_coefficient", false]], "depth_divisor (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.depth_divisor", false]], "depth_divisor (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.depth_divisor", false]], "depth_divisor (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.depth_divisor", false]], "depthmaps (brails.processors.facade_parser.facade_parser.facadeparser attribute)": [[88, "brails.processors.facade_parser.facade_parser.FacadeParser.depthmaps", false]], "detect() (in module brails.filters.house_view.house_view)": [[15, "brails.filters.house_view.house_view.detect", false]], "detect() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[256, "brails.processors.vlm_segmenter.grounded_sam_utils.detect", false]], "detectionresult (class in brails.processors.vlm_segmenter.grounded_sam_utils)": [[256, "brails.processors.vlm_segmenter.grounded_sam_utils.DetectionResult", false]], "detector (class in brails.processors.chimney_detector.lib.train_detector)": [[76, "brails.processors.chimney_detector.lib.train_detector.Detector", false]], "detector (class in brails.processors.garage_detector.lib.train_detector)": [[189, "brails.processors.garage_detector.lib.train_detector.Detector", false]], "detector (class in brails.processors.nfloors_detector.lib.train_detector)": [[225, "brails.processors.nfloors_detector.lib.train_detector.Detector", false]], "device (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[131, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.device", false]], "device (brails.processors.image_segmenter.image_segmenter.imagesegmenter attribute)": [[205, "brails.processors.image_segmenter.image_segmenter.ImageSegmenter.device", false]], "device (brails.processors.vlm_image_classifier.clipclassifier.clipclassifier attribute)": [[249, "brails.processors.vlm_image_classifier.CLIPClassifier.CLIPClassifier.device", false]], "device (brails.processors.vlm_segmenter.segment_anything.modeling.sam.sam property)": [[267, "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam.device", false]], "device (brails.processors.vlm_segmenter.segment_anything.predictor.sampredictor property)": [[269, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor.device", false]], "device (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier attribute)": [[284, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.device", false]], "display() (brails.processors.chimney_detector.lib.infer_detector.infer method)": [[75, "brails.processors.chimney_detector.lib.infer_detector.Infer.display", false]], "display() (brails.processors.garage_detector.lib.infer_detector.infer method)": [[188, "brails.processors.garage_detector.lib.infer_detector.Infer.display", false]], "display() (brails.processors.nfloors_detector.lib.infer_detector.infer method)": [[224, "brails.processors.nfloors_detector.lib.infer_detector.Infer.display", false]], "display() (in module brails.processors.chimney_detector.lib.utils.utils)": [[84, "brails.processors.chimney_detector.lib.utils.utils.display", false]], "display() (in module brails.processors.garage_detector.lib.utils.utils)": [[197, "brails.processors.garage_detector.lib.utils.utils.display", false]], "display() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[233, "brails.processors.nfloors_detector.lib.utils.utils.display", false]], "distancebasedpointmatcher (class in brails.utils.spatial_join_methods.distance_based_point_matcher)": [[334, "brails.utils.spatial_join_methods.distance_based_point_matcher.DistanceBasedPointMatcher", false], [361, "brails.utils.spatial_join_methods.distance_based_point_matcher.DistanceBasedPointMatcher", false]], "download_all_attr_for_region() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[323, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.download_all_attr_for_region", false]], "download_all_attr_from_api() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[323, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.download_all_attr_from_api", false]], "download_attr_from_api() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[323, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.download_attr_from_api", false]], "draw() (brails.processors.foundation_classifier.lib.alias_multinomial.aliasmethod method)": [[136, "brails.processors.foundation_classifier.lib.alias_multinomial.AliasMethod.draw", false]], "draw() (brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial.aliasmethod method)": [[158, "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial.AliasMethod.draw", false]], "drop_connect() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.drop_connect", false]], "drop_connect() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.drop_connect", false]], "drop_connect() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.drop_connect", false]], "drop_connect_rate (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.drop_connect_rate", false]], "drop_connect_rate (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.drop_connect_rate", false]], "drop_connect_rate (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.drop_connect_rate", false]], "dropout_rate (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.dropout_rate", false]], "dropout_rate (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.dropout_rate", false]], "dropout_rate (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.dropout_rate", false]], "dtype (brails.processors.vlm_image_classifier.clip.model.clip property)": [[252, "brails.processors.vlm_image_classifier.clip.model.CLIP.dtype", false]], "efficientdetbackbone (class in brails.processors.chimney_detector.lib.backbone)": [[63, "brails.processors.chimney_detector.lib.backbone.EfficientDetBackbone", false]], "efficientdetbackbone (class in brails.processors.garage_detector.lib.backbone)": [[176, "brails.processors.garage_detector.lib.backbone.EfficientDetBackbone", false]], "efficientdetbackbone (class in brails.processors.nfloors_detector.lib.backbone)": [[212, "brails.processors.nfloors_detector.lib.backbone.EfficientDetBackbone", false]], "efficientnet (class in brails.processors.chimney_detector.lib.efficientdet.model)": [[69, "brails.processors.chimney_detector.lib.efficientdet.model.EfficientNet", false]], "efficientnet (class in brails.processors.chimney_detector.lib.efficientnet.model)": [[72, "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet", false]], "efficientnet (class in brails.processors.garage_detector.lib.efficientdet.model)": [[182, "brails.processors.garage_detector.lib.efficientdet.model.EfficientNet", false]], "efficientnet (class in brails.processors.garage_detector.lib.efficientnet.model)": [[185, "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet", false]], "efficientnet (class in brails.processors.nfloors_detector.lib.efficientdet.model)": [[218, "brails.processors.nfloors_detector.lib.efficientdet.model.EfficientNet", false]], "efficientnet (class in brails.processors.nfloors_detector.lib.efficientnet.model)": [[221, "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet", false]], "efficientnet() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.efficientnet", false]], "efficientnet() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.efficientnet", false]], "efficientnet() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.efficientnet", false]], "efficientnet_params() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.efficientnet_params", false]], "efficientnet_params() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.efficientnet_params", false]], "efficientnet_params() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.efficientnet_params", false]], "elastic_transform() (in module brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.elastic_transform", false]], "elastic_transform() (in module brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.elastic_transform", false]], "elastictransform (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.ElasticTransform", false]], "elastictransform (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.ElasticTransform", false]], "enc_weights (brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.maskbuilding attribute)": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding.enc_weights", false]], "encode() (brails.processors.chimney_detector.lib.efficientnet.utils.blockdecoder static method)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockDecoder.encode", false]], "encode() (brails.processors.garage_detector.lib.efficientnet.utils.blockdecoder static method)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.BlockDecoder.encode", false]], "encode() (brails.processors.nfloors_detector.lib.efficientnet.utils.blockdecoder static method)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockDecoder.encode", false]], "encode() (brails.processors.vlm_image_classifier.clip.simple_tokenizer.simpletokenizer method)": [[253, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.SimpleTokenizer.encode", false]], "encode_image() (brails.processors.vlm_image_classifier.clip.model.clip method)": [[252, "brails.processors.vlm_image_classifier.clip.model.CLIP.encode_image", false]], "encode_image() (in module brails.processors.gpt_base_model.utils)": [[200, "brails.processors.gpt_base_model.utils.encode_image", false]], "encode_text() (brails.processors.vlm_image_classifier.clip.model.clip method)": [[252, "brails.processors.vlm_image_classifier.clip.model.CLIP.encode_text", false]], "enhancedcompose (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.EnhancedCompose", false]], "enhancedcompose (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.EnhancedCompose", false]], "evaluate() (in module brails.processors.foundation_classifier.attention_utils.utils)": [[94, "brails.processors.foundation_classifier.attention_utils.utils.evaluate", false]], "evaluate_to_stats() (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier method)": [[284, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.evaluate_to_stats", false]], "execute() (brails.utils.spatial_join_methods.base.spatialjoinmethods static method)": [[333, "brails.utils.spatial_join_methods.base.SpatialJoinMethods.execute", false]], "execute_replication_callbacks() (in module brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate)": [[82, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.execute_replication_callbacks", false]], "execute_replication_callbacks() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate)": [[108, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.execute_replication_callbacks", false]], "execute_replication_callbacks() (in module brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate)": [[195, "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.execute_replication_callbacks", false]], "execute_replication_callbacks() (in module brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate)": [[231, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.execute_replication_callbacks", false]], "expand_ratio (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.expand_ratio", false]], "expand_ratio (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.expand_ratio", false]], "expand_ratio (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.expand_ratio", false]], "expansion (brails.processors.vlm_image_classifier.clip.model.bottleneck attribute)": [[252, "brails.processors.vlm_image_classifier.clip.model.Bottleneck.expansion", false]], "extract_aerial_imagery() (brails.utils.rapid_utils.rapidutils method)": [[330, "brails.utils.rapid_utils.RAPIDUtils.extract_aerial_imagery", false]], "extract_features() (brails.processors.chimney_detector.lib.efficientnet.model.efficientnet method)": [[72, "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet.extract_features", false]], "extract_features() (brails.processors.garage_detector.lib.efficientnet.model.efficientnet method)": [[185, "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet.extract_features", false]], "extract_features() (brails.processors.nfloors_detector.lib.efficientnet.model.efficientnet method)": [[221, "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet.extract_features", false]], "facadeparser (class in brails.processors.facade_parser.facade_parser)": [[88, "brails.processors.facade_parser.facade_parser.FacadeParser", false]], "features (brails.types.asset_inventory.asset attribute)": [[319, "brails.types.asset_inventory.Asset.features", false], [346, "brails.types.asset_inventory.Asset.features", false]], "femafirmscraper (class in brails.scrapers.fema_firm_scraper.fema_firm_scraper)": [[290, "brails.scrapers.fema_firm_scraper.fema_firm_scraper.FEMAFIRMScraper", false]], "fetch_all_elevations() (brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.usgselevationscraper static method)": [[317, "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.USGSElevationScraper.fetch_all_elevations", false]], "fetch_api_fields() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper static method)": [[323, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.fetch_api_fields", false]], "fetch_data_for_cells() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[323, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.fetch_data_for_cells", false]], "fetch_footprint_data() (brails.scrapers.user_footprints.userfootprint method)": [[314, "brails.scrapers.user_footprints.UserFootprint.fetch_footprint_data", false]], "fetch_max_records_per_query() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[323, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.fetch_max_records_per_query", false]], "fetch_release_names() (brails.scrapers.overture_maps_scraper.overture_maps_scraper.overturemapsscraper static method)": [[311, "brails.scrapers.overture_maps_scraper.overture_maps_scraper.OvertureMapsScraper.fetch_release_names", false]], "ffhpredictorklepac (class in brails.processors.ffh_predictor_klepac.ffh_predictor_klepac)": [[90, "brails.processors.ffh_predictor_klepac.ffh_predictor_klepac.FFHPredictorKlepac", false]], "filename (brails.processors.foundation_classifier.npid.npid_datasets.cifar.cifar100instance attribute)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance.filename", false]], "filename (brails.processors.foundation_classifier.npid.npid_datasets.cifar100instance attribute)": [[150, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance.filename", false]], "filenames (brails.processors.foundation_classifier.utils.datasets.foundation_type_testset attribute)": [[171, "brails.processors.foundation_classifier.utils.Datasets.Foundation_Type_Testset.filenames", false]], "filenames (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder attribute)": [[279, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.filenames", false]], "filter (class in brails.filters.filter)": [[13, "brails.filters.filter.Filter", false], [345, "brails.filters.filter.Filter", false]], "filter() (brails.filters.filter.filter method)": [[13, "brails.filters.filter.Filter.filter", false], [13, "id0", false], [345, "brails.filters.filter.Filter.filter", false]], "filter() (brails.filters.house_view.house_view.houseview method)": [[15, "brails.filters.house_view.house_view.HouseView.filter", false]], "filter() (brails.processors.vlm_segmenter.segment_anything.utils.amg.maskdata method)": [[271, "brails.processors.vlm_segmenter.segment_anything.utils.amg.MaskData.filter", false]], "filter1() (brails.filters.house_view.house_view.houseview method)": [[15, "brails.filters.house_view.house_view.HouseView.filter1", false]], "filterboundingbox (class in brails.filters.house_view.house_view)": [[15, "brails.filters.house_view.house_view.FilterBoundingBox", false]], "filterdetectionresult (class in brails.filters.house_view.house_view)": [[15, "brails.filters.house_view.house_view.FilterDetectionResult", false]], "find_json() (in module brails.processors.gpt_base_model.utils)": [[200, "brails.processors.gpt_base_model.utils.find_json", false]], "find_recursive() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[128, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.find_recursive", false]], "flatten_array() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[22, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.flatten_array", false]], "focalloss (class in brails.processors.chimney_detector.lib.efficientdet.loss)": [[68, "brails.processors.chimney_detector.lib.efficientdet.loss.FocalLoss", false]], "focalloss (class in brails.processors.garage_detector.lib.efficientdet.loss)": [[181, "brails.processors.garage_detector.lib.efficientdet.loss.FocalLoss", false]], "focalloss (class in brails.processors.nfloors_detector.lib.efficientdet.loss)": [[217, "brails.processors.nfloors_detector.lib.efficientdet.loss.FocalLoss", false]], "footprints (brails.processors.facade_parser.facade_parser.facadeparser attribute)": [[88, "brails.processors.facade_parser.facade_parser.FacadeParser.footprints", false]], "footprints (brails.scrapers.footprint_scraper.footprintscraper attribute)": [[291, "brails.scrapers.footprint_scraper.FootprintScraper.footprints", false]], "footprints (brails.scrapers.nsi_parser.nsi_parser.nsi_parser attribute)": [[302, "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser.footprints", false]], "footprintscraper (class in brails.scrapers.footprint_scraper)": [[291, "brails.scrapers.footprint_scraper.FootprintScraper", false]], "forward() (brails.processors.chimney_detector.lib.backbone.efficientdetbackbone method)": [[63, "brails.processors.chimney_detector.lib.backbone.EfficientDetBackbone.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientdet.loss.focalloss method)": [[68, "brails.processors.chimney_detector.lib.efficientdet.loss.FocalLoss.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientdet.model.bifpn method)": [[69, "brails.processors.chimney_detector.lib.efficientdet.model.BiFPN.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientdet.model.classifier method)": [[69, "brails.processors.chimney_detector.lib.efficientdet.model.Classifier.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientdet.model.efficientnet method)": [[69, "brails.processors.chimney_detector.lib.efficientdet.model.EfficientNet.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientdet.model.regressor method)": [[69, "brails.processors.chimney_detector.lib.efficientdet.model.Regressor.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientdet.model.separableconvblock method)": [[69, "brails.processors.chimney_detector.lib.efficientdet.model.SeparableConvBlock.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientdet.utils.anchors method)": [[70, "brails.processors.chimney_detector.lib.efficientdet.utils.Anchors.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientdet.utils.bboxtransform method)": [[70, "brails.processors.chimney_detector.lib.efficientdet.utils.BBoxTransform.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientdet.utils.clipboxes method)": [[70, "brails.processors.chimney_detector.lib.efficientdet.utils.ClipBoxes.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.model.efficientnet method)": [[72, "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.model.mbconvblock method)": [[72, "brails.processors.chimney_detector.lib.efficientnet.model.MBConvBlock.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.utils.conv2ddynamicsamepadding method)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.utils.identity method)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.Identity.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.utils.memoryefficientswish method)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.MemoryEfficientSwish.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.utils.swish method)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.Swish.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.utils.swishimplementation static method)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.SwishImplementation.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.utils_extra.conv2dstaticsamepadding method)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.utils_extra.maxpool2dstaticsamepadding method)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding.forward", false]], "forward() (brails.processors.chimney_detector.lib.train_detector.modelwithloss method)": [[76, "brails.processors.chimney_detector.lib.train_detector.ModelWithLoss.forward", false]], "forward() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[80, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.c1 method)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.C1.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.c1deepsup method)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.C1DeepSup.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.mobilenetv2dilated method)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.MobileNetV2Dilated.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ppm method)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.PPM.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ppmdeepsup method)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.PPMDeepsup.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.resnet method)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.Resnet.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.resnetdilated method)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ResnetDilated.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.segmentationmodule method)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.SegmentationModule.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.upernet method)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.UPerNet.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.resnet method)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.ResNet.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext.resnext method)": [[124, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext.ResNeXt.forward", false]], "forward() (brails.processors.foundation_classifier.lib.linearaverage.linearaverage method)": [[133, "brails.processors.foundation_classifier.lib.LinearAverage.LinearAverage.forward", false]], "forward() (brails.processors.foundation_classifier.lib.linearaverage.linearaverageop static method)": [[133, "brails.processors.foundation_classifier.lib.LinearAverage.LinearAverageOp.forward", false]], "forward() (brails.processors.foundation_classifier.lib.nceaverage.nceaverage method)": [[134, "brails.processors.foundation_classifier.lib.NCEAverage.NCEAverage.forward", false]], "forward() (brails.processors.foundation_classifier.lib.nceaverage.ncefunction static method)": [[134, "brails.processors.foundation_classifier.lib.NCEAverage.NCEFunction.forward", false]], "forward() (brails.processors.foundation_classifier.lib.ncecriterion.ncecriterion method)": [[135, "brails.processors.foundation_classifier.lib.NCECriterion.NCECriterion.forward", false]], "forward() (brails.processors.foundation_classifier.lib.normalize.normalize method)": [[138, "brails.processors.foundation_classifier.lib.normalize.Normalize.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_pre method)": [[141, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_pre.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_stage0 method)": [[141, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage0.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_stage1 method)": [[141, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage1.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_stage1_cifar method)": [[141, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage1_cifar.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_stage2 method)": [[141, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage2.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_stage2_cifar method)": [[141, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage2_cifar.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_stage3 method)": [[141, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage3.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_stage3_cifar method)": [[141, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage3_cifar.forward", false]], "forward() (brails.processors.foundation_classifier.models.basic_layer.residualblock method)": [[142, "brails.processors.foundation_classifier.models.basic_layer.ResidualBlock.forward", false]], "forward() (brails.processors.foundation_classifier.models.basic_layer.residualblock1d method)": [[142, "brails.processors.foundation_classifier.models.basic_layer.ResidualBlock1D.forward", false]], "forward() (brails.processors.foundation_classifier.models.residual_attention_network.denseblock method)": [[143, "brails.processors.foundation_classifier.models.residual_attention_network.DenseBlock.forward", false]], "forward() (brails.processors.foundation_classifier.models.residual_attention_network.mlp method)": [[143, "brails.processors.foundation_classifier.models.residual_attention_network.MLP.forward", false]], "forward() (brails.processors.foundation_classifier.models.residual_attention_network.residualattentionmodel_92 method)": [[143, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92.forward", false]], "forward() (brails.processors.foundation_classifier.models.residual_attention_network.residualattentionmodel_92_32input method)": [[143, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_32input.forward", false]], "forward() (brails.processors.foundation_classifier.models.residual_attention_network.residualattentionmodel_92_32input_update method)": [[143, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_32input_update.forward", false]], "forward() (brails.processors.foundation_classifier.models.residual_attention_network.residualattentionmodel_92_small method)": [[143, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_Small.forward", false]], "forward() (brails.processors.foundation_classifier.models.residual_attention_network.residualattentionmodel_92_small_1d method)": [[143, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_Small_1D.forward", false]], "forward() (brails.processors.foundation_classifier.models.resnet_applied.resnet method)": [[144, "brails.processors.foundation_classifier.models.resnet_applied.ResNet.forward", false]], "forward() (brails.processors.foundation_classifier.models.sknet.skconv method)": [[145, "brails.processors.foundation_classifier.models.sknet.SKConv.forward", false]], "forward() (brails.processors.foundation_classifier.models.sknet.sknet method)": [[145, "brails.processors.foundation_classifier.models.sknet.SKNet.forward", false]], "forward() (brails.processors.foundation_classifier.models.sknet.skunit method)": [[145, "brails.processors.foundation_classifier.models.sknet.SKUnit.forward", false]], "forward() (brails.processors.foundation_classifier.npid.npid_lib.linearaverage.linearaverage method)": [[155, "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.LinearAverage.forward", false]], "forward() (brails.processors.foundation_classifier.npid.npid_lib.linearaverage.linearaverageop static method)": [[155, "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.LinearAverageOp.forward", false]], "forward() (brails.processors.foundation_classifier.npid.npid_lib.nceaverage.nceaverage method)": [[156, "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.NCEAverage.forward", false]], "forward() (brails.processors.foundation_classifier.npid.npid_lib.nceaverage.ncefunction static method)": [[156, "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.NCEFunction.forward", false]], "forward() (brails.processors.foundation_classifier.npid.npid_lib.ncecriterion.ncecriterion method)": [[157, "brails.processors.foundation_classifier.npid.npid_lib.NCECriterion.NCECriterion.forward", false]], "forward() (brails.processors.foundation_classifier.npid.npid_lib.normalize.normalize method)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.normalize.Normalize.forward", false]], "forward() (brails.processors.garage_detector.lib.backbone.efficientdetbackbone method)": [[176, "brails.processors.garage_detector.lib.backbone.EfficientDetBackbone.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientdet.loss.focalloss method)": [[181, "brails.processors.garage_detector.lib.efficientdet.loss.FocalLoss.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientdet.model.bifpn method)": [[182, "brails.processors.garage_detector.lib.efficientdet.model.BiFPN.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientdet.model.classifier method)": [[182, "brails.processors.garage_detector.lib.efficientdet.model.Classifier.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientdet.model.efficientnet method)": [[182, "brails.processors.garage_detector.lib.efficientdet.model.EfficientNet.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientdet.model.regressor method)": [[182, "brails.processors.garage_detector.lib.efficientdet.model.Regressor.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientdet.model.separableconvblock method)": [[182, "brails.processors.garage_detector.lib.efficientdet.model.SeparableConvBlock.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientdet.utils.anchors method)": [[183, "brails.processors.garage_detector.lib.efficientdet.utils.Anchors.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientdet.utils.bboxtransform method)": [[183, "brails.processors.garage_detector.lib.efficientdet.utils.BBoxTransform.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientdet.utils.clipboxes method)": [[183, "brails.processors.garage_detector.lib.efficientdet.utils.ClipBoxes.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.model.efficientnet method)": [[185, "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.model.mbconvblock method)": [[185, "brails.processors.garage_detector.lib.efficientnet.model.MBConvBlock.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.utils.conv2ddynamicsamepadding method)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.utils.identity method)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.Identity.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.utils.memoryefficientswish method)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.MemoryEfficientSwish.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.utils.swish method)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.Swish.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.utils.swishimplementation static method)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.SwishImplementation.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.utils_extra.conv2dstaticsamepadding method)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.utils_extra.maxpool2dstaticsamepadding method)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding.forward", false]], "forward() (brails.processors.garage_detector.lib.train_detector.modelwithloss method)": [[189, "brails.processors.garage_detector.lib.train_detector.ModelWithLoss.forward", false]], "forward() (brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[193, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.forward", false]], "forward() (brails.processors.nfloors_detector.lib.backbone.efficientdetbackbone method)": [[212, "brails.processors.nfloors_detector.lib.backbone.EfficientDetBackbone.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientdet.loss.focalloss method)": [[217, "brails.processors.nfloors_detector.lib.efficientdet.loss.FocalLoss.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientdet.model.bifpn method)": [[218, "brails.processors.nfloors_detector.lib.efficientdet.model.BiFPN.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientdet.model.classifier method)": [[218, "brails.processors.nfloors_detector.lib.efficientdet.model.Classifier.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientdet.model.efficientnet method)": [[218, "brails.processors.nfloors_detector.lib.efficientdet.model.EfficientNet.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientdet.model.regressor method)": [[218, "brails.processors.nfloors_detector.lib.efficientdet.model.Regressor.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientdet.model.separableconvblock method)": [[218, "brails.processors.nfloors_detector.lib.efficientdet.model.SeparableConvBlock.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientdet.utils.anchors method)": [[219, "brails.processors.nfloors_detector.lib.efficientdet.utils.Anchors.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientdet.utils.bboxtransform method)": [[219, "brails.processors.nfloors_detector.lib.efficientdet.utils.BBoxTransform.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientdet.utils.clipboxes method)": [[219, "brails.processors.nfloors_detector.lib.efficientdet.utils.ClipBoxes.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.model.efficientnet method)": [[221, "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.model.mbconvblock method)": [[221, "brails.processors.nfloors_detector.lib.efficientnet.model.MBConvBlock.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.utils.conv2ddynamicsamepadding method)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.utils.identity method)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.Identity.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.utils.memoryefficientswish method)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.MemoryEfficientSwish.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.utils.swish method)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.Swish.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.utils.swishimplementation static method)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.SwishImplementation.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.utils_extra.conv2dstaticsamepadding method)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.utils_extra.maxpool2dstaticsamepadding method)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding.forward", false]], "forward() (brails.processors.nfloors_detector.lib.train_detector.modelwithloss method)": [[225, "brails.processors.nfloors_detector.lib.train_detector.ModelWithLoss.forward", false]], "forward() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[229, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.attentionpool2d method)": [[252, "brails.processors.vlm_image_classifier.clip.model.AttentionPool2d.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.bottleneck method)": [[252, "brails.processors.vlm_image_classifier.clip.model.Bottleneck.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.clip method)": [[252, "brails.processors.vlm_image_classifier.clip.model.CLIP.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.layernorm method)": [[252, "brails.processors.vlm_image_classifier.clip.model.LayerNorm.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.modifiedresnet method)": [[252, "brails.processors.vlm_image_classifier.clip.model.ModifiedResNet.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.quickgelu method)": [[252, "brails.processors.vlm_image_classifier.clip.model.QuickGELU.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.residualattentionblock method)": [[252, "brails.processors.vlm_image_classifier.clip.model.ResidualAttentionBlock.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.transformer method)": [[252, "brails.processors.vlm_image_classifier.clip.model.Transformer.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.visiontransformer method)": [[252, "brails.processors.vlm_image_classifier.clip.model.VisionTransformer.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.common.layernorm2d method)": [[262, "brails.processors.vlm_segmenter.segment_anything.modeling.common.LayerNorm2d.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.common.mlpblock method)": [[262, "brails.processors.vlm_segmenter.segment_anything.modeling.common.MLPBlock.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.attention method)": [[263, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.Attention.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.block method)": [[263, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.Block.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.imageencodervit method)": [[263, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.ImageEncoderViT.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.patchembed method)": [[263, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.PatchEmbed.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.maskdecoder method)": [[264, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.MaskDecoder.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.mlp method)": [[264, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.MLP.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.maskdecoderhq method)": [[265, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.MaskDecoderHQ.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.mlp method)": [[265, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.MLP.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.positionembeddingrandom method)": [[266, "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PositionEmbeddingRandom.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.promptencoder method)": [[266, "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PromptEncoder.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.sam.sam method)": [[267, "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.transformer.attention method)": [[268, "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.Attention.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.transformer.twowayattentionblock method)": [[268, "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.TwoWayAttentionBlock.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.transformer.twowaytransformer method)": [[268, "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.TwoWayTransformer.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.utils.onnx.samonnxmodel method)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.onnx.SamOnnxModel.forward", false]], "forward() (brails.processors.year_built_classifier.model.basicconv method)": [[281, "brails.processors.year_built_classifier.model.BasicConv.forward", false]], "forward() (brails.processors.year_built_classifier.model.pmg method)": [[281, "brails.processors.year_built_classifier.model.PMG.forward", false]], "forward() (brails.processors.year_built_classifier.resnet.resnet method)": [[276, "brails.processors.year_built_classifier.Resnet.ResNet.forward", false]], "forward_with_coords() (brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.positionembeddingrandom method)": [[266, "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PositionEmbeddingRandom.forward_with_coords", false]], "foundation_type_binary (class in brails.processors.foundation_classifier.utils.datasets)": [[171, "brails.processors.foundation_classifier.utils.Datasets.Foundation_Type_Binary", false]], "foundation_type_testset (class in brails.processors.foundation_classifier.utils.datasets)": [[171, "brails.processors.foundation_classifier.utils.Datasets.Foundation_Type_Testset", false]], "foundationelevationclassifier (class in brails.processors.foundation_classifier.foundation_classifier)": [[131, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier", false]], "freeze_bn() (brails.processors.chimney_detector.lib.backbone.efficientdetbackbone method)": [[63, "brails.processors.chimney_detector.lib.backbone.EfficientDetBackbone.freeze_bn", false]], "freeze_bn() (brails.processors.garage_detector.lib.backbone.efficientdetbackbone method)": [[176, "brails.processors.garage_detector.lib.backbone.EfficientDetBackbone.freeze_bn", false]], "freeze_bn() (brails.processors.nfloors_detector.lib.backbone.efficientdetbackbone method)": [[212, "brails.processors.nfloors_detector.lib.backbone.EfficientDetBackbone.freeze_bn", false]], "from_colorname_to_bgr() (in module brails.processors.chimney_detector.lib.utils.utils)": [[84, "brails.processors.chimney_detector.lib.utils.utils.from_colorname_to_bgr", false]], "from_colorname_to_bgr() (in module brails.processors.garage_detector.lib.utils.utils)": [[197, "brails.processors.garage_detector.lib.utils.utils.from_colorname_to_bgr", false]], "from_colorname_to_bgr() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[233, "brails.processors.nfloors_detector.lib.utils.utils.from_colorname_to_bgr", false]], "from_dict() (brails.filters.house_view.house_view.filterdetectionresult class method)": [[15, "brails.filters.house_view.house_view.FilterDetectionResult.from_dict", false]], "from_dict() (brails.processors.vlm_segmenter.grounded_sam_utils.detectionresult class method)": [[256, "brails.processors.vlm_segmenter.grounded_sam_utils.DetectionResult.from_dict", false]], "from_name() (brails.processors.chimney_detector.lib.efficientnet.model.efficientnet class method)": [[72, "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet.from_name", false]], "from_name() (brails.processors.garage_detector.lib.efficientnet.model.efficientnet class method)": [[185, "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet.from_name", false]], "from_name() (brails.processors.nfloors_detector.lib.efficientnet.model.efficientnet class method)": [[221, "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet.from_name", false]], "from_pretrained() (brails.processors.chimney_detector.lib.efficientnet.model.efficientnet class method)": [[72, "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet.from_pretrained", false]], "from_pretrained() (brails.processors.garage_detector.lib.efficientnet.model.efficientnet class method)": [[185, "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet.from_pretrained", false]], "from_pretrained() (brails.processors.nfloors_detector.lib.efficientnet.model.efficientnet class method)": [[221, "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet.from_pretrained", false]], "futureresult (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm)": [[81, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.FutureResult", false]], "futureresult (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm)": [[107, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.FutureResult", false]], "futureresult (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.comm)": [[194, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.FutureResult", false]], "futureresult (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm)": [[230, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.FutureResult", false]], "garagedetector (class in brails.processors.garage_detector.garage_detector)": [[174, "brails.processors.garage_detector.garage_detector.GarageDetector", false]], "generate() (brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator.samautomaticmaskgenerator method)": [[258, "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator.SamAutomaticMaskGenerator.generate", false]], "generate_crop_boxes() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[271, "brails.processors.vlm_segmenter.segment_anything.utils.amg.generate_crop_boxes", false]], "geometry_to_list_of_lists() (brails.utils.geo_tools.geotools static method)": [[324, "brails.utils.geo_tools.GeoTools.geometry_to_list_of_lists", false]], "geospatial_knn() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[19, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.geospatial_knn", false]], "geotools (class in brails.utils.geo_tools)": [[324, "brails.utils.geo_tools.GeoTools", false], [352, "brails.utils.geo_tools.GeoTools", false]], "get() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.futureresult method)": [[81, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.FutureResult.get", false]], "get() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.futureresult method)": [[107, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.FutureResult.get", false]], "get() (brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.futureresult method)": [[194, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.FutureResult.get", false]], "get() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.futureresult method)": [[230, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.FutureResult.get", false]], "get_asset_coordinates() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.get_asset_coordinates", false]], "get_asset_features() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.get_asset_features", false]], "get_asset_ids() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.get_asset_ids", false]], "get_assets() (brails.scrapers.nbi_scraper.nbi_scraper.nbiscraper method)": [[300, "brails.scrapers.nbi_scraper.nbi_scraper.NBIScraper.get_assets", false]], "get_assets() (brails.scrapers.nti_scraper.nti_scraper.ntiscraper method)": [[304, "brails.scrapers.nti_scraper.nti_scraper.NTIScraper.get_assets", false]], "get_available_attributes() (brails.scrapers.fema_firm_scraper.fema_firm_scraper.femafirmscraper static method)": [[290, "brails.scrapers.fema_firm_scraper.fema_firm_scraper.FEMAFIRMScraper.get_available_attributes", false]], "get_boundary() (brails.types.region_boundary.regionboundary method)": [[321, "brails.types.region_boundary.RegionBoundary.get_boundary", false]], "get_centroid() (brails.types.asset_inventory.asset method)": [[319, "brails.types.asset_inventory.Asset.get_centroid", false]], "get_class() (brails.utils.importer.importer method)": [[325, "brails.utils.importer.Importer.get_class", false]], "get_coordinates() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.get_coordinates", false]], "get_dataframe() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.get_dataframe", false]], "get_dense_pe() (brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.promptencoder method)": [[266, "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PromptEncoder.get_dense_pe", false]], "get_element_counts() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[323, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.get_element_counts", false]], "get_elements() (brails.scrapers.osm_power_network_scraper.osm_power_network_scraper.osm_powernetworkscraper method)": [[308, "brails.scrapers.osm_power_network_scraper.osm_power_network_scraper.OSM_PowerNetworkScraper.get_elements", false]], "get_elevation_usgs() (brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.usgselevationscraper static method)": [[317, "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.USGSElevationScraper.get_elevation_usgs", false]], "get_era_height_foundation_class() (brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.hazusinfererearthquake method)": [[25, "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.HazusInfererEarthquake.get_era_height_foundation_class", false]], "get_extent() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.get_extent", false]], "get_filtered_data_given_inventory() (brails.scrapers.nsi_parser.nsi_parser.nsi_parser method)": [[302, "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser.get_filtered_data_given_inventory", false]], "get_footprints() (brails.scrapers.footprint_scraper.footprintscraper method)": [[291, "brails.scrapers.footprint_scraper.FootprintScraper.get_footprints", false], [291, "id0", false]], "get_footprints() (brails.scrapers.ms_footprint_scraper.ms_footprint_handler.ms_footprintscraper method)": [[298, "brails.scrapers.ms_footprint_scraper.ms_footprint_handler.MS_FootprintScraper.get_footprints", false]], "get_footprints() (brails.scrapers.osm_footprint_scraper.osm_footprint_scraper.osm_footprintscraper method)": [[306, "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper.OSM_FootprintScraper.get_footprints", false]], "get_footprints() (brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper.overturemapsfootprintscraper method)": [[310, "brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper.OvertureMapsFootprintScraper.get_footprints", false]], "get_footprints() (brails.scrapers.usa_footprint_scraper.usa_footprint_scraper.usa_footprintscraper method)": [[313, "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper.USA_FootprintScraper.get_footprints", false]], "get_geojson() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.get_geojson", false]], "get_hazus_base_replacement_cost() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[23, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_base_replacement_cost", false]], "get_hazus_height_classes() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[23, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_height_classes", false]], "get_hazus_height_classes_res1() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[23, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_height_classes_RES1", false]], "get_hazus_income_to_const_class() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[23, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_income_to_const_class", false]], "get_hazus_occ_type_mapping() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[23, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_occ_type_mapping", false]], "get_hazus_region_to_garage() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[23, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_region_to_garage", false]], "get_hazus_state_region_mapping() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[23, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_state_region_mapping", false]], "get_hazus_year_classes() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[23, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_year_classes", false]], "get_image() (brails.types.image_set.imageset method)": [[320, "brails.types.image_set.ImageSet.get_image", false]], "get_image_embedding() (brails.processors.vlm_segmenter.segment_anything.predictor.sampredictor method)": [[269, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor.get_image_embedding", false]], "get_image_size() (brails.processors.chimney_detector.lib.efficientnet.model.efficientnet class method)": [[72, "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet.get_image_size", false]], "get_image_size() (brails.processors.garage_detector.lib.efficientnet.model.efficientnet class method)": [[185, "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet.get_image_size", false]], "get_image_size() (brails.processors.nfloors_detector.lib.efficientnet.model.efficientnet class method)": [[221, "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet.get_image_size", false]], "get_images() (brails.scrapers.google_satellite.google_satellite.googlesatellite method)": [[293, "brails.scrapers.google_satellite.google_satellite.GoogleSatellite.get_images", false]], "get_images() (brails.scrapers.google_streetview.google_streetview.googlestreetview method)": [[295, "brails.scrapers.google_streetview.google_streetview.GoogleStreetview.get_images", false]], "get_images() (brails.scrapers.image_scraper.imagescraper method)": [[296, "brails.scrapers.image_scraper.ImageScraper.get_images", false]], "get_index_label() (in module brails.processors.chimney_detector.lib.utils.utils)": [[84, "brails.processors.chimney_detector.lib.utils.utils.get_index_label", false]], "get_index_label() (in module brails.processors.garage_detector.lib.utils.utils)": [[197, "brails.processors.garage_detector.lib.utils.utils.get_index_label", false]], "get_index_label() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[233, "brails.processors.nfloors_detector.lib.utils.utils.get_index_label", false]], "get_last_weights() (in module brails.processors.chimney_detector.lib.utils.utils)": [[84, "brails.processors.chimney_detector.lib.utils.utils.get_last_weights", false]], "get_last_weights() (in module brails.processors.garage_detector.lib.utils.utils)": [[197, "brails.processors.garage_detector.lib.utils.utils.get_last_weights", false]], "get_last_weights() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[233, "brails.processors.nfloors_detector.lib.utils.utils.get_last_weights", false]], "get_mask() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.maskbuilding method)": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding.get_mask", false]], "get_model_params() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.get_model_params", false]], "get_model_params() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.get_model_params", false]], "get_model_params() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.get_model_params", false]], "get_model_path() (brails.utils.model_utils.modelutils static method)": [[328, "brails.utils.model_utils.ModelUtils.get_model_path", false]], "get_mosaic_bbox_wgs84() (brails.utils.rapid_utils.rapidutils method)": [[330, "brails.utils.rapid_utils.RAPIDUtils.get_mosaic_bbox_wgs84", false]], "get_multi_keys() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.get_multi_keys", false]], "get_n_pw() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.get_n_pw", false]], "get_object() (brails.utils.importer.importer method)": [[325, "brails.utils.importer.Importer.get_object", false]], "get_pairs() (in module brails.processors.vlm_image_classifier.clip.simple_tokenizer)": [[253, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.get_pairs", false]], "get_preprocess_shape() (brails.processors.vlm_segmenter.segment_anything.utils.transforms.resizelongestside static method)": [[273, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide.get_preprocess_shape", false]], "get_random_sample() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.get_random_sample", false]], "get_raw_data() (brails.scrapers.nsi_parser.nsi_parser.nsi_parser method)": [[302, "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser.get_raw_data", false]], "get_region_elevation_data() (brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.usgselevationscraper method)": [[317, "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.USGSElevationScraper.get_region_elevation_data", false]], "get_rel_pos() (in module brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[263, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.get_rel_pos", false]], "get_replacement_cost() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[22, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.get_replacement_cost", false]], "get_same_padding_conv2d() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.get_same_padding_conv2d", false]], "get_same_padding_conv2d() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.get_same_padding_conv2d", false]], "get_same_padding_conv2d() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.get_same_padding_conv2d", false]], "get_str_from_occ() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[22, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.get_str_from_occ", false]], "get_supported_units() (brails.utils.unit_converter.unitconverter method)": [[337, "brails.utils.unit_converter.UnitConverter.get_supported_units", false]], "get_unit_type() (brails.utils.unit_converter.unitconverter static method)": [[337, "brails.utils.unit_converter.UnitConverter.get_unit_type", false]], "get_world_realization() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.get_world_realization", false]], "getannids() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[65, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.getAnnIds", false]], "getannids() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[178, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.getAnnIds", false]], "getannids() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[214, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.getAnnIds", false]], "getcatids() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[65, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.getCatIds", false]], "getcatids() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[178, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.getCatIds", false]], "getcatids() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[214, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.getCatIds", false]], "getimgids() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[65, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.getImgIds", false]], "getimgids() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[178, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.getImgIds", false]], "getimgids() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[214, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.getImgIds", false]], "getnsidata() (brails.scrapers.nsi_parser.nsi_parser.nsi_parser method)": [[302, "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser.GetNSIData", false]], "getpointsinpolygons (class in brails.utils.spatial_join_methods.get_points_in_polygons)": [[335, "brails.utils.spatial_join_methods.get_points_in_polygons.GetPointsInPolygons", false], [362, "brails.utils.spatial_join_methods.get_points_in_polygons.GetPointsInPolygons", false]], "getpointsnearpolygons (class in brails.utils.spatial_join_methods.get_points_near_polygons)": [[336, "brails.utils.spatial_join_methods.get_points_near_polygons.GetPointsNearPolygons", false], [363, "brails.utils.spatial_join_methods.get_points_near_polygons.GetPointsNearPolygons", false]], "global_rulesets() (in module brails.inferers.hazus_inferer_wind.windmetavarrulesets)": [[40, "brails.inferers.hazus_inferer_wind.WindMetaVarRulesets.global_rulesets", false]], "globalparams (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams", false]], "globalparams (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams", false]], "globalparams (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams", false]], "googlesatellite (class in brails.scrapers.google_satellite.google_satellite)": [[293, "brails.scrapers.google_satellite.google_satellite.GoogleSatellite", false]], "googlestreetview (class in brails.scrapers.google_streetview.google_streetview)": [[295, "brails.scrapers.google_streetview.google_streetview.GoogleStreetview", false]], "gpt (class in brails.processors.gpt_base_model.gpt)": [[199, "brails.processors.gpt_base_model.GPT.GPT", false]], "has_se (brails.processors.chimney_detector.lib.efficientnet.model.mbconvblock attribute)": [[72, "brails.processors.chimney_detector.lib.efficientnet.model.MBConvBlock.has_se", false]], "has_se (brails.processors.garage_detector.lib.efficientnet.model.mbconvblock attribute)": [[185, "brails.processors.garage_detector.lib.efficientnet.model.MBConvBlock.has_se", false]], "has_se (brails.processors.nfloors_detector.lib.efficientnet.model.mbconvblock attribute)": [[221, "brails.processors.nfloors_detector.lib.efficientnet.model.MBConvBlock.has_se", false]], "haversine_dist() (brails.utils.geo_tools.geotools static method)": [[324, "brails.utils.geo_tools.GeoTools.haversine_dist", false]], "hazusinferer (class in brails.inferers.hazus_inferer.hazus_inferer)": [[22, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer", false]], "hazusinfererearthquake (class in brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake)": [[25, "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.HazusInfererEarthquake", false]], "hazusinfererflood (class in brails.inferers.hazus_inferer_flood.hazus_inferer_flood)": [[27, "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood", false]], "hazusinfererwind (class in brails.inferers.hazus_inferer_wind.hazus_inferer_wind)": [[47, "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind", false]], "houseview (class in brails.filters.house_view.house_view)": [[15, "brails.filters.house_view.house_view.HouseView", false]], "hrnetv2() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet)": [[120, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet.hrnetv2", false]], "hueffs_config() (in module brails.inferers.hazus_inferer_wind.windefrulesets)": [[32, "brails.inferers.hazus_inferer_wind.WindEFRulesets.HUEFFS_config", false]], "huefh_config() (in module brails.inferers.hazus_inferer_wind.windefrulesets)": [[32, "brails.inferers.hazus_inferer_wind.WindEFRulesets.HUEFH_config", false]], "huefs_config() (in module brails.inferers.hazus_inferer_wind.windefrulesets)": [[32, "brails.inferers.hazus_inferer_wind.WindEFRulesets.HUEFS_config", false]], "huefss_config() (in module brails.inferers.hazus_inferer_wind.windefrulesets)": [[32, "brails.inferers.hazus_inferer_wind.WindEFRulesets.HUEFSS_config", false]], "id_skip (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.id_skip", false]], "id_skip (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.id_skip", false]], "id_skip (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.id_skip", false]], "identity (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.Identity", false]], "identity (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.Identity", false]], "identity (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.Identity", false]], "image (class in brails.types.image_set)": [[320, "brails.types.image_set.Image", false], [348, "brails.types.image_set.Image", false]], "image_format (brails.processors.vlm_segmenter.segment_anything.modeling.sam.sam attribute)": [[267, "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam.image_format", false]], "image_names (brails.processors.image_segmenter.image_segmenter.datasetbinary attribute)": [[205, "brails.processors.image_segmenter.image_segmenter.DatasetBinary.image_names", false]], "image_names (brails.processors.image_segmenter.image_segmenter.datasetrgb attribute)": [[205, "brails.processors.image_segmenter.image_segmenter.DatasetRGB.image_names", false]], "image_size (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.image_size", false]], "image_size (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.image_size", false]], "image_size (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.image_size", false]], "imageclassifier (class in brails.processors.image_classifier.image_classifier)": [[202, "brails.processors.image_classifier.image_classifier.ImageClassifier", false]], "imageencodervit (class in brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[263, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.ImageEncoderViT", false]], "imagefolderinstance (class in brails.processors.foundation_classifier.npid.npid_datasets)": [[150, "brails.processors.foundation_classifier.npid.npid_datasets.ImageFolderInstance", false]], "imagefolderinstance (class in brails.processors.foundation_classifier.npid.npid_datasets.folder)": [[152, "brails.processors.foundation_classifier.npid.npid_datasets.folder.ImageFolderInstance", false]], "imageprocessor (class in brails.processors.image_processor)": [[203, "brails.processors.image_processor.ImageProcessor", false]], "imagescraper (class in brails.scrapers.image_scraper)": [[296, "brails.scrapers.image_scraper.ImageScraper", false]], "imagesegmenter (class in brails.processors.image_segmenter.image_segmenter)": [[205, "brails.processors.image_segmenter.image_segmenter.ImageSegmenter", false]], "imageset (class in brails.types.image_set)": [[320, "brails.types.image_set.ImageSet", false], [349, "brails.types.image_set.ImageSet", false]], "img_paths (brails.processors.foundation_classifier.utils.datasets.foundation_type_testset attribute)": [[171, "brails.processors.foundation_classifier.utils.Datasets.Foundation_Type_Testset.img_paths", false]], "img_paths (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder attribute)": [[279, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.img_paths", false]], "img_transform() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.basedataset method)": [[100, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.BaseDataset.img_transform", false]], "importer (class in brails.utils.importer)": [[325, "brails.utils.importer.Importer", false], [353, "brails.utils.importer.Importer", false]], "imputation (class in brails.imputers.imputation)": [[17, "brails.imputers.imputation.Imputation", false]], "impute() (brails.imputers.imputation.imputation method)": [[17, "brails.imputers.imputation.Imputation.impute", false]], "impute() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[19, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.impute", false]], "imresize() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset)": [[100, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.imresize", false]], "infer (class in brails.processors.chimney_detector.lib.infer_detector)": [[75, "brails.processors.chimney_detector.lib.infer_detector.Infer", false]], "infer (class in brails.processors.garage_detector.lib.infer_detector)": [[188, "brails.processors.garage_detector.lib.infer_detector.Infer", false]], "infer (class in brails.processors.nfloors_detector.lib.infer_detector)": [[224, "brails.processors.nfloors_detector.lib.infer_detector.Infer", false]], "infer() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[22, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.infer", false]], "infer() (brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.hazusinfererearthquake method)": [[25, "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.HazusInfererEarthquake.infer", false]], "infer() (brails.inferers.hazus_inferer_flood.hazus_inferer_flood.hazusinfererflood method)": [[27, "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood.infer", false]], "infer() (brails.inferers.hazus_inferer_wind.hazus_inferer_wind.hazusinfererwind method)": [[47, "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind.infer", false]], "infer() (brails.inferers.inference_engine.inferenceengine method)": [[48, "brails.inferers.inference_engine.InferenceEngine.infer", false]], "infer() (brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover.nlcdtocoarselandcover method)": [[50, "brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover.NLCDToCoarseLandCover.infer", false]], "infer() (brails.inferers.user_inferer.user_inferer.userinferer method)": [[56, "brails.inferers.user_inferer.user_inferer.UserInferer.infer", false]], "infer_building_one_by_one() (brails.inferers.hazus_inferer_flood.hazus_inferer_flood.hazusinfererflood method)": [[27, "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood.infer_building_one_by_one", false]], "infer_building_one_by_one() (brails.inferers.hazus_inferer_wind.hazus_inferer_wind.hazusinfererwind method)": [[47, "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind.infer_building_one_by_one", false]], "inferenceengine (class in brails.inferers.inference_engine)": [[48, "brails.inferers.inference_engine.InferenceEngine", false]], "info() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[65, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.info", false]], "info() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[178, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.info", false]], "info() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[214, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.info", false]], "init_backbone() (brails.processors.chimney_detector.lib.backbone.efficientdetbackbone method)": [[63, "brails.processors.chimney_detector.lib.backbone.EfficientDetBackbone.init_backbone", false]], "init_backbone() (brails.processors.garage_detector.lib.backbone.efficientdetbackbone method)": [[176, "brails.processors.garage_detector.lib.backbone.EfficientDetBackbone.init_backbone", false]], "init_backbone() (brails.processors.nfloors_detector.lib.backbone.efficientdetbackbone method)": [[212, "brails.processors.nfloors_detector.lib.backbone.EfficientDetBackbone.init_backbone", false]], "init_weights() (in module brails.processors.chimney_detector.lib.utils.utils)": [[84, "brails.processors.chimney_detector.lib.utils.utils.init_weights", false]], "init_weights() (in module brails.processors.garage_detector.lib.utils.utils)": [[197, "brails.processors.garage_detector.lib.utils.utils.init_weights", false]], "init_weights() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[233, "brails.processors.nfloors_detector.lib.utils.utils.init_weights", false]], "initialize() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.averagemeter method)": [[128, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.AverageMeter.initialize", false]], "initialize_parameters() (brails.processors.vlm_image_classifier.clip.model.clip method)": [[252, "brails.processors.vlm_image_classifier.clip.model.CLIP.initialize_parameters", false]], "input_filters (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.input_filters", false]], "input_filters (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.input_filters", false]], "input_filters (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.input_filters", false]], "inputvalidator (class in brails.utils.input_validator)": [[326, "brails.utils.input_validator.InputValidator", false], [354, "brails.utils.input_validator.InputValidator", false]], "intersectionandunion() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[128, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.intersectionAndUnion", false]], "inventory (brails.scrapers.nbi_scraper.nbi_scraper.nbiscraper attribute)": [[300, "brails.scrapers.nbi_scraper.nbi_scraper.NBIScraper.inventory", false]], "inventory (brails.scrapers.nti_scraper.nti_scraper.ntiscraper attribute)": [[304, "brails.scrapers.nti_scraper.nti_scraper.NTIScraper.inventory", false]], "inventoryvalidator (class in brails.utils.inventory_validator)": [[327, "brails.utils.inventory_validator.InventoryValidator", false], [355, "brails.utils.inventory_validator.InventoryValidator", false]], "invert_affine() (in module brails.processors.chimney_detector.lib.utils.utils)": [[84, "brails.processors.chimney_detector.lib.utils.utils.invert_affine", false]], "invert_affine() (in module brails.processors.garage_detector.lib.utils.utils)": [[197, "brails.processors.garage_detector.lib.utils.utils.invert_affine", false]], "invert_affine() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[233, "brails.processors.nfloors_detector.lib.utils.utils.invert_affine", false]], "invetory_to_df() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[19, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.invetory_to_df", false]], "is_box() (brails.utils.input_validator.inputvalidator static method)": [[326, "brails.utils.input_validator.InputValidator.is_box", false]], "is_box_near_crop_edge() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[271, "brails.processors.vlm_segmenter.segment_anything.utils.amg.is_box_near_crop_edge", false]], "is_float() (brails.utils.input_validator.inputvalidator static method)": [[326, "brails.utils.input_validator.InputValidator.is_float", false]], "is_image() (brails.utils.input_validator.inputvalidator static method)": [[326, "brails.utils.input_validator.InputValidator.is_image", false]], "is_inventory() (brails.utils.inventory_validator.inventoryvalidator static method)": [[327, "brails.utils.inventory_validator.InventoryValidator.is_inventory", false]], "is_linestring() (brails.utils.input_validator.inputvalidator static method)": [[326, "brails.utils.input_validator.InputValidator.is_linestring", false]], "is_multilinestring() (brails.utils.input_validator.inputvalidator static method)": [[326, "brails.utils.input_validator.InputValidator.is_multilinestring", false]], "is_multipolygon() (brails.utils.input_validator.inputvalidator static method)": [[326, "brails.utils.input_validator.InputValidator.is_multipolygon", false]], "is_point() (brails.utils.input_validator.inputvalidator static method)": [[326, "brails.utils.input_validator.InputValidator.is_point", false]], "is_polygon() (brails.utils.input_validator.inputvalidator static method)": [[326, "brails.utils.input_validator.InputValidator.is_polygon", false]], "is_ready_to_infer() (brails.inferers.hazus_inferer_flood.hazus_inferer_flood.hazusinfererflood method)": [[27, "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood.is_ready_to_infer", false]], "is_ready_to_infer() (in module brails.inferers.hazus_inferer_wind.windmetavarrulesets)": [[40, "brails.inferers.hazus_inferer_wind.WindMetaVarRulesets.is_ready_to_infer", false]], "items() (brails.processors.vlm_segmenter.segment_anything.utils.amg.maskdata method)": [[271, "brails.processors.vlm_segmenter.segment_anything.utils.amg.MaskData.items", false]], "jigsaw_generator() (in module brails.processors.year_built_classifier.lib.utils)": [[280, "brails.processors.year_built_classifier.lib.utils.jigsaw_generator", false]], "join() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.join", false]], "join_inventories() (brails.utils.spatial_join_methods.base.spatialjoinmethods class method)": [[333, "brails.utils.spatial_join_methods.base.SpatialJoinMethods.join_inventories", false]], "kernel_size (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.kernel_size", false]], "kernel_size (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.kernel_size", false]], "kernel_size (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.kernel_size", false]], "knnimputer (class in brails.imputers.knn_imputer.knn_imputer)": [[19, "brails.imputers.knn_imputer.knn_imputer.KnnImputer", false]], "label (brails.filters.house_view.house_view.filterdetectionresult attribute)": [[15, "brails.filters.house_view.house_view.FilterDetectionResult.label", false]], "label (brails.processors.vlm_segmenter.grounded_sam_utils.detectionresult attribute)": [[256, "brails.processors.vlm_segmenter.grounded_sam_utils.DetectionResult.label", false]], "labels (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder attribute)": [[279, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.labels", false]], "layernorm (class in brails.processors.vlm_image_classifier.clip.model)": [[252, "brails.processors.vlm_image_classifier.clip.model.LayerNorm", false]], "layernorm2d (class in brails.processors.vlm_segmenter.segment_anything.modeling.common)": [[262, "brails.processors.vlm_segmenter.segment_anything.modeling.common.LayerNorm2d", false]], "length_unit (brails.scrapers.ms_footprint_scraper.ms_footprint_handler.ms_footprintscraper attribute)": [[298, "brails.scrapers.ms_footprint_scraper.ms_footprint_handler.MS_FootprintScraper.length_unit", false]], "length_unit (brails.scrapers.nbi_scraper.nbi_scraper.nbiscraper attribute)": [[300, "brails.scrapers.nbi_scraper.nbi_scraper.NBIScraper.length_unit", false]], "length_unit (brails.scrapers.nti_scraper.nti_scraper.ntiscraper attribute)": [[304, "brails.scrapers.nti_scraper.nti_scraper.NTIScraper.length_unit", false]], "length_unit (brails.scrapers.osm_footprint_scraper.osm_footprint_scraper.osm_footprintscraper attribute)": [[306, "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper.OSM_FootprintScraper.length_unit", false]], "length_unit (brails.scrapers.osm_power_network_scraper.osm_power_network_scraper.osm_powernetworkscraper attribute)": [[308, "brails.scrapers.osm_power_network_scraper.osm_power_network_scraper.OSM_PowerNetworkScraper.length_unit", false]], "length_unit (brails.scrapers.usa_footprint_scraper.usa_footprint_scraper.usa_footprintscraper attribute)": [[313, "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper.USA_FootprintScraper.length_unit", false]], "linearaverage (class in brails.processors.foundation_classifier.lib.linearaverage)": [[133, "brails.processors.foundation_classifier.lib.LinearAverage.LinearAverage", false]], "linearaverage (class in brails.processors.foundation_classifier.npid.npid_lib.linearaverage)": [[155, "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.LinearAverage", false]], "linearaverageop (class in brails.processors.foundation_classifier.lib.linearaverage)": [[133, "brails.processors.foundation_classifier.lib.LinearAverage.LinearAverageOp", false]], "linearaverageop (class in brails.processors.foundation_classifier.npid.npid_lib.linearaverage)": [[155, "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.LinearAverageOp", false]], "load() (in module brails.processors.vlm_image_classifier.clip.clip)": [[251, "brails.processors.vlm_image_classifier.clip.clip.load", false]], "load_annotations() (brails.processors.chimney_detector.lib.efficientdet.dataset.cocodataset method)": [[67, "brails.processors.chimney_detector.lib.efficientdet.dataset.CocoDataset.load_annotations", false]], "load_annotations() (brails.processors.garage_detector.lib.efficientdet.dataset.cocodataset method)": [[180, "brails.processors.garage_detector.lib.efficientdet.dataset.CocoDataset.load_annotations", false]], "load_annotations() (brails.processors.nfloors_detector.lib.efficientdet.dataset.cocodataset method)": [[216, "brails.processors.nfloors_detector.lib.efficientdet.dataset.CocoDataset.load_annotations", false]], "load_classes() (brails.processors.chimney_detector.lib.efficientdet.dataset.cocodataset method)": [[67, "brails.processors.chimney_detector.lib.efficientdet.dataset.CocoDataset.load_classes", false]], "load_classes() (brails.processors.garage_detector.lib.efficientdet.dataset.cocodataset method)": [[180, "brails.processors.garage_detector.lib.efficientdet.dataset.CocoDataset.load_classes", false]], "load_classes() (brails.processors.nfloors_detector.lib.efficientdet.dataset.cocodataset method)": [[216, "brails.processors.nfloors_detector.lib.efficientdet.dataset.CocoDataset.load_classes", false]], "load_image() (brails.processors.chimney_detector.lib.efficientdet.dataset.cocodataset method)": [[67, "brails.processors.chimney_detector.lib.efficientdet.dataset.CocoDataset.load_image", false]], "load_image() (brails.processors.garage_detector.lib.efficientdet.dataset.cocodataset method)": [[180, "brails.processors.garage_detector.lib.efficientdet.dataset.CocoDataset.load_image", false]], "load_image() (brails.processors.nfloors_detector.lib.efficientdet.dataset.cocodataset method)": [[216, "brails.processors.nfloors_detector.lib.efficientdet.dataset.CocoDataset.load_image", false]], "load_masks (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[131, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.load_masks", false]], "load_masks (brails.processors.foundation_classifier.utils.datasets.foundation_type_testset attribute)": [[171, "brails.processors.foundation_classifier.utils.Datasets.Foundation_Type_Testset.load_masks", false]], "load_model() (brails.processors.chimney_detector.lib.infer_detector.infer method)": [[75, "brails.processors.chimney_detector.lib.infer_detector.Infer.load_model", false]], "load_model() (brails.processors.garage_detector.lib.infer_detector.infer method)": [[188, "brails.processors.garage_detector.lib.infer_detector.Infer.load_model", false]], "load_model() (brails.processors.nfloors_detector.lib.infer_detector.infer method)": [[224, "brails.processors.nfloors_detector.lib.infer_detector.Infer.load_model", false]], "load_model() (in module brails.processors.year_built_classifier.lib.utils)": [[280, "brails.processors.year_built_classifier.lib.utils.load_model", false]], "load_predictions_from_json() (in module brails.processors.gpt_base_model.utils)": [[200, "brails.processors.gpt_base_model.utils.load_predictions_from_json", false]], "load_pretrained_weights() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.load_pretrained_weights", false]], "load_pretrained_weights() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.load_pretrained_weights", false]], "load_pretrained_weights() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.load_pretrained_weights", false]], "load_url() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils)": [[125, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils.load_url", false]], "loadanns() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[65, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.loadAnns", false]], "loadanns() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[178, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.loadAnns", false]], "loadanns() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[214, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.loadAnns", false]], "loadcats() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[65, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.loadCats", false]], "loadcats() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[178, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.loadCats", false]], "loadcats() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[214, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.loadCats", false]], "loader() (brails.processors.foundation_classifier.npid.npid_datasets.combinedmaskdataset method)": [[150, "brails.processors.foundation_classifier.npid.npid_datasets.CombinedMaskDataset.loader", false]], "loader() (brails.processors.foundation_classifier.npid.npid_datasets.folder.combinedmaskdataset method)": [[152, "brails.processors.foundation_classifier.npid.npid_datasets.folder.CombinedMaskDataset.loader", false]], "loader() (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder method)": [[279, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.loader", false]], "loadimgs() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[65, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.loadImgs", false]], "loadimgs() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[178, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.loadImgs", false]], "loadimgs() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[214, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.loadImgs", false]], "loss_history (brails.processors.image_segmenter.image_segmenter.imagesegmenter attribute)": [[205, "brails.processors.image_segmenter.image_segmenter.ImageSegmenter.loss_history", false]], "mark_volatile() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th.mark_volatile", false]], "mask (brails.filters.house_view.house_view.filterdetectionresult attribute)": [[15, "brails.filters.house_view.house_view.FilterDetectionResult.mask", false]], "mask (brails.processors.vlm_segmenter.grounded_sam_utils.detectionresult attribute)": [[256, "brails.processors.vlm_segmenter.grounded_sam_utils.DetectionResult.mask", false]], "mask_buildings (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[131, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.mask_buildings", false]], "mask_buildings (brails.processors.foundation_classifier.utils.datasets.foundation_type_testset attribute)": [[171, "brails.processors.foundation_classifier.utils.Datasets.Foundation_Type_Testset.mask_buildings", false]], "mask_names (brails.processors.image_segmenter.image_segmenter.datasetbinary attribute)": [[205, "brails.processors.image_segmenter.image_segmenter.DatasetBinary.mask_names", false]], "mask_names (brails.processors.image_segmenter.image_segmenter.datasetrgb attribute)": [[205, "brails.processors.image_segmenter.image_segmenter.DatasetRGB.mask_names", false]], "mask_paths (brails.processors.foundation_classifier.utils.datasets.foundation_type_testset attribute)": [[171, "brails.processors.foundation_classifier.utils.Datasets.Foundation_Type_Testset.mask_paths", false]], "mask_postprocessing() (brails.processors.vlm_segmenter.segment_anything.utils.onnx.samonnxmodel method)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.onnx.SamOnnxModel.mask_postprocessing", false]], "mask_threshold (brails.processors.vlm_segmenter.segment_anything.modeling.sam.sam attribute)": [[267, "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam.mask_threshold", false]], "mask_to_rle_pytorch() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[271, "brails.processors.vlm_segmenter.segment_anything.utils.amg.mask_to_rle_pytorch", false]], "maskbuilding (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation)": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding", false]], "maskdata (class in brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[271, "brails.processors.vlm_segmenter.segment_anything.utils.amg.MaskData", false]], "maskdecoder (class in brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder)": [[264, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.MaskDecoder", false]], "maskdecoderhq (class in brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq)": [[265, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.MaskDecoderHQ", false]], "maskfolderinstance (class in brails.processors.foundation_classifier.npid.npid_datasets)": [[150, "brails.processors.foundation_classifier.npid.npid_datasets.MaskFolderInstance", false]], "maskfolderinstance (class in brails.processors.foundation_classifier.npid.npid_datasets.folder)": [[152, "brails.processors.foundation_classifier.npid.npid_datasets.folder.MaskFolderInstance", false]], "match_points_to_polygons() (brails.utils.geo_tools.geotools static method)": [[324, "brails.utils.geo_tools.GeoTools.match_points_to_polygons", false]], "maxpool2dstaticsamepadding (class in brails.processors.chimney_detector.lib.efficientnet.utils_extra)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding", false]], "maxpool2dstaticsamepadding (class in brails.processors.garage_detector.lib.efficientnet.utils_extra)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding", false]], "maxpool2dstaticsamepadding (class in brails.processors.nfloors_detector.lib.efficientnet.utils_extra)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding", false]], "maxscalenumpy (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.MaxScaleNumpy", false]], "maxscalenumpy (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.MaxScaleNumpy", false]], "mbconvblock (class in brails.processors.chimney_detector.lib.efficientnet.model)": [[72, "brails.processors.chimney_detector.lib.efficientnet.model.MBConvBlock", false]], "mbconvblock (class in brails.processors.garage_detector.lib.efficientnet.model)": [[185, "brails.processors.garage_detector.lib.efficientnet.model.MBConvBlock", false]], "mbconvblock (class in brails.processors.nfloors_detector.lib.efficientnet.model)": [[221, "brails.processors.nfloors_detector.lib.efficientnet.model.MBConvBlock", false]], "mecb_config() (in module brails.inferers.hazus_inferer_wind.windmecbrulesets)": [[33, "brails.inferers.hazus_inferer_wind.WindMECBRulesets.MECB_config", false]], "medianscalenumpy (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.MedianScaleNumpy", false]], "medianscalenumpy (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.MedianScaleNumpy", false]], "memoryefficientswish (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.MemoryEfficientSwish", false]], "memoryefficientswish (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.MemoryEfficientSwish", false]], "memoryefficientswish (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.MemoryEfficientSwish", false]], "merb_config() (in module brails.inferers.hazus_inferer_wind.windmerbrulesets)": [[34, "brails.inferers.hazus_inferer_wind.WindMERBRulesets.MERB_config", false]], "merge (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.Merge", false]], "merge (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.Merge", false]], "merge_two_json() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[19, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.merge_two_json", false]], "merge_two_json() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[22, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.merge_two_json", false]], "merge_two_json() (brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.hazusinfererearthquake method)": [[25, "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.HazusInfererEarthquake.merge_two_json", false]], "merge_two_json() (brails.inferers.hazus_inferer_flood.hazus_inferer_flood.hazusinfererflood method)": [[27, "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood.merge_two_json", false]], "merge_two_json() (brails.inferers.hazus_inferer_wind.hazus_inferer_wind.hazusinfererwind method)": [[47, "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind.merge_two_json", false]], "merge_two_json() (brails.inferers.user_inferer.user_inferer.userinferer method)": [[56, "brails.inferers.user_inferer.user_inferer.UserInferer.merge_two_json", false]], "mesh_polygon() (brails.utils.geo_tools.geotools static method)": [[324, "brails.utils.geo_tools.GeoTools.mesh_polygon", false]], "mh_config() (in module brails.inferers.hazus_inferer_wind.windmhrulesets)": [[35, "brails.inferers.hazus_inferer_wind.WindMHRulesets.MH_config", false]], "min_depth (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.min_depth", false]], "min_depth (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.min_depth", false]], "min_depth (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.min_depth", false]], "mlp (class in brails.processors.foundation_classifier.models.residual_attention_network)": [[143, "brails.processors.foundation_classifier.models.residual_attention_network.MLP", false]], "mlp (class in brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder)": [[264, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.MLP", false]], "mlp (class in brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq)": [[265, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.MLP", false]], "mlpblock (class in brails.processors.vlm_segmenter.segment_anything.modeling.common)": [[262, "brails.processors.vlm_segmenter.segment_anything.modeling.common.MLPBlock", false]], "mlri_config() (in module brails.inferers.hazus_inferer_wind.windmlrirulesets)": [[36, "brails.inferers.hazus_inferer_wind.WindMLRIRulesets.MLRI_config", false]], "mlrm_config() (in module brails.inferers.hazus_inferer_wind.windmlrmrulesets)": [[37, "brails.inferers.hazus_inferer_wind.WindMLRMRulesets.MLRM_config", false]], "mmuh_config() (in module brails.inferers.hazus_inferer_wind.windmmuhrulesets)": [[38, "brails.inferers.hazus_inferer_wind.WindMMUHRulesets.MMUH_config", false]], "mnistinstance (class in brails.processors.foundation_classifier.npid.npid_datasets)": [[150, "brails.processors.foundation_classifier.npid.npid_datasets.MNISTInstance", false]], "mnistinstance (class in brails.processors.foundation_classifier.npid.npid_datasets.mnist)": [[153, "brails.processors.foundation_classifier.npid.npid_datasets.mnist.MNISTInstance", false]], "mobilenetv2() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet)": [[121, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet.mobilenetv2", false]], "mobilenetv2dilated (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.MobileNetV2Dilated", false]], "model (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier attribute)": [[284, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.model", false]], "model_arch (brails.processors.image_segmenter.image_segmenter.imagesegmenter attribute)": [[205, "brails.processors.image_segmenter.image_segmenter.ImageSegmenter.model_arch", false]], "model_arch (brails.processors.vlm_image_classifier.clipclassifier.clipclassifier attribute)": [[249, "brails.processors.vlm_image_classifier.CLIPClassifier.CLIPClassifier.model_arch", false]], "model_dir (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[131, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.model_dir", false]], "model_file (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[131, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.model_file", false]], "model_file (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier attribute)": [[284, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.model_file", false]], "model_info() (in module brails.processors.year_built_classifier.lib.utils)": [[280, "brails.processors.year_built_classifier.lib.utils.model_info", false]], "model_path (brails.processors.facade_parser.facade_parser.facadeparser attribute)": [[88, "brails.processors.facade_parser.facade_parser.FacadeParser.model_path", false]], "modelbuilder (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ModelBuilder", false]], "modelutils (class in brails.utils.model_utils)": [[328, "brails.utils.model_utils.ModelUtils", false], [356, "brails.utils.model_utils.ModelUtils", false]], "modelwithloss (class in brails.processors.chimney_detector.lib.train_detector)": [[76, "brails.processors.chimney_detector.lib.train_detector.ModelWithLoss", false]], "modelwithloss (class in brails.processors.garage_detector.lib.train_detector)": [[189, "brails.processors.garage_detector.lib.train_detector.ModelWithLoss", false]], "modelwithloss (class in brails.processors.nfloors_detector.lib.train_detector)": [[225, "brails.processors.nfloors_detector.lib.train_detector.ModelWithLoss", false]], "modifiedresnet (class in brails.processors.vlm_image_classifier.clip.model)": [[252, "brails.processors.vlm_image_classifier.clip.model.ModifiedResNet", false]], "modulate_occ() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[22, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.modulate_occ", false]], "modulate_occ() (brails.inferers.simcenter_inferer.simcenter_inferer.simcenterinferer method)": [[52, "brails.inferers.simcenter_inferer.simCenter_inferer.SimCenterInferer.modulate_occ", false]], "modulate_weights() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[22, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.modulate_weights", false]], "modulate_weights() (brails.inferers.simcenter_inferer.simcenter_inferer.simcenterinferer method)": [[52, "brails.inferers.simcenter_inferer.simCenter_inferer.SimCenterInferer.modulate_weights", false]], "module": [[9, "module-brails", false], [10, "module-brails.constants", false], [11, "module-brails.exceptions", false], [12, "module-brails.filters", false], [13, "module-brails.filters.filter", false], [14, "module-brails.filters.house_view", false], [15, "module-brails.filters.house_view.house_view", false], [16, "module-brails.imputers", false], [17, "module-brails.imputers.imputation", false], [18, "module-brails.imputers.knn_imputer", false], [19, "module-brails.imputers.knn_imputer.knn_imputer", false], [20, "module-brails.inferers", false], [21, "module-brails.inferers.hazus_inferer", false], [22, "module-brails.inferers.hazus_inferer.hazus_inferer", false], [23, "module-brails.inferers.hazus_inferer.hazus_rulesets", false], [24, "module-brails.inferers.hazus_inferer_earthquake", false], [25, "module-brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake", false], [26, "module-brails.inferers.hazus_inferer_flood", false], [27, "module-brails.inferers.hazus_inferer_flood.hazus_inferer_flood", false], [28, "module-brails.inferers.hazus_inferer_wind", false], [29, "module-brails.inferers.hazus_inferer_wind.BuildingClassRulesets", false], [30, "module-brails.inferers.hazus_inferer_wind.WindCECBRulesets", false], [31, "module-brails.inferers.hazus_inferer_wind.WindCERBRulesets", false], [32, "module-brails.inferers.hazus_inferer_wind.WindEFRulesets", false], [33, "module-brails.inferers.hazus_inferer_wind.WindMECBRulesets", false], [34, "module-brails.inferers.hazus_inferer_wind.WindMERBRulesets", false], [35, "module-brails.inferers.hazus_inferer_wind.WindMHRulesets", false], [36, "module-brails.inferers.hazus_inferer_wind.WindMLRIRulesets", false], [37, "module-brails.inferers.hazus_inferer_wind.WindMLRMRulesets", false], [38, "module-brails.inferers.hazus_inferer_wind.WindMMUHRulesets", false], [39, "module-brails.inferers.hazus_inferer_wind.WindMSFRulesets", false], [40, "module-brails.inferers.hazus_inferer_wind.WindMetaVarRulesets", false], [41, "module-brails.inferers.hazus_inferer_wind.WindSECBRulesets", false], [42, "module-brails.inferers.hazus_inferer_wind.WindSERBRulesets", false], [43, "module-brails.inferers.hazus_inferer_wind.WindSPMBRulesets", false], [44, "module-brails.inferers.hazus_inferer_wind.WindWMUHRulesets", false], [45, "module-brails.inferers.hazus_inferer_wind.WindWSFRulesets", false], [46, "module-brails.inferers.hazus_inferer_wind.auto_HU_NJ", false], [47, "module-brails.inferers.hazus_inferer_wind.hazus_inferer_wind", false], [48, "module-brails.inferers.inference_engine", false], [49, "module-brails.inferers.nlcd_inferer", false], [50, "module-brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover", false], [51, "module-brails.inferers.simcenter_inferer", false], [52, "module-brails.inferers.simcenter_inferer.simCenter_inferer", false], [53, "module-brails.inferers.user_inferer", false], [54, "module-brails.inferers.user_inferer.content_value_inferer", false], [55, "module-brails.inferers.user_inferer.floor_area_inferer", false], [56, "module-brails.inferers.user_inferer.user_inferer", false], [57, "module-brails.processors", false], [58, "module-brails.processors.building_material_llm", false], [59, "module-brails.processors.building_material_llm.building_material_llm", false], [60, "module-brails.processors.chimney_detector", false], [61, "module-brails.processors.chimney_detector.chimney_detector", false], [62, "module-brails.processors.chimney_detector.lib", false], [63, "module-brails.processors.chimney_detector.lib.backbone", false], [64, "module-brails.processors.chimney_detector.lib.efficientdet", false], [65, "module-brails.processors.chimney_detector.lib.efficientdet.coco", false], [66, "module-brails.processors.chimney_detector.lib.efficientdet.config", false], [67, "module-brails.processors.chimney_detector.lib.efficientdet.dataset", false], [68, "module-brails.processors.chimney_detector.lib.efficientdet.loss", false], [69, "module-brails.processors.chimney_detector.lib.efficientdet.model", false], [70, "module-brails.processors.chimney_detector.lib.efficientdet.utils", false], [71, "module-brails.processors.chimney_detector.lib.efficientnet", false], [72, "module-brails.processors.chimney_detector.lib.efficientnet.model", false], [73, "module-brails.processors.chimney_detector.lib.efficientnet.utils", false], [74, "module-brails.processors.chimney_detector.lib.efficientnet.utils_extra", false], [75, "module-brails.processors.chimney_detector.lib.infer_detector", false], [76, "module-brails.processors.chimney_detector.lib.train_detector", false], [77, "module-brails.processors.chimney_detector.lib.utils", false], [78, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm", false], [79, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm", false], [80, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", false], [81, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm", false], [82, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate", false], [83, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest", false], [84, "module-brails.processors.chimney_detector.lib.utils.utils", false], [85, "module-brails.processors.cons_type_classifier", false], [86, "module-brails.processors.cons_type_classifier.ConstructionTypeClassifier", false], [87, "module-brails.processors.facade_parser", false], [88, "module-brails.processors.facade_parser.facade_parser", false], [89, "module-brails.processors.ffh_predictor_klepac", false], [90, "module-brails.processors.ffh_predictor_klepac.ffh_predictor_klepac", false], [91, "module-brails.processors.foundation_classifier", false], [92, "module-brails.processors.foundation_classifier.attention_utils", false], [93, "module-brails.processors.foundation_classifier.attention_utils.radam", false], [94, "module-brails.processors.foundation_classifier.attention_utils.utils", false], [95, "module-brails.processors.foundation_classifier.csail_segmentation_tool", false], [96, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg", false], [97, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config", false], [98, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults", false], [99, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data", false], [100, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset", false], [103, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib", false], [104, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn", false], [105, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules", false], [106, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm", false], [107, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm", false], [108, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate", false], [109, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest", false], [110, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel", false], [111, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel", false], [112, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils", false], [115, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset", false], [117, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler", false], [118, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th", false], [119, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models", false], [120, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet", false], [121, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet", false], [122, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models", false], [123, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet", false], [124, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext", false], [125, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils", false], [128, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils", false], [129, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation", false], [131, "module-brails.processors.foundation_classifier.foundation_classifier", false], [132, "module-brails.processors.foundation_classifier.lib", false], [133, "module-brails.processors.foundation_classifier.lib.LinearAverage", false], [134, "module-brails.processors.foundation_classifier.lib.NCEAverage", false], [135, "module-brails.processors.foundation_classifier.lib.NCECriterion", false], [136, "module-brails.processors.foundation_classifier.lib.alias_multinomial", false], [137, "module-brails.processors.foundation_classifier.lib.custom_transforms", false], [138, "module-brails.processors.foundation_classifier.lib.normalize", false], [139, "module-brails.processors.foundation_classifier.lib.utils", false], [140, "module-brails.processors.foundation_classifier.models", false], [141, "module-brails.processors.foundation_classifier.models.attention_module", false], [142, "module-brails.processors.foundation_classifier.models.basic_layer", false], [143, "module-brails.processors.foundation_classifier.models.residual_attention_network", false], [144, "module-brails.processors.foundation_classifier.models.resnet_applied", false], [145, "module-brails.processors.foundation_classifier.models.sknet", false], [146, "module-brails.processors.foundation_classifier.npid", false], [150, "module-brails.processors.foundation_classifier.npid.npid_datasets", false], [151, "module-brails.processors.foundation_classifier.npid.npid_datasets.cifar", false], [152, "module-brails.processors.foundation_classifier.npid.npid_datasets.folder", false], [153, "module-brails.processors.foundation_classifier.npid.npid_datasets.mnist", false], [154, "module-brails.processors.foundation_classifier.npid.npid_lib", false], [155, "module-brails.processors.foundation_classifier.npid.npid_lib.LinearAverage", false], [156, "module-brails.processors.foundation_classifier.npid.npid_lib.NCEAverage", false], [157, "module-brails.processors.foundation_classifier.npid.npid_lib.NCECriterion", false], [158, "module-brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial", false], [159, "module-brails.processors.foundation_classifier.npid.npid_lib.custom_transforms", false], [160, "module-brails.processors.foundation_classifier.npid.npid_lib.normalize", false], [161, "module-brails.processors.foundation_classifier.npid.npid_lib.utils", false], [165, "module-brails.processors.foundation_classifier.npid.npid_toolbox", false], [170, "module-brails.processors.foundation_classifier.utils", false], [171, "module-brails.processors.foundation_classifier.utils.Datasets", false], [173, "module-brails.processors.garage_detector", false], [174, "module-brails.processors.garage_detector.garage_detector", false], [175, "module-brails.processors.garage_detector.lib", false], [176, "module-brails.processors.garage_detector.lib.backbone", false], [177, "module-brails.processors.garage_detector.lib.efficientdet", false], [178, "module-brails.processors.garage_detector.lib.efficientdet.coco", false], [179, "module-brails.processors.garage_detector.lib.efficientdet.config", false], [180, "module-brails.processors.garage_detector.lib.efficientdet.dataset", false], [181, "module-brails.processors.garage_detector.lib.efficientdet.loss", false], [182, "module-brails.processors.garage_detector.lib.efficientdet.model", false], [183, "module-brails.processors.garage_detector.lib.efficientdet.utils", false], [184, "module-brails.processors.garage_detector.lib.efficientnet", false], [185, "module-brails.processors.garage_detector.lib.efficientnet.model", false], [186, "module-brails.processors.garage_detector.lib.efficientnet.utils", false], [187, "module-brails.processors.garage_detector.lib.efficientnet.utils_extra", false], [188, "module-brails.processors.garage_detector.lib.infer_detector", false], [189, "module-brails.processors.garage_detector.lib.train_detector", false], [190, "module-brails.processors.garage_detector.lib.utils", false], [191, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm", false], [192, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm", false], [193, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", false], [194, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.comm", false], [195, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate", false], [196, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest", false], [197, "module-brails.processors.garage_detector.lib.utils.utils", false], [198, "module-brails.processors.gpt_base_model", false], [199, "module-brails.processors.gpt_base_model.GPT", false], [200, "module-brails.processors.gpt_base_model.utils", false], [201, "module-brails.processors.image_classifier", false], [202, "module-brails.processors.image_classifier.image_classifier", false], [203, "module-brails.processors.image_processor", false], [204, "module-brails.processors.image_segmenter", false], [205, "module-brails.processors.image_segmenter.image_segmenter", false], [206, "module-brails.processors.nFloor_gpt", false], [207, "module-brails.processors.nFloor_gpt.nFloor_gpt", false], [208, "module-brails.processors.nFloor_vlm", false], [209, "module-brails.processors.nFloor_vlm.nFloor_vlm", false], [210, "module-brails.processors.nfloors_detector", false], [211, "module-brails.processors.nfloors_detector.lib", false], [212, "module-brails.processors.nfloors_detector.lib.backbone", false], [213, "module-brails.processors.nfloors_detector.lib.efficientdet", false], [214, "module-brails.processors.nfloors_detector.lib.efficientdet.coco", false], [215, "module-brails.processors.nfloors_detector.lib.efficientdet.config", false], [216, "module-brails.processors.nfloors_detector.lib.efficientdet.dataset", false], [217, "module-brails.processors.nfloors_detector.lib.efficientdet.loss", false], [218, "module-brails.processors.nfloors_detector.lib.efficientdet.model", false], [219, "module-brails.processors.nfloors_detector.lib.efficientdet.utils", false], [220, "module-brails.processors.nfloors_detector.lib.efficientnet", false], [221, "module-brails.processors.nfloors_detector.lib.efficientnet.model", false], [222, "module-brails.processors.nfloors_detector.lib.efficientnet.utils", false], [223, "module-brails.processors.nfloors_detector.lib.efficientnet.utils_extra", false], [224, "module-brails.processors.nfloors_detector.lib.infer_detector", false], [225, "module-brails.processors.nfloors_detector.lib.train_detector", false], [226, "module-brails.processors.nfloors_detector.lib.utils", false], [227, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm", false], [228, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm", false], [229, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", false], [230, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm", false], [231, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate", false], [232, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest", false], [233, "module-brails.processors.nfloors_detector.lib.utils.utils", false], [234, "module-brails.processors.nfloors_detector.nfloor_detector", false], [235, "module-brails.processors.occupancy_classifier", false], [236, "module-brails.processors.occupancy_classifier.occupancy_classifier", false], [237, "module-brails.processors.other_idea", false], [238, "module-brails.processors.other_idea.arial_processing", false], [239, "module-brails.processors.other_idea.street_processor", false], [240, "module-brails.processors.roof_shape_classifier", false], [241, "module-brails.processors.roof_shape_classifier.roof_shape_classifier", false], [242, "module-brails.processors.roof_shape_gpt", false], [243, "module-brails.processors.roof_shape_gpt.roof_shape_gpt", false], [244, "module-brails.processors.roof_shape_vlm", false], [245, "module-brails.processors.roof_shape_vlm.roof_shape_vlm", false], [246, "module-brails.processors.street_level_damage_detection", false], [247, "module-brails.processors.street_level_damage_detection.street_level_damage_detection", false], [248, "module-brails.processors.vlm_image_classifier", false], [249, "module-brails.processors.vlm_image_classifier.CLIPClassifier", false], [250, "module-brails.processors.vlm_image_classifier.clip", false], [251, "module-brails.processors.vlm_image_classifier.clip.clip", false], [252, "module-brails.processors.vlm_image_classifier.clip.model", false], [253, "module-brails.processors.vlm_image_classifier.clip.simple_tokenizer", false], [254, "module-brails.processors.vlm_image_classifier.clip.utils", false], [255, "module-brails.processors.vlm_segmenter", false], [256, "module-brails.processors.vlm_segmenter.grounded_sam_utils", false], [257, "module-brails.processors.vlm_segmenter.segment_anything", false], [258, "module-brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator", false], [259, "module-brails.processors.vlm_segmenter.segment_anything.build_sam", false], [260, "module-brails.processors.vlm_segmenter.segment_anything.build_sam_hq", false], [261, "module-brails.processors.vlm_segmenter.segment_anything.modeling", false], [262, "module-brails.processors.vlm_segmenter.segment_anything.modeling.common", false], [263, "module-brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder", false], [264, "module-brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder", false], [265, "module-brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq", false], [266, "module-brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder", false], [267, "module-brails.processors.vlm_segmenter.segment_anything.modeling.sam", false], [268, "module-brails.processors.vlm_segmenter.segment_anything.modeling.transformer", false], [269, "module-brails.processors.vlm_segmenter.segment_anything.predictor", false], [270, "module-brails.processors.vlm_segmenter.segment_anything.utils", false], [271, "module-brails.processors.vlm_segmenter.segment_anything.utils.amg", false], [272, "module-brails.processors.vlm_segmenter.segment_anything.utils.onnx", false], [273, "module-brails.processors.vlm_segmenter.segment_anything.utils.transforms", false], [274, "module-brails.processors.vlm_segmenter.vlm_segmenter", false], [275, "module-brails.processors.year_built_classifier", false], [276, "module-brails.processors.year_built_classifier.Resnet", false], [278, "module-brails.processors.year_built_classifier.lib", false], [279, "module-brails.processors.year_built_classifier.lib.datasets", false], [280, "module-brails.processors.year_built_classifier.lib.utils", false], [281, "module-brails.processors.year_built_classifier.model", false], [283, "module-brails.processors.year_built_classifier.weights", false], [284, "module-brails.processors.year_built_classifier.year_built_classifier", false], [285, "module-brails.scrapers", false], [286, "module-brails.scrapers.asce_hazard_data_scraper", false], [288, "module-brails.scrapers.asset_data_augmenter", false], [289, "module-brails.scrapers.fema_firm_scraper", false], [290, "module-brails.scrapers.fema_firm_scraper.fema_firm_scraper", false], [291, "module-brails.scrapers.footprint_scraper", false], [292, "module-brails.scrapers.google_satellite", false], [293, "module-brails.scrapers.google_satellite.google_satellite", false], [294, "module-brails.scrapers.google_streetview", false], [295, "module-brails.scrapers.google_streetview.google_streetview", false], [296, "module-brails.scrapers.image_scraper", false], [297, "module-brails.scrapers.ms_footprint_scraper", false], [298, "module-brails.scrapers.ms_footprint_scraper.ms_footprint_handler", false], [299, "module-brails.scrapers.nbi_scraper", false], [300, "module-brails.scrapers.nbi_scraper.nbi_scraper", false], [301, "module-brails.scrapers.nsi_parser", false], [302, "module-brails.scrapers.nsi_parser.nsi_parser", false], [303, "module-brails.scrapers.nti_scraper", false], [304, "module-brails.scrapers.nti_scraper.nti_scraper", false], [305, "module-brails.scrapers.osm_footprint_scraper", false], [306, "module-brails.scrapers.osm_footprint_scraper.osm_footprint_scraper", false], [307, "module-brails.scrapers.osm_power_network_scraper", false], [308, "module-brails.scrapers.osm_power_network_scraper.osm_power_network_scraper", false], [309, "module-brails.scrapers.overture_maps_scraper", false], [310, "module-brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper", false], [311, "module-brails.scrapers.overture_maps_scraper.overture_maps_scraper", false], [312, "module-brails.scrapers.usa_footprint_scraper", false], [313, "module-brails.scrapers.usa_footprint_scraper.usa_footprint_scraper", false], [314, "module-brails.scrapers.user_footprints", false], [315, "module-brails.scrapers.usgs_data_scrapers", false], [316, "module-brails.scrapers.usgs_data_scrapers.nlcd_scraper", false], [317, "module-brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper", false], [318, "module-brails.types", false], [319, "module-brails.types.asset_inventory", false], [320, "module-brails.types.image_set", false], [321, "module-brails.types.region_boundary", false], [322, "module-brails.utils", false], [323, "module-brails.utils.arcgisapi_service_helper", false], [324, "module-brails.utils.geo_tools", false], [325, "module-brails.utils.importer", false], [326, "module-brails.utils.input_validator", false], [327, "module-brails.utils.inventory_validator", false], [328, "module-brails.utils.model_utils", false], [329, "module-brails.utils.plot_tools", false], [330, "module-brails.utils.rapid_utils", false], [331, "module-brails.utils.segmentation_utils", false], [332, "module-brails.utils.spatial_join_methods", false], [333, "module-brails.utils.spatial_join_methods.base", false], [334, "module-brails.utils.spatial_join_methods.distance_based_point_matcher", false], [335, "module-brails.utils.spatial_join_methods.get_points_in_polygons", false], [336, "module-brails.utils.spatial_join_methods.get_points_near_polygons", false], [337, "module-brails.utils.unit_converter", false]], "ms_footprintscraper (class in brails.scrapers.ms_footprint_scraper.ms_footprint_handler)": [[298, "brails.scrapers.ms_footprint_scraper.ms_footprint_handler.MS_FootprintScraper", false]], "msf_config() (in module brails.inferers.hazus_inferer_wind.windmsfrulesets)": [[39, "brails.inferers.hazus_inferer_wind.WindMSFRulesets.MSF_config", false]], "mutualexclude (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.MutualExclude", false]], "mutualexclude (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.MutualExclude", false]], "n_pw (brails.imputers.knn_imputer.knn_imputer.knnimputer attribute)": [[19, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.n_pw", false]], "n_pw (brails.inferers.user_inferer.user_inferer.userinferer attribute)": [[56, "brails.inferers.user_inferer.user_inferer.UserInferer.n_pw", false]], "name (brails.scrapers.footprint_scraper.footprintscraper attribute)": [[291, "brails.scrapers.footprint_scraper.FootprintScraper.name", false]], "nbiscraper (class in brails.scrapers.nbi_scraper.nbi_scraper)": [[300, "brails.scrapers.nbi_scraper.nbi_scraper.NBIScraper", false]], "nceaverage (class in brails.processors.foundation_classifier.lib.nceaverage)": [[134, "brails.processors.foundation_classifier.lib.NCEAverage.NCEAverage", false]], "nceaverage (class in brails.processors.foundation_classifier.npid.npid_lib.nceaverage)": [[156, "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.NCEAverage", false]], "ncecriterion (class in brails.processors.foundation_classifier.lib.ncecriterion)": [[135, "brails.processors.foundation_classifier.lib.NCECriterion.NCECriterion", false]], "ncecriterion (class in brails.processors.foundation_classifier.npid.npid_lib.ncecriterion)": [[157, "brails.processors.foundation_classifier.npid.npid_lib.NCECriterion.NCECriterion", false]], "ncefunction (class in brails.processors.foundation_classifier.lib.nceaverage)": [[134, "brails.processors.foundation_classifier.lib.NCEAverage.NCEFunction", false]], "ncefunction (class in brails.processors.foundation_classifier.npid.npid_lib.nceaverage)": [[156, "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.NCEFunction", false]], "nepochs (brails.processors.image_segmenter.image_segmenter.imagesegmenter attribute)": [[205, "brails.processors.image_segmenter.image_segmenter.ImageSegmenter.nepochs", false]], "nfloordetector (class in brails.processors.nfloors_detector.nfloor_detector)": [[234, "brails.processors.nfloors_detector.nfloor_detector.NFloorDetector", false]], "nfloorgpt (class in brails.processors.nfloor_gpt.nfloor_gpt)": [[207, "brails.processors.nFloor_gpt.nFloor_gpt.NFloorGPT", false]], "nfloorvlm (class in brails.processors.nfloor_vlm.nfloor_vlm)": [[209, "brails.processors.nFloor_vlm.nFloor_vlm.NFloorVLM", false]], "nlcdscraper (class in brails.scrapers.usgs_data_scrapers.nlcd_scraper)": [[316, "brails.scrapers.usgs_data_scrapers.nlcd_scraper.NLCDScraper", false]], "nlcdtocoarselandcover (class in brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover)": [[50, "brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover.NLCDToCoarseLandCover", false]], "nms() (in module brails.processors.chimney_detector.lib.efficientdet.model)": [[69, "brails.processors.chimney_detector.lib.efficientdet.model.nms", false]], "nms() (in module brails.processors.garage_detector.lib.efficientdet.model)": [[182, "brails.processors.garage_detector.lib.efficientdet.model.nms", false]], "nms() (in module brails.processors.nfloors_detector.lib.efficientdet.model)": [[218, "brails.processors.nfloors_detector.lib.efficientdet.model.nms", false]], "normalize (class in brails.processors.foundation_classifier.lib.normalize)": [[138, "brails.processors.foundation_classifier.lib.normalize.Normalize", false]], "normalize (class in brails.processors.foundation_classifier.npid.npid_lib.normalize)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.normalize.Normalize", false]], "normalize_bbox_order() (brails.scrapers.overture_maps_scraper.overture_maps_scraper.overturemapsscraper static method)": [[311, "brails.scrapers.overture_maps_scraper.overture_maps_scraper.OvertureMapsScraper.normalize_bbox_order", false]], "normalize_unit() (brails.utils.unit_converter.unitconverter static method)": [[337, "brails.utils.unit_converter.UnitConverter.normalize_unit", false]], "normalizenumpy (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.NormalizeNumpy", false]], "normalizenumpy (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.NormalizeNumpy", false]], "normalizer (class in brails.processors.chimney_detector.lib.efficientdet.dataset)": [[67, "brails.processors.chimney_detector.lib.efficientdet.dataset.Normalizer", false]], "normalizer (class in brails.processors.garage_detector.lib.efficientdet.dataset)": [[180, "brails.processors.garage_detector.lib.efficientdet.dataset.Normalizer", false]], "normalizer (class in brails.processors.nfloors_detector.lib.efficientdet.dataset)": [[216, "brails.processors.nfloors_detector.lib.efficientdet.dataset.Normalizer", false]], "notfounderror": [[11, "brails.exceptions.NotFoundError", false]], "notsupportedcliexception": [[128, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.NotSupportedCliException", false]], "nr_slaves (brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.syncmaster property)": [[81, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SyncMaster.nr_slaves", false]], "nr_slaves (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.syncmaster property)": [[107, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SyncMaster.nr_slaves", false]], "nr_slaves (brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.syncmaster property)": [[194, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SyncMaster.nr_slaves", false]], "nr_slaves (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.syncmaster property)": [[230, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SyncMaster.nr_slaves", false]], "nsi2brailsmap (brails.scrapers.nsi_parser.nsi_parser.nsi_parser attribute)": [[302, "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser.nsi2brailsmap", false]], "nsi_parser (class in brails.scrapers.nsi_parser.nsi_parser)": [[302, "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser", false]], "ntiscraper (class in brails.scrapers.nti_scraper.nti_scraper)": [[304, "brails.scrapers.nti_scraper.nti_scraper.NTIScraper", false]], "num_classes (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.num_classes", false]], "num_classes (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.num_classes", false]], "num_classes (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.num_classes", false]], "num_repeat (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.num_repeat", false]], "num_repeat (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.num_repeat", false]], "num_repeat (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.num_repeat", false]], "occupancyclassifier (class in brails.processors.occupancy_classifier.occupancy_classifier)": [[236, "brails.processors.occupancy_classifier.occupancy_classifier.OccupancyClassifier", false]], "osm_footprintscraper (class in brails.scrapers.osm_footprint_scraper.osm_footprint_scraper)": [[306, "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper.OSM_FootprintScraper", false]], "osm_powernetworkscraper (class in brails.scrapers.osm_power_network_scraper.osm_power_network_scraper)": [[308, "brails.scrapers.osm_power_network_scraper.osm_power_network_scraper.OSM_PowerNetworkScraper", false]], "output_filters (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.output_filters", false]], "output_filters (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.output_filters", false]], "output_filters (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.output_filters", false]], "overturemapsfootprintscraper (class in brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper)": [[310, "brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper.OvertureMapsFootprintScraper", false]], "overturemapsscraper (class in brails.scrapers.overture_maps_scraper.overture_maps_scraper)": [[311, "brails.scrapers.overture_maps_scraper.overture_maps_scraper.OvertureMapsScraper", false]], "parse_devices() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[128, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.parse_devices", false]], "parse_input_list() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.basedataset method)": [[100, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.BaseDataset.parse_input_list", false]], "parse_units() (brails.utils.unit_converter.unitconverter static method)": [[337, "brails.utils.unit_converter.UnitConverter.parse_units", false]], "patch_replication_callback() (in module brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate)": [[82, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.patch_replication_callback", false]], "patch_replication_callback() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate)": [[108, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.patch_replication_callback", false]], "patch_replication_callback() (in module brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate)": [[195, "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.patch_replication_callback", false]], "patch_replication_callback() (in module brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate)": [[231, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.patch_replication_callback", false]], "patch_sync_batchnorm() (in module brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm)": [[79, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm.patch_sync_batchnorm", false]], "patch_sync_batchnorm() (in module brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm)": [[192, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm.patch_sync_batchnorm", false]], "patch_sync_batchnorm() (in module brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm)": [[228, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm.patch_sync_batchnorm", false]], "patchembed (class in brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[263, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.PatchEmbed", false]], "pixel_acc() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.segmentationmodulebase method)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.SegmentationModuleBase.pixel_acc", false]], "plainradam (class in brails.processors.foundation_classifier.attention_utils.radam)": [[93, "brails.processors.foundation_classifier.attention_utils.radam.PlainRAdam", false]], "plot_images() (brails.utils.plot_tools.plottools static method)": [[329, "brails.utils.plot_tools.PlotTools.plot_images", false]], "plot_one_box() (in module brails.processors.chimney_detector.lib.utils.utils)": [[84, "brails.processors.chimney_detector.lib.utils.utils.plot_one_box", false]], "plot_one_box() (in module brails.processors.garage_detector.lib.utils.utils)": [[197, "brails.processors.garage_detector.lib.utils.utils.plot_one_box", false]], "plot_one_box() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[233, "brails.processors.nfloors_detector.lib.utils.utils.plot_one_box", false]], "plot_polygon_cells() (brails.utils.geo_tools.geotools static method)": [[324, "brails.utils.geo_tools.GeoTools.plot_polygon_cells", false]], "plottools (class in brails.utils.plot_tools)": [[329, "brails.utils.plot_tools.PlotTools", false], [357, "brails.utils.plot_tools.PlotTools", false]], "pmg (class in brails.processors.year_built_classifier.model)": [[281, "brails.processors.year_built_classifier.model.PMG", false]], "poisson_downsampling() (in module brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.poisson_downsampling", false]], "poisson_downsampling() (in module brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.poisson_downsampling", false]], "poissonsubsampling (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.PoissonSubsampling", false]], "poissonsubsampling (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.PoissonSubsampling", false]], "populate_feature() (brails.scrapers.asset_data_augmenter.assetdataaugmenter method)": [[288, "brails.scrapers.asset_data_augmenter.AssetDataAugmenter.populate_feature", false]], "populate_feature() (brails.scrapers.fema_firm_scraper.fema_firm_scraper.femafirmscraper method)": [[290, "brails.scrapers.fema_firm_scraper.fema_firm_scraper.FEMAFIRMScraper.populate_feature", false]], "populate_feature() (brails.scrapers.usgs_data_scrapers.nlcd_scraper.nlcdscraper method)": [[316, "brails.scrapers.usgs_data_scrapers.nlcd_scraper.NLCDScraper.populate_feature", false]], "populate_feature() (brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.usgselevationscraper method)": [[317, "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.USGSElevationScraper.populate_feature", false]], "positionembeddingrandom (class in brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder)": [[266, "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PositionEmbeddingRandom", false]], "postprocess() (in module brails.processors.chimney_detector.lib.utils.utils)": [[84, "brails.processors.chimney_detector.lib.utils.utils.postprocess", false]], "postprocess() (in module brails.processors.garage_detector.lib.utils.utils)": [[197, "brails.processors.garage_detector.lib.utils.utils.postprocess", false]], "postprocess() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[233, "brails.processors.nfloors_detector.lib.utils.utils.postprocess", false]], "postprocess_masks() (brails.processors.vlm_segmenter.segment_anything.modeling.sam.sam method)": [[267, "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam.postprocess_masks", false]], "postprocess_small_regions() (brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator.samautomaticmaskgenerator static method)": [[258, "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator.SamAutomaticMaskGenerator.postprocess_small_regions", false]], "ppm (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.PPM", false]], "ppmdeepsup (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.PPMDeepsup", false]], "pred_idx_to_labels() (in module brails.processors.vlm_image_classifier.clip.utils)": [[254, "brails.processors.vlm_image_classifier.clip.utils.pred_idx_to_labels", false]], "predict() (brails.processors.building_material_llm.building_material_llm.buildingmaterialllm method)": [[59, "brails.processors.building_material_llm.building_material_llm.BuildingMaterialLLM.predict", false]], "predict() (brails.processors.chimney_detector.chimney_detector.chimneydetector method)": [[61, "brails.processors.chimney_detector.chimney_detector.ChimneyDetector.predict", false]], "predict() (brails.processors.chimney_detector.lib.infer_detector.infer method)": [[75, "brails.processors.chimney_detector.lib.infer_detector.Infer.predict", false]], "predict() (brails.processors.cons_type_classifier.constructiontypeclassifier.constypeclassifier method)": [[86, "brails.processors.cons_type_classifier.ConstructionTypeClassifier.ConsTypeClassifier.predict", false]], "predict() (brails.processors.facade_parser.facade_parser.facadeparser method)": [[88, "brails.processors.facade_parser.facade_parser.FacadeParser.predict", false]], "predict() (brails.processors.ffh_predictor_klepac.ffh_predictor_klepac.ffhpredictorklepac method)": [[90, "brails.processors.ffh_predictor_klepac.ffh_predictor_klepac.FFHPredictorKlepac.predict", false]], "predict() (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier method)": [[131, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.predict", false]], "predict() (brails.processors.garage_detector.garage_detector.garagedetector method)": [[174, "brails.processors.garage_detector.garage_detector.GarageDetector.predict", false]], "predict() (brails.processors.garage_detector.lib.infer_detector.infer method)": [[188, "brails.processors.garage_detector.lib.infer_detector.Infer.predict", false]], "predict() (brails.processors.gpt_base_model.gpt.gpt method)": [[199, "brails.processors.gpt_base_model.GPT.GPT.predict", false]], "predict() (brails.processors.image_classifier.image_classifier.imageclassifier method)": [[202, "brails.processors.image_classifier.image_classifier.ImageClassifier.predict", false]], "predict() (brails.processors.image_processor.imageprocessor method)": [[203, "brails.processors.image_processor.ImageProcessor.predict", false], [203, "id0", false]], "predict() (brails.processors.image_segmenter.image_segmenter.imagesegmenter method)": [[205, "brails.processors.image_segmenter.image_segmenter.ImageSegmenter.predict", false]], "predict() (brails.processors.nfloor_gpt.nfloor_gpt.nfloorgpt method)": [[207, "brails.processors.nFloor_gpt.nFloor_gpt.NFloorGPT.predict", false]], "predict() (brails.processors.nfloors_detector.lib.infer_detector.infer method)": [[224, "brails.processors.nfloors_detector.lib.infer_detector.Infer.predict", false]], "predict() (brails.processors.nfloors_detector.nfloor_detector.nfloordetector method)": [[234, "brails.processors.nfloors_detector.nfloor_detector.NFloorDetector.predict", false]], "predict() (brails.processors.occupancy_classifier.occupancy_classifier.occupancyclassifier method)": [[236, "brails.processors.occupancy_classifier.occupancy_classifier.OccupancyClassifier.predict", false], [236, "id0", false]], "predict() (brails.processors.other_idea.arial_processing.arialprocessing method)": [[238, "brails.processors.other_idea.arial_processing.ArialProcessing.predict", false]], "predict() (brails.processors.other_idea.street_processor.streetprocessor method)": [[239, "brails.processors.other_idea.street_processor.StreetProcessor.predict", false]], "predict() (brails.processors.roof_shape_classifier.roof_shape_classifier.roofshapeclassifier method)": [[241, "brails.processors.roof_shape_classifier.roof_shape_classifier.RoofShapeClassifier.predict", false]], "predict() (brails.processors.roof_shape_gpt.roof_shape_gpt.roofshapegpt method)": [[243, "brails.processors.roof_shape_gpt.roof_shape_gpt.RoofShapeGPT.predict", false]], "predict() (brails.processors.street_level_damage_detection.street_level_damage_detection.damagedetection_streetlevel method)": [[247, "brails.processors.street_level_damage_detection.street_level_damage_detection.DamageDetection_StreetLevel.predict", false]], "predict() (brails.processors.vlm_image_classifier.clipclassifier.clipclassifier method)": [[249, "brails.processors.vlm_image_classifier.CLIPClassifier.CLIPClassifier.predict", false]], "predict() (brails.processors.vlm_segmenter.segment_anything.predictor.sampredictor method)": [[269, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor.predict", false]], "predict() (brails.processors.vlm_segmenter.vlm_segmenter.vlmsegmenter method)": [[274, "brails.processors.vlm_segmenter.vlm_segmenter.VLMSegmenter.predict", false]], "predict() (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier method)": [[284, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.predict", false]], "predict_masks() (brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.maskdecoder method)": [[264, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.MaskDecoder.predict_masks", false]], "predict_masks() (brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.maskdecoderhq method)": [[265, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.MaskDecoderHQ.predict_masks", false]], "predict_torch() (brails.processors.vlm_segmenter.segment_anything.predictor.sampredictor method)": [[269, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor.predict_torch", false]], "predict_wrapper() (in module brails.processors.vlm_image_classifier.clip.utils)": [[254, "brails.processors.vlm_image_classifier.clip.utils.predict_wrapper", false]], "predictions (brails.processors.facade_parser.facade_parser.facadeparser attribute)": [[88, "brails.processors.facade_parser.facade_parser.FacadeParser.predictions", false]], "preprocess() (brails.processors.vlm_segmenter.segment_anything.modeling.sam.sam method)": [[267, "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam.preprocess", false]], "preprocess() (in module brails.processors.chimney_detector.lib.utils.utils)": [[84, "brails.processors.chimney_detector.lib.utils.utils.preprocess", false]], "preprocess() (in module brails.processors.garage_detector.lib.utils.utils)": [[197, "brails.processors.garage_detector.lib.utils.utils.preprocess", false]], "preprocess() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[233, "brails.processors.nfloors_detector.lib.utils.utils.preprocess", false]], "preprocess_batch_img() (in module brails.processors.vlm_image_classifier.clip.utils)": [[254, "brails.processors.vlm_image_classifier.clip.utils.preprocess_batch_img", false]], "preprocess_video() (in module brails.processors.chimney_detector.lib.utils.utils)": [[84, "brails.processors.chimney_detector.lib.utils.utils.preprocess_video", false]], "preprocess_video() (in module brails.processors.garage_detector.lib.utils.utils)": [[197, "brails.processors.garage_detector.lib.utils.utils.preprocess_video", false]], "preprocess_video() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[233, "brails.processors.nfloors_detector.lib.utils.utils.preprocess_video", false]], "print_info() (brails.types.asset_inventory.asset method)": [[319, "brails.types.asset_inventory.Asset.print_info", false]], "print_info() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.print_info", false]], "print_info() (brails.types.image_set.image method)": [[320, "brails.types.image_set.Image.print_info", false]], "print_info() (brails.types.image_set.imageset method)": [[320, "brails.types.image_set.ImageSet.print_info", false]], "print_res (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[131, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.print_res", false]], "print_res (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier attribute)": [[284, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.print_res", false]], "process_range() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[128, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.process_range", false]], "prompt_and_save_caption() (in module brails.processors.gpt_base_model.utils)": [[200, "brails.processors.gpt_base_model.utils.prompt_and_save_caption", false]], "promptencoder (class in brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder)": [[266, "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PromptEncoder", false]], "put() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.futureresult method)": [[81, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.FutureResult.put", false]], "put() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.futureresult method)": [[107, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.FutureResult.put", false]], "put() (brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.futureresult method)": [[194, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.FutureResult.put", false]], "put() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.futureresult method)": [[230, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.FutureResult.put", false]], "quickgelu (class in brails.processors.vlm_image_classifier.clip.model)": [[252, "brails.processors.vlm_image_classifier.clip.model.QuickGELU", false]], "radam (class in brails.processors.foundation_classifier.attention_utils.radam)": [[93, "brails.processors.foundation_classifier.attention_utils.radam.RAdam", false]], "random_num_generator() (in module brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.random_num_generator", false]], "random_num_generator() (in module brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.random_num_generator", false]], "random_split() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset)": [[115, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.random_split", false]], "randomcropnumpy (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.RandomCropNumpy", false]], "randomcropnumpy (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.RandomCropNumpy", false]], "randomgaussianblurring (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.RandomGaussianBlurring", false]], "randomgaussianblurring (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.RandomGaussianBlurring", false]], "randomrotate (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.RandomRotate", false]], "randomrotate (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.RandomRotate", false]], "randomsampler (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler)": [[117, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler.RandomSampler", false]], "rapidutils (class in brails.utils.rapid_utils)": [[330, "brails.utils.rapid_utils.RAPIDUtils", false], [358, "brails.utils.rapid_utils.RAPIDUtils", false]], "read_from_csv() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.read_from_csv", false]], "regionboundary (class in brails.types.region_boundary)": [[321, "brails.types.region_boundary.RegionBoundary", false], [350, "brails.types.region_boundary.RegionBoundary", false]], "regioninput (class in brails.types.region_boundary)": [[321, "brails.types.region_boundary.RegionInput", false]], "register_slave() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.syncmaster method)": [[81, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SyncMaster.register_slave", false]], "register_slave() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.syncmaster method)": [[107, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SyncMaster.register_slave", false]], "register_slave() (brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.syncmaster method)": [[194, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SyncMaster.register_slave", false]], "register_slave() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.syncmaster method)": [[230, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SyncMaster.register_slave", false]], "regressor (class in brails.processors.chimney_detector.lib.efficientdet.model)": [[69, "brails.processors.chimney_detector.lib.efficientdet.model.Regressor", false]], "regressor (class in brails.processors.garage_detector.lib.efficientdet.model)": [[182, "brails.processors.garage_detector.lib.efficientdet.model.Regressor", false]], "regressor (class in brails.processors.nfloors_detector.lib.efficientdet.model)": [[218, "brails.processors.nfloors_detector.lib.efficientdet.model.Regressor", false]], "remove_asset() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.remove_asset", false]], "remove_features() (brails.types.asset_inventory.asset method)": [[319, "brails.types.asset_inventory.Asset.remove_features", false]], "remove_features() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.remove_features", false]], "remove_small_regions() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[271, "brails.processors.vlm_segmenter.segment_anything.utils.amg.remove_small_regions", false]], "replace_w_sync_bn() (in module brails.processors.chimney_detector.lib.utils.utils)": [[84, "brails.processors.chimney_detector.lib.utils.utils.replace_w_sync_bn", false]], "replace_w_sync_bn() (in module brails.processors.garage_detector.lib.utils.utils)": [[197, "brails.processors.garage_detector.lib.utils.utils.replace_w_sync_bn", false]], "replace_w_sync_bn() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[233, "brails.processors.nfloors_detector.lib.utils.utils.replace_w_sync_bn", false]], "replicate() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.dataparallelwithcallback method)": [[82, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback.replicate", false]], "replicate() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.dataparallelwithcallback method)": [[108, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.DataParallelWithCallback.replicate", false]], "replicate() (brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.dataparallelwithcallback method)": [[195, "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback.replicate", false]], "replicate() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.dataparallelwithcallback method)": [[231, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback.replicate", false]], "reset() (brails.processors.foundation_classifier.lib.utils.averagemeter method)": [[139, "brails.processors.foundation_classifier.lib.utils.AverageMeter.reset", false]], "reset() (brails.processors.foundation_classifier.npid.npid_lib.utils.averagemeter method)": [[161, "brails.processors.foundation_classifier.npid.npid_lib.utils.AverageMeter.reset", false]], "reset_image() (brails.processors.vlm_segmenter.segment_anything.predictor.sampredictor method)": [[269, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor.reset_image", false]], "reset_parameters() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[80, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_parameters", false]], "reset_parameters() (brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[193, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_parameters", false]], "reset_parameters() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[229, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_parameters", false]], "reset_running_stats() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[80, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_running_stats", false]], "reset_running_stats() (brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[193, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_running_stats", false]], "reset_running_stats() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[229, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_running_stats", false]], "residualattentionblock (class in brails.processors.vlm_image_classifier.clip.model)": [[252, "brails.processors.vlm_image_classifier.clip.model.ResidualAttentionBlock", false]], "residualattentionmodel_92 (class in brails.processors.foundation_classifier.models.residual_attention_network)": [[143, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92", false]], "residualattentionmodel_92_32input (class in brails.processors.foundation_classifier.models.residual_attention_network)": [[143, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_32input", false]], "residualattentionmodel_92_32input_update (class in brails.processors.foundation_classifier.models.residual_attention_network)": [[143, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_32input_update", false]], "residualattentionmodel_92_small (class in brails.processors.foundation_classifier.models.residual_attention_network)": [[143, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_Small", false]], "residualattentionmodel_92_small_1d (class in brails.processors.foundation_classifier.models.residual_attention_network)": [[143, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_Small_1D", false]], "residualblock (class in brails.processors.foundation_classifier.models.basic_layer)": [[142, "brails.processors.foundation_classifier.models.basic_layer.ResidualBlock", false]], "residualblock1d (class in brails.processors.foundation_classifier.models.basic_layer)": [[142, "brails.processors.foundation_classifier.models.basic_layer.ResidualBlock1D", false]], "resize_longest_image_size() (brails.processors.vlm_segmenter.segment_anything.utils.onnx.samonnxmodel static method)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.onnx.SamOnnxModel.resize_longest_image_size", false]], "resizelongestside (class in brails.processors.vlm_segmenter.segment_anything.utils.transforms)": [[273, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide", false]], "resizer (class in brails.processors.chimney_detector.lib.efficientdet.dataset)": [[67, "brails.processors.chimney_detector.lib.efficientdet.dataset.Resizer", false]], "resizer (class in brails.processors.garage_detector.lib.efficientdet.dataset)": [[180, "brails.processors.garage_detector.lib.efficientdet.dataset.Resizer", false]], "resizer (class in brails.processors.nfloors_detector.lib.efficientdet.dataset)": [[216, "brails.processors.nfloors_detector.lib.efficientdet.dataset.Resizer", false]], "resnet (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.Resnet", false]], "resnet (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.ResNet", false]], "resnet (class in brails.processors.foundation_classifier.models.resnet_applied)": [[144, "brails.processors.foundation_classifier.models.resnet_applied.ResNet", false]], "resnet (class in brails.processors.year_built_classifier.resnet)": [[276, "brails.processors.year_built_classifier.Resnet.ResNet", false]], "resnet101() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.resnet101", false]], "resnet101() (in module brails.processors.foundation_classifier.models.resnet_applied)": [[144, "brails.processors.foundation_classifier.models.resnet_applied.resnet101", false]], "resnet101() (in module brails.processors.year_built_classifier.resnet)": [[276, "brails.processors.year_built_classifier.Resnet.resnet101", false]], "resnet152() (in module brails.processors.foundation_classifier.models.resnet_applied)": [[144, "brails.processors.foundation_classifier.models.resnet_applied.resnet152", false]], "resnet152() (in module brails.processors.year_built_classifier.resnet)": [[276, "brails.processors.year_built_classifier.Resnet.resnet152", false]], "resnet18() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.resnet18", false]], "resnet18() (in module brails.processors.foundation_classifier.models.resnet_applied)": [[144, "brails.processors.foundation_classifier.models.resnet_applied.resnet18", false]], "resnet18() (in module brails.processors.year_built_classifier.resnet)": [[276, "brails.processors.year_built_classifier.Resnet.resnet18", false]], "resnet34() (in module brails.processors.foundation_classifier.models.resnet_applied)": [[144, "brails.processors.foundation_classifier.models.resnet_applied.resnet34", false]], "resnet34() (in module brails.processors.year_built_classifier.resnet)": [[276, "brails.processors.year_built_classifier.Resnet.resnet34", false]], "resnet50() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.resnet50", false]], "resnet50() (in module brails.processors.foundation_classifier.models.resnet_applied)": [[144, "brails.processors.foundation_classifier.models.resnet_applied.resnet50", false]], "resnet50() (in module brails.processors.year_built_classifier.resnet)": [[276, "brails.processors.year_built_classifier.Resnet.resnet50", false]], "resnetdilated (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ResnetDilated", false]], "resnext (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext)": [[124, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext.ResNeXt", false]], "resnext101() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext)": [[124, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext.resnext101", false]], "resnext101_32x8d() (in module brails.processors.year_built_classifier.resnet)": [[276, "brails.processors.year_built_classifier.Resnet.resnext101_32x8d", false]], "resnext50_32x4d() (in module brails.processors.year_built_classifier.resnet)": [[276, "brails.processors.year_built_classifier.Resnet.resnext50_32x4d", false]], "retrain() (brails.processors.chimney_detector.chimney_detector.chimneydetector method)": [[61, "brails.processors.chimney_detector.chimney_detector.ChimneyDetector.retrain", false]], "retrain() (brails.processors.cons_type_classifier.constructiontypeclassifier.constypeclassifier method)": [[86, "brails.processors.cons_type_classifier.ConstructionTypeClassifier.ConsTypeClassifier.retrain", false]], "retrain() (brails.processors.garage_detector.garage_detector.garagedetector method)": [[174, "brails.processors.garage_detector.garage_detector.GarageDetector.retrain", false]], "retrain() (brails.processors.image_classifier.image_classifier.imageclassifier method)": [[202, "brails.processors.image_classifier.image_classifier.ImageClassifier.retrain", false]], "retrain() (brails.processors.nfloors_detector.nfloor_detector.nfloordetector method)": [[234, "brails.processors.nfloors_detector.nfloor_detector.NFloorDetector.retrain", false]], "retrain() (brails.processors.occupancy_classifier.occupancy_classifier.occupancyclassifier method)": [[236, "brails.processors.occupancy_classifier.occupancy_classifier.OccupancyClassifier.retrain", false]], "retrain() (brails.processors.roof_shape_classifier.roof_shape_classifier.roofshapeclassifier method)": [[241, "brails.processors.roof_shape_classifier.roof_shape_classifier.RoofShapeClassifier.retrain", false]], "rle_to_mask() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[271, "brails.processors.vlm_segmenter.segment_anything.utils.amg.rle_to_mask", false]], "roofshapeclassifier (class in brails.processors.roof_shape_classifier.roof_shape_classifier)": [[241, "brails.processors.roof_shape_classifier.roof_shape_classifier.RoofShapeClassifier", false]], "roofshapegpt (class in brails.processors.roof_shape_gpt.roof_shape_gpt)": [[243, "brails.processors.roof_shape_gpt.roof_shape_gpt.RoofShapeGPT", false]], "roofshapevlm (class in brails.processors.roof_shape_vlm.roof_shape_vlm)": [[245, "brails.processors.roof_shape_vlm.roof_shape_vlm.RoofShapeVLM", false]], "round() (in module brails.processors.vlm_image_classifier.clip.utils)": [[254, "brails.processors.vlm_image_classifier.clip.utils.round", false]], "round2nearest_multiple() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.basedataset method)": [[100, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.BaseDataset.round2nearest_multiple", false]], "round2nearest_multiple() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.maskbuilding method)": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding.round2nearest_multiple", false]], "round_filters() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.round_filters", false]], "round_filters() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.round_filters", false]], "round_filters() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.round_filters", false]], "round_repeats() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.round_repeats", false]], "round_repeats() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.round_repeats", false]], "round_repeats() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.round_repeats", false]], "run_master() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.syncmaster method)": [[81, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SyncMaster.run_master", false]], "run_master() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.syncmaster method)": [[107, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SyncMaster.run_master", false]], "run_master() (brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.syncmaster method)": [[194, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SyncMaster.run_master", false]], "run_master() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.syncmaster method)": [[230, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SyncMaster.run_master", false]], "run_on_one_image() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[256, "brails.processors.vlm_segmenter.grounded_sam_utils.run_on_one_image", false]], "run_slave() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.slavepipe method)": [[81, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SlavePipe.run_slave", false]], "run_slave() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.slavepipe method)": [[107, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SlavePipe.run_slave", false]], "run_slave() (brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.slavepipe method)": [[194, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SlavePipe.run_slave", false]], "run_slave() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.slavepipe method)": [[230, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SlavePipe.run_slave", false]], "sam (class in brails.processors.vlm_segmenter.segment_anything.modeling.sam)": [[267, "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam", false]], "samautomaticmaskgenerator (class in brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator)": [[258, "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator.SamAutomaticMaskGenerator", false]], "samonnxmodel (class in brails.processors.vlm_segmenter.segment_anything.utils.onnx)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.onnx.SamOnnxModel", false]], "sampler (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler)": [[117, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler.Sampler", false]], "sampredictor (class in brails.processors.vlm_segmenter.segment_anything.predictor)": [[269, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor", false]], "save_checkpoint() (brails.processors.chimney_detector.lib.train_detector.detector method)": [[76, "brails.processors.chimney_detector.lib.train_detector.Detector.save_checkpoint", false]], "save_checkpoint() (brails.processors.garage_detector.lib.train_detector.detector method)": [[189, "brails.processors.garage_detector.lib.train_detector.Detector.save_checkpoint", false]], "save_checkpoint() (brails.processors.nfloors_detector.lib.train_detector.detector method)": [[225, "brails.processors.nfloors_detector.lib.train_detector.Detector.save_checkpoint", false]], "scatter() (brails.processors.chimney_detector.lib.utils.utils.customdataparallel method)": [[84, "brails.processors.chimney_detector.lib.utils.utils.CustomDataParallel.scatter", false]], "scatter() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel.userscattereddataparallel method)": [[111, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel.UserScatteredDataParallel.scatter", false]], "scatter() (brails.processors.garage_detector.lib.utils.utils.customdataparallel method)": [[197, "brails.processors.garage_detector.lib.utils.utils.CustomDataParallel.scatter", false]], "scatter() (brails.processors.nfloors_detector.lib.utils.utils.customdataparallel method)": [[233, "brails.processors.nfloors_detector.lib.utils.utils.CustomDataParallel.scatter", false]], "score (brails.filters.house_view.house_view.filterdetectionresult attribute)": [[15, "brails.filters.house_view.house_view.FilterDetectionResult.score", false]], "score (brails.processors.vlm_segmenter.grounded_sam_utils.detectionresult attribute)": [[256, "brails.processors.vlm_segmenter.grounded_sam_utils.DetectionResult.score", false]], "se_ratio (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.se_ratio", false]], "se_ratio (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.se_ratio", false]], "se_ratio (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.se_ratio", false]], "secb_config() (in module brails.inferers.hazus_inferer_wind.windsecbrulesets)": [[41, "brails.inferers.hazus_inferer_wind.WindSECBRulesets.SECB_config", false]], "seed (brails.inferers.user_inferer.user_inferer.userinferer attribute)": [[56, "brails.inferers.user_inferer.user_inferer.UserInferer.seed", false]], "segm_transform() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.basedataset method)": [[100, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.BaseDataset.segm_transform", false]], "segment() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[256, "brails.processors.vlm_segmenter.grounded_sam_utils.segment", false]], "segmentationmodule (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.SegmentationModule", false]], "segmentationmodulebase (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.SegmentationModuleBase", false]], "segmentationutils (class in brails.utils.segmentation_utils)": [[331, "brails.utils.segmentation_utils.SegmentationUtils", false], [359, "brails.utils.segmentation_utils.SegmentationUtils", false]], "select_masks() (brails.processors.vlm_segmenter.segment_anything.utils.onnx.samonnxmodel method)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.onnx.SamOnnxModel.select_masks", false]], "separableconvblock (class in brails.processors.chimney_detector.lib.efficientdet.model)": [[69, "brails.processors.chimney_detector.lib.efficientdet.model.SeparableConvBlock", false]], "separableconvblock (class in brails.processors.garage_detector.lib.efficientdet.model)": [[182, "brails.processors.garage_detector.lib.efficientdet.model.SeparableConvBlock", false]], "separableconvblock (class in brails.processors.nfloors_detector.lib.efficientdet.model)": [[218, "brails.processors.nfloors_detector.lib.efficientdet.model.SeparableConvBlock", false]], "sequential_imputer() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[19, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.sequential_imputer", false]], "sequentialsampler (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler)": [[117, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler.SequentialSampler", false]], "serb_config() (in module brails.inferers.hazus_inferer_wind.windserbrulesets)": [[42, "brails.inferers.hazus_inferer_wind.WindSERBRulesets.SERB_config", false]], "set_directory() (brails.types.image_set.imageset method)": [[320, "brails.types.image_set.ImageSet.set_directory", false]], "set_fixed_params() (brails.processors.chimney_detector.lib.train_detector.detector method)": [[76, "brails.processors.chimney_detector.lib.train_detector.Detector.set_fixed_params", false]], "set_fixed_params() (brails.processors.garage_detector.lib.train_detector.detector method)": [[189, "brails.processors.garage_detector.lib.train_detector.Detector.set_fixed_params", false]], "set_fixed_params() (brails.processors.nfloors_detector.lib.train_detector.detector method)": [[225, "brails.processors.nfloors_detector.lib.train_detector.Detector.set_fixed_params", false]], "set_hyperparams() (brails.processors.chimney_detector.lib.train_detector.detector method)": [[76, "brails.processors.chimney_detector.lib.train_detector.Detector.set_hyperparams", false]], "set_hyperparams() (brails.processors.garage_detector.lib.train_detector.detector method)": [[189, "brails.processors.garage_detector.lib.train_detector.Detector.set_hyperparams", false]], "set_hyperparams() (brails.processors.nfloors_detector.lib.train_detector.detector method)": [[225, "brails.processors.nfloors_detector.lib.train_detector.Detector.set_hyperparams", false]], "set_image() (brails.processors.vlm_segmenter.segment_anything.predictor.sampredictor method)": [[269, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor.set_image", false]], "set_model() (brails.processors.chimney_detector.lib.train_detector.detector method)": [[76, "brails.processors.chimney_detector.lib.train_detector.Detector.set_model", false]], "set_model() (brails.processors.garage_detector.lib.train_detector.detector method)": [[189, "brails.processors.garage_detector.lib.train_detector.Detector.set_model", false]], "set_model() (brails.processors.nfloors_detector.lib.train_detector.detector method)": [[225, "brails.processors.nfloors_detector.lib.train_detector.Detector.set_model", false]], "set_swish() (brails.processors.chimney_detector.lib.efficientnet.model.efficientnet method)": [[72, "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet.set_swish", false]], "set_swish() (brails.processors.chimney_detector.lib.efficientnet.model.mbconvblock method)": [[72, "brails.processors.chimney_detector.lib.efficientnet.model.MBConvBlock.set_swish", false]], "set_swish() (brails.processors.garage_detector.lib.efficientnet.model.efficientnet method)": [[185, "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet.set_swish", false]], "set_swish() (brails.processors.garage_detector.lib.efficientnet.model.mbconvblock method)": [[185, "brails.processors.garage_detector.lib.efficientnet.model.MBConvBlock.set_swish", false]], "set_swish() (brails.processors.nfloors_detector.lib.efficientnet.model.efficientnet method)": [[221, "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet.set_swish", false]], "set_swish() (brails.processors.nfloors_detector.lib.efficientnet.model.mbconvblock method)": [[221, "brails.processors.nfloors_detector.lib.efficientnet.model.MBConvBlock.set_swish", false]], "set_torch_image() (brails.processors.vlm_segmenter.segment_anything.predictor.sampredictor method)": [[269, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor.set_torch_image", false]], "set_train_dataset() (brails.processors.chimney_detector.lib.train_detector.detector method)": [[76, "brails.processors.chimney_detector.lib.train_detector.Detector.set_train_dataset", false]], "set_train_dataset() (brails.processors.garage_detector.lib.train_detector.detector method)": [[189, "brails.processors.garage_detector.lib.train_detector.Detector.set_train_dataset", false]], "set_train_dataset() (brails.processors.nfloors_detector.lib.train_detector.detector method)": [[225, "brails.processors.nfloors_detector.lib.train_detector.Detector.set_train_dataset", false]], "set_val_dataset() (brails.processors.chimney_detector.lib.train_detector.detector method)": [[76, "brails.processors.chimney_detector.lib.train_detector.Detector.set_val_dataset", false]], "set_val_dataset() (brails.processors.garage_detector.lib.train_detector.detector method)": [[189, "brails.processors.garage_detector.lib.train_detector.Detector.set_val_dataset", false]], "set_val_dataset() (brails.processors.nfloors_detector.lib.train_detector.detector method)": [[225, "brails.processors.nfloors_detector.lib.train_detector.Detector.set_val_dataset", false]], "setup_logger() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[128, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.setup_logger", false]], "show_binary_mask() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[256, "brails.processors.vlm_segmenter.grounded_sam_utils.show_binary_mask", false]], "show_box() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[256, "brails.processors.vlm_segmenter.grounded_sam_utils.show_box", false]], "show_points() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[256, "brails.processors.vlm_segmenter.grounded_sam_utils.show_points", false]], "show_predictions() (brails.utils.plot_tools.plottools static method)": [[329, "brails.utils.plot_tools.PlotTools.show_predictions", false]], "simcenterinferer (class in brails.inferers.simcenter_inferer.simcenter_inferer)": [[52, "brails.inferers.simcenter_inferer.simCenter_inferer.SimCenterInferer", false]], "simpletokenizer (class in brails.processors.vlm_image_classifier.clip.simple_tokenizer)": [[253, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.SimpleTokenizer", false]], "skconv (class in brails.processors.foundation_classifier.models.sknet)": [[145, "brails.processors.foundation_classifier.models.sknet.SKConv", false]], "sknet (class in brails.processors.foundation_classifier.models.sknet)": [[145, "brails.processors.foundation_classifier.models.sknet.SKNet", false]], "sknet101() (in module brails.processors.foundation_classifier.models.sknet)": [[145, "brails.processors.foundation_classifier.models.sknet.SKNet101", false]], "sknet26() (in module brails.processors.foundation_classifier.models.sknet)": [[145, "brails.processors.foundation_classifier.models.sknet.SKNet26", false]], "sknet50() (in module brails.processors.foundation_classifier.models.sknet)": [[145, "brails.processors.foundation_classifier.models.sknet.SKNet50", false]], "skunit (class in brails.processors.foundation_classifier.models.sknet)": [[145, "brails.processors.foundation_classifier.models.sknet.SKUnit", false]], "slavepipe (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm)": [[81, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SlavePipe", false]], "slavepipe (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm)": [[107, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SlavePipe", false]], "slavepipe (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.comm)": [[194, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SlavePipe", false]], "slavepipe (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm)": [[230, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SlavePipe", false]], "sliding_window() (in module brails.processors.foundation_classifier.attention_utils.utils)": [[94, "brails.processors.foundation_classifier.attention_utils.utils.sliding_window", false]], "soft_labels (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder attribute)": [[279, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.soft_labels", false]], "spatialjoinmethods (class in brails.utils.spatial_join_methods.base)": [[333, "brails.utils.spatial_join_methods.base.SpatialJoinMethods", false], [360, "brails.utils.spatial_join_methods.base.SpatialJoinMethods", false]], "split (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.Split", false]], "split (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.Split", false]], "split_polygon_into_cells() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[323, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.split_polygon_into_cells", false]], "spmb_config() (in module brails.inferers.hazus_inferer_wind.windspmbrulesets)": [[43, "brails.inferers.hazus_inferer_wind.WindSPMBRulesets.SPMB_config", false]], "standard_to_bgr() (in module brails.processors.chimney_detector.lib.utils.utils)": [[84, "brails.processors.chimney_detector.lib.utils.utils.standard_to_bgr", false]], "standard_to_bgr() (in module brails.processors.garage_detector.lib.utils.utils)": [[197, "brails.processors.garage_detector.lib.utils.utils.standard_to_bgr", false]], "standard_to_bgr() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[233, "brails.processors.nfloors_detector.lib.utils.utils.standard_to_bgr", false]], "start_training() (brails.processors.chimney_detector.lib.train_detector.detector method)": [[76, "brails.processors.chimney_detector.lib.train_detector.Detector.start_training", false]], "start_training() (brails.processors.garage_detector.lib.train_detector.detector method)": [[189, "brails.processors.garage_detector.lib.train_detector.Detector.start_training", false]], "start_training() (brails.processors.nfloors_detector.lib.train_detector.detector method)": [[225, "brails.processors.nfloors_detector.lib.train_detector.Detector.start_training", false]], "step() (brails.processors.foundation_classifier.attention_utils.radam.adamw method)": [[93, "brails.processors.foundation_classifier.attention_utils.radam.AdamW.step", false]], "step() (brails.processors.foundation_classifier.attention_utils.radam.plainradam method)": [[93, "brails.processors.foundation_classifier.attention_utils.radam.PlainRAdam.step", false]], "step() (brails.processors.foundation_classifier.attention_utils.radam.radam method)": [[93, "brails.processors.foundation_classifier.attention_utils.radam.RAdam.step", false]], "street_images (brails.processors.facade_parser.facade_parser.facadeparser attribute)": [[88, "brails.processors.facade_parser.facade_parser.FacadeParser.street_images", false]], "streetprocessor (class in brails.processors.other_idea.street_processor)": [[239, "brails.processors.other_idea.street_processor.StreetProcessor", false]], "stride (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.stride", false]], "stride (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.stride", false]], "stride (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.stride", false]], "subset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset)": [[115, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.Subset", false]], "subsetrandomsampler (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler)": [[117, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler.SubsetRandomSampler", false]], "supported_asset_elevation_modes() (brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.usgselevationscraper static method)": [[317, "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.USGSElevationScraper.supported_asset_elevation_modes", false]], "swish (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.Swish", false]], "swish (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.Swish", false]], "swish (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.Swish", false]], "swishimplementation (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.SwishImplementation", false]], "swishimplementation (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.SwishImplementation", false]], "swishimplementation (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.SwishImplementation", false]], "synchronizedbatchnorm1d (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm)": [[79, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm1d", false]], "synchronizedbatchnorm1d (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm)": [[106, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm.SynchronizedBatchNorm1d", false]], "synchronizedbatchnorm1d (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm)": [[192, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm1d", false]], "synchronizedbatchnorm1d (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm)": [[228, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm1d", false]], "synchronizedbatchnorm2d (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm)": [[79, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm2d", false]], "synchronizedbatchnorm2d (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm)": [[106, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm.SynchronizedBatchNorm2d", false]], "synchronizedbatchnorm2d (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm)": [[192, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm2d", false]], "synchronizedbatchnorm2d (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm)": [[228, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm2d", false]], "synchronizedbatchnorm3d (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm)": [[79, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm3d", false]], "synchronizedbatchnorm3d (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm)": [[106, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm.SynchronizedBatchNorm3d", false]], "synchronizedbatchnorm3d (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm)": [[192, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm3d", false]], "synchronizedbatchnorm3d (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm)": [[228, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm3d", false]], "syncmaster (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm)": [[81, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SyncMaster", false]], "syncmaster (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm)": [[107, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SyncMaster", false]], "syncmaster (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.comm)": [[194, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SyncMaster", false]], "syncmaster (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm)": [[230, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SyncMaster", false]], "system_dict (brails.processors.chimney_detector.chimney_detector.chimneydetector attribute)": [[61, "brails.processors.chimney_detector.chimney_detector.ChimneyDetector.system_dict", false]], "template (brails.processors.vlm_image_classifier.clipclassifier.clipclassifier attribute)": [[249, "brails.processors.vlm_image_classifier.CLIPClassifier.CLIPClassifier.template", false]], "tensordataset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset)": [[115, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.TensorDataset", false]], "test() (in module brails.processors.year_built_classifier.lib.utils)": [[280, "brails.processors.year_built_classifier.lib.utils.test", false]], "test_list (brails.processors.foundation_classifier.npid.npid_datasets.cifar.cifar100instance attribute)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance.test_list", false]], "test_list (brails.processors.foundation_classifier.npid.npid_datasets.cifar100instance attribute)": [[150, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance.test_list", false]], "test_softlabels() (in module brails.processors.year_built_classifier.lib.utils)": [[280, "brails.processors.year_built_classifier.lib.utils.test_softlabels", false]], "test_transforms (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[131, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.test_transforms", false]], "test_transforms (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier attribute)": [[284, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.test_transforms", false]], "testdataset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset)": [[100, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.TestDataset", false]], "text_prompts (brails.processors.street_level_damage_detection.street_level_damage_detection.damagedetection_streetlevel attribute)": [[247, "brails.processors.street_level_damage_detection.street_level_damage_detection.DamageDetection_StreetLevel.text_prompts", false]], "tgz_md5 (brails.processors.foundation_classifier.npid.npid_datasets.cifar.cifar100instance attribute)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance.tgz_md5", false]], "tgz_md5 (brails.processors.foundation_classifier.npid.npid_datasets.cifar100instance attribute)": [[150, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance.tgz_md5", false]], "to_json() (brails.inferers.hazus_inferer_flood.hazus_inferer_flood.hazusinfererflood method)": [[27, "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood.to_json", false]], "to_json() (brails.inferers.hazus_inferer_wind.hazus_inferer_wind.hazusinfererwind method)": [[47, "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind.to_json", false]], "to_json() (brails.inferers.user_inferer.user_inferer.userinferer method)": [[56, "brails.inferers.user_inferer.user_inferer.UserInferer.to_json", false]], "to_numpy() (brails.processors.vlm_segmenter.segment_anything.utils.amg.maskdata method)": [[271, "brails.processors.vlm_segmenter.segment_anything.utils.amg.MaskData.to_numpy", false]], "to_tensor() (in module brails.processors.foundation_classifier.lib.custom_transforms)": [[137, "brails.processors.foundation_classifier.lib.custom_transforms.to_tensor", false]], "to_tensor() (in module brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.to_tensor", false]], "tokenize() (in module brails.processors.vlm_image_classifier.clip.clip)": [[251, "brails.processors.vlm_image_classifier.clip.clip.tokenize", false]], "torchtestcase (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest)": [[83, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase", false]], "torchtestcase (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest)": [[109, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest.TorchTestCase", false]], "torchtestcase (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest)": [[196, "brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase", false]], "torchtestcase (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest)": [[232, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase", false]], "train() (brails.processors.chimney_detector.chimney_detector.chimneydetector method)": [[61, "brails.processors.chimney_detector.chimney_detector.ChimneyDetector.train", false]], "train() (brails.processors.chimney_detector.lib.train_detector.detector method)": [[76, "brails.processors.chimney_detector.lib.train_detector.Detector.train", false]], "train() (brails.processors.garage_detector.garage_detector.garagedetector method)": [[174, "brails.processors.garage_detector.garage_detector.GarageDetector.train", false]], "train() (brails.processors.garage_detector.lib.train_detector.detector method)": [[189, "brails.processors.garage_detector.lib.train_detector.Detector.train", false]], "train() (brails.processors.image_classifier.image_classifier.imageclassifier method)": [[202, "brails.processors.image_classifier.image_classifier.ImageClassifier.train", false]], "train() (brails.processors.image_segmenter.image_segmenter.imagesegmenter method)": [[205, "brails.processors.image_segmenter.image_segmenter.ImageSegmenter.train", false]], "train() (brails.processors.nfloors_detector.lib.train_detector.detector method)": [[225, "brails.processors.nfloors_detector.lib.train_detector.Detector.train", false]], "train() (brails.processors.nfloors_detector.nfloor_detector.nfloordetector method)": [[234, "brails.processors.nfloors_detector.nfloor_detector.NFloorDetector.train", false]], "train_data_dir (brails.processors.image_segmenter.image_segmenter.imagesegmenter attribute)": [[205, "brails.processors.image_segmenter.image_segmenter.ImageSegmenter.train_data_dir", false]], "train_list (brails.processors.foundation_classifier.npid.npid_datasets.cifar.cifar100instance attribute)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance.train_list", false]], "train_list (brails.processors.foundation_classifier.npid.npid_datasets.cifar100instance attribute)": [[150, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance.train_list", false]], "train_weights (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder attribute)": [[279, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.train_weights", false]], "traindataset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset)": [[100, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.TrainDataset", false]], "transform (brails.processors.foundation_classifier.utils.datasets.foundation_type_testset attribute)": [[171, "brails.processors.foundation_classifier.utils.Datasets.Foundation_Type_Testset.transform", false]], "transformer (class in brails.processors.vlm_image_classifier.clip.model)": [[252, "brails.processors.vlm_image_classifier.clip.model.Transformer", false]], "transforms (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder attribute)": [[279, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.transforms", false]], "twowayattentionblock (class in brails.processors.vlm_segmenter.segment_anything.modeling.transformer)": [[268, "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.TwoWayAttentionBlock", false]], "twowaytransformer (class in brails.processors.vlm_segmenter.segment_anything.modeling.transformer)": [[268, "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.TwoWayTransformer", false]], "uncrop_boxes_xyxy() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[271, "brails.processors.vlm_segmenter.segment_anything.utils.amg.uncrop_boxes_xyxy", false]], "uncrop_masks() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[271, "brails.processors.vlm_segmenter.segment_anything.utils.amg.uncrop_masks", false]], "uncrop_points() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[271, "brails.processors.vlm_segmenter.segment_anything.utils.amg.uncrop_points", false]], "unique() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[128, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.unique", false]], "unit_valid() (brails.utils.unit_converter.unitconverter static method)": [[337, "brails.utils.unit_converter.UnitConverter.unit_valid", false]], "unitconverter (class in brails.utils.unit_converter)": [[337, "brails.utils.unit_converter.UnitConverter", false], [364, "brails.utils.unit_converter.UnitConverter", false]], "update() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.averagemeter method)": [[128, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.AverageMeter.update", false]], "update() (brails.processors.foundation_classifier.lib.utils.averagemeter method)": [[139, "brails.processors.foundation_classifier.lib.utils.AverageMeter.update", false]], "update() (brails.processors.foundation_classifier.npid.npid_lib.utils.averagemeter method)": [[161, "brails.processors.foundation_classifier.npid.npid_lib.utils.AverageMeter.update", false]], "update_filename() (brails.types.image_set.image method)": [[320, "brails.types.image_set.Image.update_filename", false]], "update_inventory() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[19, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.update_inventory", false]], "update_properties() (brails.types.image_set.image method)": [[320, "brails.types.image_set.Image.update_properties", false]], "update_world_realization() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.update_world_realization", false]], "upernet (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.UPerNet", false]], "url (brails.processors.foundation_classifier.npid.npid_datasets.cifar.cifar100instance attribute)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance.url", false]], "url (brails.processors.foundation_classifier.npid.npid_datasets.cifar100instance attribute)": [[150, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance.url", false]], "usa_footprintscraper (class in brails.scrapers.usa_footprint_scraper.usa_footprint_scraper)": [[313, "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper.USA_FootprintScraper", false]], "user_inferer() (in module brails.inferers.user_inferer.content_value_inferer)": [[54, "brails.inferers.user_inferer.content_value_inferer.user_inferer", false]], "user_inferer() (in module brails.inferers.user_inferer.floor_area_inferer)": [[55, "brails.inferers.user_inferer.floor_area_inferer.user_inferer", false]], "user_scattered_collate() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel)": [[111, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel.user_scattered_collate", false]], "userfootprint (class in brails.scrapers.user_footprints)": [[314, "brails.scrapers.user_footprints.UserFootprint", false]], "userinferer (class in brails.inferers.user_inferer.user_inferer)": [[56, "brails.inferers.user_inferer.user_inferer.UserInferer", false]], "userscattereddataparallel (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel)": [[111, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel.UserScatteredDataParallel", false]], "usgselevationscraper (class in brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper)": [[317, "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.USGSElevationScraper", false]], "valdataset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset)": [[100, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.ValDataset", false]], "validate() (brails.inferers.hazus_inferer_wind.hazus_inferer_wind.hazusinfererwind method)": [[47, "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind.validate", false]], "validate_coordinates() (brails.utils.input_validator.inputvalidator static method)": [[326, "brails.utils.input_validator.InputValidator.validate_coordinates", false]], "validate_inventory() (brails.utils.inventory_validator.inventoryvalidator static method)": [[327, "brails.utils.inventory_validator.InventoryValidator.validate_inventory", false]], "value() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.averagemeter method)": [[128, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.AverageMeter.value", false]], "variance_scaling_() (in module brails.processors.chimney_detector.lib.utils.utils)": [[84, "brails.processors.chimney_detector.lib.utils.utils.variance_scaling_", false]], "variance_scaling_() (in module brails.processors.garage_detector.lib.utils.utils)": [[197, "brails.processors.garage_detector.lib.utils.utils.variance_scaling_", false]], "variance_scaling_() (in module brails.processors.nfloors_detector.lib.utils.utils)": [[233, "brails.processors.nfloors_detector.lib.utils.utils.variance_scaling_", false]], "verify_and_download_models() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[256, "brails.processors.vlm_segmenter.grounded_sam_utils.verify_and_download_models", false]], "visiontransformer (class in brails.processors.vlm_image_classifier.clip.model)": [[252, "brails.processors.vlm_image_classifier.clip.model.VisionTransformer", false]], "vlmsegmenter (class in brails.processors.vlm_segmenter.vlm_segmenter)": [[274, "brails.processors.vlm_segmenter.vlm_segmenter.VLMSegmenter", false]], "weightedrandomsampler (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler)": [[117, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler.WeightedRandomSampler", false]], "weights_init() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.modelbuilder static method)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ModelBuilder.weights_init", false]], "whitespace_clean() (in module brails.processors.vlm_image_classifier.clip.simple_tokenizer)": [[253, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.whitespace_clean", false]], "width_coefficient (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[73, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.width_coefficient", false]], "width_coefficient (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[186, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.width_coefficient", false]], "width_coefficient (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.width_coefficient", false]], "window_partition() (in module brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[263, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.window_partition", false]], "window_unpartition() (in module brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[263, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.window_unpartition", false]], "wmuh_config() (in module brails.inferers.hazus_inferer_wind.windwmuhrulesets)": [[44, "brails.inferers.hazus_inferer_wind.WindWMUHRulesets.WMUH_config", false]], "work_dir (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[131, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.work_dir", false]], "work_dir (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier attribute)": [[284, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.work_dir", false]], "write_dict() (brails.processors.vlm_segmenter.vlm_segmenter.vlmsegmenter method)": [[274, "brails.processors.vlm_segmenter.vlm_segmenter.VLMSegmenter.write_dict", false]], "write_polygon_to_geojson() (brails.utils.geo_tools.geotools static method)": [[324, "brails.utils.geo_tools.GeoTools.write_polygon_to_geojson", false]], "write_to_geojson() (brails.types.asset_inventory.assetinventory method)": [[319, "brails.types.asset_inventory.AssetInventory.write_to_geojson", false]], "wsf_config() (in module brails.inferers.hazus_inferer_wind.windwsfrulesets)": [[45, "brails.inferers.hazus_inferer_wind.WindWSFRulesets.WSF_config", false]], "xmax (brails.filters.house_view.house_view.filterboundingbox attribute)": [[15, "brails.filters.house_view.house_view.FilterBoundingBox.xmax", false]], "xmax (brails.processors.vlm_segmenter.grounded_sam_utils.boundingbox attribute)": [[256, "brails.processors.vlm_segmenter.grounded_sam_utils.BoundingBox.xmax", false]], "xmin (brails.filters.house_view.house_view.filterboundingbox attribute)": [[15, "brails.filters.house_view.house_view.FilterBoundingBox.xmin", false]], "xmin (brails.processors.vlm_segmenter.grounded_sam_utils.boundingbox attribute)": [[256, "brails.processors.vlm_segmenter.grounded_sam_utils.BoundingBox.xmin", false]], "xyxy (brails.filters.house_view.house_view.filterboundingbox property)": [[15, "brails.filters.house_view.house_view.FilterBoundingBox.xyxy", false]], "xyxy (brails.processors.vlm_segmenter.grounded_sam_utils.boundingbox property)": [[256, "brails.processors.vlm_segmenter.grounded_sam_utils.BoundingBox.xyxy", false]], "yearbuiltclassifier (class in brails.processors.year_built_classifier.year_built_classifier)": [[284, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier", false]], "yearbuiltfolder (class in brails.processors.year_built_classifier.lib.datasets)": [[279, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder", false]], "ymax (brails.filters.house_view.house_view.filterboundingbox attribute)": [[15, "brails.filters.house_view.house_view.FilterBoundingBox.ymax", false]], "ymax (brails.processors.vlm_segmenter.grounded_sam_utils.boundingbox attribute)": [[256, "brails.processors.vlm_segmenter.grounded_sam_utils.BoundingBox.ymax", false]], "ymin (brails.filters.house_view.house_view.filterboundingbox attribute)": [[15, "brails.filters.house_view.house_view.FilterBoundingBox.ymin", false]], "ymin (brails.processors.vlm_segmenter.grounded_sam_utils.boundingbox attribute)": [[256, "brails.processors.vlm_segmenter.grounded_sam_utils.BoundingBox.ymin", false]]}, "objects": {"": [[9, 0, 0, "-", "brails"]], "brails": [[10, 0, 0, "-", "constants"], [11, 0, 0, "-", "exceptions"], [12, 0, 0, "-", "filters"], [16, 0, 0, "-", "imputers"], [20, 0, 0, "-", "inferers"], [57, 0, 0, "-", "processors"], [285, 0, 0, "-", "scrapers"], [318, 0, 0, "-", "types"], [322, 0, 0, "-", "utils"]], "brails.exceptions": [[11, 1, 1, "", "BrailsError"], [11, 1, 1, "", "NotFoundError"]], "brails.filters": [[13, 0, 0, "-", "filter"], [14, 0, 0, "-", "house_view"]], "brails.filters.filter": [[345, 2, 1, "", "Filter"]], "brails.filters.filter.Filter": [[345, 3, 1, "", "__init__"], [345, 3, 1, "", "filter"]], "brails.filters.house_view": [[15, 0, 0, "-", "house_view"]], "brails.filters.house_view.house_view": [[15, 2, 1, "", "FilterBoundingBox"], [15, 2, 1, "", "FilterDetectionResult"], [15, 2, 1, "", "HouseView"], [15, 6, 1, "", "detect"]], "brails.filters.house_view.house_view.FilterBoundingBox": [[15, 4, 1, "", "xmax"], [15, 4, 1, "", "xmin"], [15, 5, 1, "", "xyxy"], [15, 4, 1, "", "ymax"], [15, 4, 1, "", "ymin"]], "brails.filters.house_view.house_view.FilterDetectionResult": [[15, 4, 1, "", "box"], [15, 3, 1, "", "from_dict"], [15, 4, 1, "", "label"], [15, 4, 1, "", "mask"], [15, 4, 1, "", "score"]], "brails.filters.house_view.house_view.HouseView": [[15, 3, 1, "", "filter"], [15, 3, 1, "", "filter1"]], "brails.imputers": [[17, 0, 0, "-", "imputation"], [18, 0, 0, "-", "knn_imputer"]], "brails.imputers.imputation": [[17, 2, 1, "", "Imputation"]], "brails.imputers.imputation.Imputation": [[17, 3, 1, "", "impute"]], "brails.imputers.knn_imputer": [[19, 0, 0, "-", "knn_imputer"]], "brails.imputers.knn_imputer.knn_imputer": [[19, 2, 1, "", "KnnImputer"]], "brails.imputers.knn_imputer.knn_imputer.KnnImputer": [[19, 3, 1, "", "category_in_df_to_indices"], [19, 3, 1, "", "clustering"], [19, 3, 1, "", "geospatial_knn"], [19, 3, 1, "", "impute"], [19, 3, 1, "", "invetory_to_df"], [19, 3, 1, "", "merge_two_json"], [19, 4, 1, "", "n_pw"], [19, 3, 1, "", "sequential_imputer"], [19, 3, 1, "", "update_inventory"]], "brails.inferers": [[21, 0, 0, "-", "hazus_inferer"], [24, 0, 0, "-", "hazus_inferer_earthquake"], [26, 0, 0, "-", "hazus_inferer_flood"], [28, 0, 0, "-", "hazus_inferer_wind"], [48, 0, 0, "-", "inference_engine"], [49, 0, 0, "-", "nlcd_inferer"], [51, 0, 0, "-", "simcenter_inferer"], [53, 0, 0, "-", "user_inferer"]], "brails.inferers.hazus_inferer": [[22, 0, 0, "-", "hazus_inferer"], [23, 0, 0, "-", "hazus_rulesets"]], "brails.inferers.hazus_inferer.hazus_inferer": [[22, 2, 1, "", "HazusInferer"]], "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer": [[22, 3, 1, "", "add_features_to_asset"], [22, 3, 1, "", "check_keys"], [22, 3, 1, "", "flatten_array"], [22, 3, 1, "", "get_replacement_cost"], [22, 3, 1, "", "get_str_from_occ"], [22, 3, 1, "", "infer"], [22, 3, 1, "", "merge_two_json"], [22, 3, 1, "", "modulate_occ"], [22, 3, 1, "", "modulate_weights"]], "brails.inferers.hazus_inferer.hazus_rulesets": [[23, 6, 1, "", "get_hazus_base_replacement_cost"], [23, 6, 1, "", "get_hazus_height_classes"], [23, 6, 1, "", "get_hazus_height_classes_RES1"], [23, 6, 1, "", "get_hazus_income_to_const_class"], [23, 6, 1, "", "get_hazus_occ_type_mapping"], [23, 6, 1, "", "get_hazus_region_to_garage"], [23, 6, 1, "", "get_hazus_state_region_mapping"], [23, 6, 1, "", "get_hazus_year_classes"]], "brails.inferers.hazus_inferer_earthquake": [[25, 0, 0, "-", "hazus_inferer_earthquake"]], "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake": [[25, 2, 1, "", "HazusInfererEarthquake"]], "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.HazusInfererEarthquake": [[25, 3, 1, "", "check_keys"], [25, 3, 1, "", "compute_n_possible_worlds"], [25, 3, 1, "", "get_era_height_foundation_class"], [25, 3, 1, "", "infer"], [25, 3, 1, "", "merge_two_json"]], "brails.inferers.hazus_inferer_flood": [[27, 0, 0, "-", "hazus_inferer_flood"]], "brails.inferers.hazus_inferer_flood.hazus_inferer_flood": [[27, 2, 1, "", "HazusInfererFlood"]], "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood": [[27, 3, 1, "", "auto_populate"], [27, 3, 1, "", "infer"], [27, 3, 1, "", "infer_building_one_by_one"], [27, 3, 1, "", "is_ready_to_infer"], [27, 3, 1, "", "merge_two_json"], [27, 3, 1, "", "to_json"]], "brails.inferers.hazus_inferer_wind": [[29, 0, 0, "-", "BuildingClassRulesets"], [30, 0, 0, "-", "WindCECBRulesets"], [31, 0, 0, "-", "WindCERBRulesets"], [32, 0, 0, "-", "WindEFRulesets"], [33, 0, 0, "-", "WindMECBRulesets"], [34, 0, 0, "-", "WindMERBRulesets"], [35, 0, 0, "-", "WindMHRulesets"], [36, 0, 0, "-", "WindMLRIRulesets"], [37, 0, 0, "-", "WindMLRMRulesets"], [38, 0, 0, "-", "WindMMUHRulesets"], [39, 0, 0, "-", "WindMSFRulesets"], [40, 0, 0, "-", "WindMetaVarRulesets"], [41, 0, 0, "-", "WindSECBRulesets"], [42, 0, 0, "-", "WindSERBRulesets"], [43, 0, 0, "-", "WindSPMBRulesets"], [44, 0, 0, "-", "WindWMUHRulesets"], [45, 0, 0, "-", "WindWSFRulesets"], [46, 0, 0, "-", "auto_HU_NJ"], [47, 0, 0, "-", "hazus_inferer_wind"]], "brails.inferers.hazus_inferer_wind.BuildingClassRulesets": [[29, 6, 1, "", "building_class"]], "brails.inferers.hazus_inferer_wind.WindCECBRulesets": [[30, 6, 1, "", "CECB_config"]], "brails.inferers.hazus_inferer_wind.WindCERBRulesets": [[31, 6, 1, "", "CERB_config"]], "brails.inferers.hazus_inferer_wind.WindEFRulesets": [[32, 6, 1, "", "HUEFFS_config"], [32, 6, 1, "", "HUEFH_config"], [32, 6, 1, "", "HUEFSS_config"], [32, 6, 1, "", "HUEFS_config"]], "brails.inferers.hazus_inferer_wind.WindMECBRulesets": [[33, 6, 1, "", "MECB_config"]], "brails.inferers.hazus_inferer_wind.WindMERBRulesets": [[34, 6, 1, "", "MERB_config"]], "brails.inferers.hazus_inferer_wind.WindMHRulesets": [[35, 6, 1, "", "MH_config"]], "brails.inferers.hazus_inferer_wind.WindMLRIRulesets": [[36, 6, 1, "", "MLRI_config"]], "brails.inferers.hazus_inferer_wind.WindMLRMRulesets": [[37, 6, 1, "", "MLRM_config"]], "brails.inferers.hazus_inferer_wind.WindMMUHRulesets": [[38, 6, 1, "", "MMUH_config"]], "brails.inferers.hazus_inferer_wind.WindMSFRulesets": [[39, 6, 1, "", "MSF_config"]], "brails.inferers.hazus_inferer_wind.WindMetaVarRulesets": [[40, 6, 1, "", "add_default"], [40, 6, 1, "", "global_rulesets"], [40, 6, 1, "", "is_ready_to_infer"]], "brails.inferers.hazus_inferer_wind.WindSECBRulesets": [[41, 6, 1, "", "SECB_config"]], "brails.inferers.hazus_inferer_wind.WindSERBRulesets": [[42, 6, 1, "", "SERB_config"]], "brails.inferers.hazus_inferer_wind.WindSPMBRulesets": [[43, 6, 1, "", "SPMB_config"]], "brails.inferers.hazus_inferer_wind.WindWMUHRulesets": [[44, 6, 1, "", "WMUH_config"]], "brails.inferers.hazus_inferer_wind.WindWSFRulesets": [[45, 6, 1, "", "WSF_config"]], "brails.inferers.hazus_inferer_wind.auto_HU_NJ": [[46, 6, 1, "", "auto_populate"]], "brails.inferers.hazus_inferer_wind.hazus_inferer_wind": [[47, 2, 1, "", "HazusInfererWind"]], "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind": [[47, 3, 1, "", "correct"], [47, 3, 1, "", "infer"], [47, 3, 1, "", "infer_building_one_by_one"], [47, 3, 1, "", "merge_two_json"], [47, 3, 1, "", "to_json"], [47, 3, 1, "", "validate"]], "brails.inferers.inference_engine": [[48, 2, 1, "", "InferenceEngine"]], "brails.inferers.inference_engine.InferenceEngine": [[48, 3, 1, "", "infer"]], "brails.inferers.nlcd_inferer": [[50, 0, 0, "-", "nlcd_to_coarse_land_cover"]], "brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover": [[50, 2, 1, "", "NLCDToCoarseLandCover"]], "brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover.NLCDToCoarseLandCover": [[50, 3, 1, "", "infer"]], "brails.inferers.simcenter_inferer": [[52, 0, 0, "-", "simCenter_inferer"]], "brails.inferers.simcenter_inferer.simCenter_inferer": [[52, 2, 1, "", "SimCenterInferer"]], "brails.inferers.simcenter_inferer.simCenter_inferer.SimCenterInferer": [[52, 3, 1, "", "modulate_occ"], [52, 3, 1, "", "modulate_weights"]], "brails.inferers.user_inferer": [[54, 0, 0, "-", "content_value_inferer"], [55, 0, 0, "-", "floor_area_inferer"], [56, 0, 0, "-", "user_inferer"]], "brails.inferers.user_inferer.content_value_inferer": [[54, 6, 1, "", "user_inferer"]], "brails.inferers.user_inferer.floor_area_inferer": [[55, 6, 1, "", "user_inferer"]], "brails.inferers.user_inferer.user_inferer": [[56, 2, 1, "", "UserInferer"]], "brails.inferers.user_inferer.user_inferer.UserInferer": [[56, 3, 1, "", "infer"], [56, 3, 1, "", "merge_two_json"], [56, 4, 1, "", "n_pw"], [56, 4, 1, "", "seed"], [56, 3, 1, "", "to_json"]], "brails.processors": [[58, 0, 0, "-", "building_material_llm"], [60, 0, 0, "-", "chimney_detector"], [85, 0, 0, "-", "cons_type_classifier"], [87, 0, 0, "-", "facade_parser"], [89, 0, 0, "-", "ffh_predictor_klepac"], [91, 0, 0, "-", "foundation_classifier"], [173, 0, 0, "-", "garage_detector"], [198, 0, 0, "-", "gpt_base_model"], [201, 0, 0, "-", "image_classifier"], [203, 0, 0, "-", "image_processor"], [204, 0, 0, "-", "image_segmenter"], [206, 0, 0, "-", "nFloor_gpt"], [208, 0, 0, "-", "nFloor_vlm"], [210, 0, 0, "-", "nfloors_detector"], [235, 0, 0, "-", "occupancy_classifier"], [237, 0, 0, "-", "other_idea"], [240, 0, 0, "-", "roof_shape_classifier"], [242, 0, 0, "-", "roof_shape_gpt"], [244, 0, 0, "-", "roof_shape_vlm"], [246, 0, 0, "-", "street_level_damage_detection"], [248, 0, 0, "-", "vlm_image_classifier"], [255, 0, 0, "-", "vlm_segmenter"], [275, 0, 0, "-", "year_built_classifier"]], "brails.processors.building_material_llm": [[59, 0, 0, "-", "building_material_llm"]], "brails.processors.building_material_llm.building_material_llm": [[59, 2, 1, "", "BuildingMaterialLLM"]], "brails.processors.building_material_llm.building_material_llm.BuildingMaterialLLM": [[59, 3, 1, "", "predict"]], "brails.processors.chimney_detector": [[61, 0, 0, "-", "chimney_detector"], [62, 0, 0, "-", "lib"]], "brails.processors.chimney_detector.chimney_detector": [[61, 2, 1, "", "ChimneyDetector"]], "brails.processors.chimney_detector.chimney_detector.ChimneyDetector": [[61, 3, 1, "", "predict"], [61, 3, 1, "", "retrain"], [61, 4, 1, "", "system_dict"], [61, 3, 1, "", "train"]], "brails.processors.chimney_detector.lib": [[63, 0, 0, "-", "backbone"], [64, 0, 0, "-", "efficientdet"], [71, 0, 0, "-", "efficientnet"], [75, 0, 0, "-", "infer_detector"], [76, 0, 0, "-", "train_detector"], [77, 0, 0, "-", "utils"]], "brails.processors.chimney_detector.lib.backbone": [[63, 2, 1, "", "EfficientDetBackbone"]], "brails.processors.chimney_detector.lib.backbone.EfficientDetBackbone": [[63, 3, 1, "", "forward"], [63, 3, 1, "", "freeze_bn"], [63, 3, 1, "", "init_backbone"]], "brails.processors.chimney_detector.lib.efficientdet": [[65, 0, 0, "-", "coco"], [66, 0, 0, "-", "config"], [67, 0, 0, "-", "dataset"], [68, 0, 0, "-", "loss"], [69, 0, 0, "-", "model"], [70, 0, 0, "-", "utils"]], "brails.processors.chimney_detector.lib.efficientdet.coco": [[65, 2, 1, "", "COCO"]], "brails.processors.chimney_detector.lib.efficientdet.coco.COCO": [[65, 3, 1, "", "createIndex"], [65, 3, 1, "", "getAnnIds"], [65, 3, 1, "", "getCatIds"], [65, 3, 1, "", "getImgIds"], [65, 3, 1, "", "info"], [65, 3, 1, "", "loadAnns"], [65, 3, 1, "", "loadCats"], [65, 3, 1, "", "loadImgs"]], "brails.processors.chimney_detector.lib.efficientdet.dataset": [[67, 2, 1, "", "Augmenter"], [67, 2, 1, "", "CocoDataset"], [67, 2, 1, "", "Normalizer"], [67, 2, 1, "", "Resizer"], [67, 6, 1, "", "collater"]], "brails.processors.chimney_detector.lib.efficientdet.dataset.CocoDataset": [[67, 3, 1, "", "load_annotations"], [67, 3, 1, "", "load_classes"], [67, 3, 1, "", "load_image"]], "brails.processors.chimney_detector.lib.efficientdet.loss": [[68, 2, 1, "", "FocalLoss"], [68, 6, 1, "", "calc_iou"]], "brails.processors.chimney_detector.lib.efficientdet.loss.FocalLoss": [[68, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientdet.model": [[69, 2, 1, "", "BiFPN"], [69, 2, 1, "", "Classifier"], [69, 2, 1, "", "EfficientNet"], [69, 2, 1, "", "Regressor"], [69, 2, 1, "", "SeparableConvBlock"], [69, 6, 1, "", "nms"]], "brails.processors.chimney_detector.lib.efficientdet.model.BiFPN": [[69, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientdet.model.Classifier": [[69, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientdet.model.EfficientNet": [[69, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientdet.model.Regressor": [[69, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientdet.model.SeparableConvBlock": [[69, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientdet.utils": [[70, 2, 1, "", "Anchors"], [70, 2, 1, "", "BBoxTransform"], [70, 2, 1, "", "ClipBoxes"]], "brails.processors.chimney_detector.lib.efficientdet.utils.Anchors": [[70, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientdet.utils.BBoxTransform": [[70, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientdet.utils.ClipBoxes": [[70, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientnet": [[72, 0, 0, "-", "model"], [73, 0, 0, "-", "utils"], [74, 0, 0, "-", "utils_extra"]], "brails.processors.chimney_detector.lib.efficientnet.model": [[72, 2, 1, "", "EfficientNet"], [72, 2, 1, "", "MBConvBlock"]], "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet": [[72, 3, 1, "", "extract_features"], [72, 3, 1, "", "forward"], [72, 3, 1, "", "from_name"], [72, 3, 1, "", "from_pretrained"], [72, 3, 1, "", "get_image_size"], [72, 3, 1, "", "set_swish"]], "brails.processors.chimney_detector.lib.efficientnet.model.MBConvBlock": [[72, 3, 1, "", "forward"], [72, 4, 1, "", "has_se"], [72, 3, 1, "", "set_swish"]], "brails.processors.chimney_detector.lib.efficientnet.utils": [[73, 2, 1, "", "BlockArgs"], [73, 2, 1, "", "BlockDecoder"], [73, 2, 1, "", "Conv2dDynamicSamePadding"], [73, 2, 1, "", "GlobalParams"], [73, 2, 1, "", "Identity"], [73, 2, 1, "", "MemoryEfficientSwish"], [73, 2, 1, "", "Swish"], [73, 2, 1, "", "SwishImplementation"], [73, 6, 1, "", "drop_connect"], [73, 6, 1, "", "efficientnet"], [73, 6, 1, "", "efficientnet_params"], [73, 6, 1, "", "get_model_params"], [73, 6, 1, "", "get_same_padding_conv2d"], [73, 6, 1, "", "load_pretrained_weights"], [73, 6, 1, "", "round_filters"], [73, 6, 1, "", "round_repeats"]], "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs": [[73, 4, 1, "", "expand_ratio"], [73, 4, 1, "", "id_skip"], [73, 4, 1, "", "input_filters"], [73, 4, 1, "", "kernel_size"], [73, 4, 1, "", "num_repeat"], [73, 4, 1, "", "output_filters"], [73, 4, 1, "", "se_ratio"], [73, 4, 1, "", "stride"]], "brails.processors.chimney_detector.lib.efficientnet.utils.BlockDecoder": [[73, 3, 1, "", "decode"], [73, 3, 1, "", "encode"]], "brails.processors.chimney_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding": [[73, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams": [[73, 4, 1, "", "batch_norm_epsilon"], [73, 4, 1, "", "batch_norm_momentum"], [73, 4, 1, "", "depth_coefficient"], [73, 4, 1, "", "depth_divisor"], [73, 4, 1, "", "drop_connect_rate"], [73, 4, 1, "", "dropout_rate"], [73, 4, 1, "", "image_size"], [73, 4, 1, "", "min_depth"], [73, 4, 1, "", "num_classes"], [73, 4, 1, "", "width_coefficient"]], "brails.processors.chimney_detector.lib.efficientnet.utils.Identity": [[73, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientnet.utils.MemoryEfficientSwish": [[73, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientnet.utils.Swish": [[73, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientnet.utils.SwishImplementation": [[73, 3, 1, "", "backward"], [73, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientnet.utils_extra": [[74, 2, 1, "", "Conv2dStaticSamePadding"], [74, 2, 1, "", "MaxPool2dStaticSamePadding"]], "brails.processors.chimney_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding": [[74, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding": [[74, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.infer_detector": [[75, 2, 1, "", "Infer"]], "brails.processors.chimney_detector.lib.infer_detector.Infer": [[75, 3, 1, "", "display"], [75, 3, 1, "", "load_model"], [75, 3, 1, "", "predict"]], "brails.processors.chimney_detector.lib.train_detector": [[76, 2, 1, "", "Detector"], [76, 2, 1, "", "ModelWithLoss"], [76, 6, 1, "", "boolean_string"]], "brails.processors.chimney_detector.lib.train_detector.Detector": [[76, 3, 1, "", "save_checkpoint"], [76, 3, 1, "", "set_fixed_params"], [76, 3, 1, "", "set_hyperparams"], [76, 3, 1, "", "set_model"], [76, 3, 1, "", "set_train_dataset"], [76, 3, 1, "", "set_val_dataset"], [76, 3, 1, "", "start_training"], [76, 3, 1, "", "train"]], "brails.processors.chimney_detector.lib.train_detector.ModelWithLoss": [[76, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.utils": [[78, 0, 0, "-", "sync_batchnorm"], [84, 0, 0, "-", "utils"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm": [[79, 0, 0, "-", "batchnorm"], [80, 0, 0, "-", "batchnorm_reimpl"], [81, 0, 0, "-", "comm"], [82, 0, 0, "-", "replicate"], [83, 0, 0, "-", "unittest"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm": [[79, 2, 1, "", "SynchronizedBatchNorm1d"], [79, 2, 1, "", "SynchronizedBatchNorm2d"], [79, 2, 1, "", "SynchronizedBatchNorm3d"], [79, 6, 1, "", "convert_model"], [79, 6, 1, "", "patch_sync_batchnorm"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl": [[80, 2, 1, "", "BatchNorm2dReimpl"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl": [[80, 3, 1, "", "forward"], [80, 3, 1, "", "reset_parameters"], [80, 3, 1, "", "reset_running_stats"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm": [[81, 2, 1, "", "FutureResult"], [81, 2, 1, "", "SlavePipe"], [81, 2, 1, "", "SyncMaster"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.FutureResult": [[81, 3, 1, "", "get"], [81, 3, 1, "", "put"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SlavePipe": [[81, 3, 1, "", "run_slave"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SyncMaster": [[81, 5, 1, "", "nr_slaves"], [81, 3, 1, "", "register_slave"], [81, 3, 1, "", "run_master"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate": [[82, 2, 1, "", "CallbackContext"], [82, 2, 1, "", "DataParallelWithCallback"], [82, 6, 1, "", "execute_replication_callbacks"], [82, 6, 1, "", "patch_replication_callback"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback": [[82, 3, 1, "", "replicate"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest": [[83, 2, 1, "", "TorchTestCase"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase": [[83, 3, 1, "", "assertTensorClose"]], "brails.processors.chimney_detector.lib.utils.utils": [[84, 2, 1, "", "CustomDataParallel"], [84, 6, 1, "", "aspectaware_resize_padding"], [84, 6, 1, "", "display"], [84, 6, 1, "", "from_colorname_to_bgr"], [84, 6, 1, "", "get_index_label"], [84, 6, 1, "", "get_last_weights"], [84, 6, 1, "", "init_weights"], [84, 6, 1, "", "invert_affine"], [84, 6, 1, "", "plot_one_box"], [84, 6, 1, "", "postprocess"], [84, 6, 1, "", "preprocess"], [84, 6, 1, "", "preprocess_video"], [84, 6, 1, "", "replace_w_sync_bn"], [84, 6, 1, "", "standard_to_bgr"], [84, 6, 1, "", "variance_scaling_"]], "brails.processors.chimney_detector.lib.utils.utils.CustomDataParallel": [[84, 3, 1, "", "scatter"]], "brails.processors.cons_type_classifier": [[86, 0, 0, "-", "ConstructionTypeClassifier"]], "brails.processors.cons_type_classifier.ConstructionTypeClassifier": [[86, 2, 1, "", "ConsTypeClassifier"]], "brails.processors.cons_type_classifier.ConstructionTypeClassifier.ConsTypeClassifier": [[86, 3, 1, "", "predict"], [86, 3, 1, "", "retrain"]], "brails.processors.facade_parser": [[88, 0, 0, "-", "facade_parser"]], "brails.processors.facade_parser.facade_parser": [[88, 2, 1, "", "FacadeParser"]], "brails.processors.facade_parser.facade_parser.FacadeParser": [[88, 4, 1, "", "cam_elevs"], [88, 4, 1, "", "depthmaps"], [88, 4, 1, "", "footprints"], [88, 4, 1, "", "model_path"], [88, 3, 1, "", "predict"], [88, 4, 1, "", "predictions"], [88, 4, 1, "", "street_images"]], "brails.processors.ffh_predictor_klepac": [[90, 0, 0, "-", "ffh_predictor_klepac"]], "brails.processors.ffh_predictor_klepac.ffh_predictor_klepac": [[90, 2, 1, "", "FFHPredictorKlepac"]], "brails.processors.ffh_predictor_klepac.ffh_predictor_klepac.FFHPredictorKlepac": [[90, 3, 1, "", "predict"]], "brails.processors.foundation_classifier": [[92, 0, 0, "-", "attention_utils"], [95, 0, 0, "-", "csail_segmentation_tool"], [131, 0, 0, "-", "foundation_classifier"], [132, 0, 0, "-", "lib"], [140, 0, 0, "-", "models"], [146, 0, 0, "-", "npid"], [170, 0, 0, "-", "utils"]], "brails.processors.foundation_classifier.attention_utils": [[93, 0, 0, "-", "radam"], [94, 0, 0, "-", "utils"]], "brails.processors.foundation_classifier.attention_utils.radam": [[93, 2, 1, "", "AdamW"], [93, 2, 1, "", "PlainRAdam"], [93, 2, 1, "", "RAdam"]], "brails.processors.foundation_classifier.attention_utils.radam.AdamW": [[93, 3, 1, "", "step"]], "brails.processors.foundation_classifier.attention_utils.radam.PlainRAdam": [[93, 3, 1, "", "step"]], "brails.processors.foundation_classifier.attention_utils.radam.RAdam": [[93, 3, 1, "", "step"]], "brails.processors.foundation_classifier.attention_utils.utils": [[94, 6, 1, "", "construct_confusion_matrix_image"], [94, 6, 1, "", "evaluate"], [94, 6, 1, "", "sliding_window"]], "brails.processors.foundation_classifier.csail_segmentation_tool": [[96, 0, 0, "-", "csail_seg"], [129, 0, 0, "-", "csail_segmentation"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg": [[97, 0, 0, "-", "config"], [99, 0, 0, "-", "data"], [100, 0, 0, "-", "dataset"], [103, 0, 0, "-", "lib"], [119, 0, 0, "-", "models"], [128, 0, 0, "-", "utils"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config": [[98, 0, 0, "-", "defaults"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset": [[100, 2, 1, "", "BaseDataset"], [100, 2, 1, "", "TestDataset"], [100, 2, 1, "", "TrainDataset"], [100, 2, 1, "", "ValDataset"], [100, 6, 1, "", "imresize"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.BaseDataset": [[100, 3, 1, "", "img_transform"], [100, 3, 1, "", "parse_input_list"], [100, 3, 1, "", "round2nearest_multiple"], [100, 3, 1, "", "segm_transform"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib": [[104, 0, 0, "-", "nn"], [112, 0, 0, "-", "utils"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn": [[105, 0, 0, "-", "modules"], [110, 0, 0, "-", "parallel"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules": [[106, 0, 0, "-", "batchnorm"], [107, 0, 0, "-", "comm"], [108, 0, 0, "-", "replicate"], [109, 0, 0, "-", "unittest"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm": [[106, 2, 1, "", "SynchronizedBatchNorm1d"], [106, 2, 1, "", "SynchronizedBatchNorm2d"], [106, 2, 1, "", "SynchronizedBatchNorm3d"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm": [[107, 2, 1, "", "FutureResult"], [107, 2, 1, "", "SlavePipe"], [107, 2, 1, "", "SyncMaster"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.FutureResult": [[107, 3, 1, "", "get"], [107, 3, 1, "", "put"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SlavePipe": [[107, 3, 1, "", "run_slave"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SyncMaster": [[107, 5, 1, "", "nr_slaves"], [107, 3, 1, "", "register_slave"], [107, 3, 1, "", "run_master"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate": [[108, 2, 1, "", "CallbackContext"], [108, 2, 1, "", "DataParallelWithCallback"], [108, 6, 1, "", "execute_replication_callbacks"], [108, 6, 1, "", "patch_replication_callback"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.DataParallelWithCallback": [[108, 3, 1, "", "replicate"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest": [[109, 2, 1, "", "TorchTestCase"], [109, 6, 1, "", "as_numpy"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest.TorchTestCase": [[109, 3, 1, "", "assertTensorClose"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel": [[111, 0, 0, "-", "data_parallel"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel": [[111, 2, 1, "", "UserScatteredDataParallel"], [111, 6, 1, "", "async_copy_to"], [111, 6, 1, "", "user_scattered_collate"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel.UserScatteredDataParallel": [[111, 3, 1, "", "scatter"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils": [[118, 0, 0, "-", "th"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data": [[115, 0, 0, "-", "dataset"], [117, 0, 0, "-", "sampler"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset": [[115, 2, 1, "", "ConcatDataset"], [115, 2, 1, "", "Dataset"], [115, 2, 1, "", "Subset"], [115, 2, 1, "", "TensorDataset"], [115, 6, 1, "", "random_split"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.ConcatDataset": [[115, 5, 1, "", "cummulative_sizes"], [115, 3, 1, "", "cumsum"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler": [[117, 2, 1, "", "BatchSampler"], [117, 2, 1, "", "RandomSampler"], [117, 2, 1, "", "Sampler"], [117, 2, 1, "", "SequentialSampler"], [117, 2, 1, "", "SubsetRandomSampler"], [117, 2, 1, "", "WeightedRandomSampler"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th": [[118, 6, 1, "", "as_numpy"], [118, 6, 1, "", "as_variable"], [118, 6, 1, "", "mark_volatile"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models": [[120, 0, 0, "-", "hrnet"], [121, 0, 0, "-", "mobilenet"], [122, 0, 0, "-", "models"], [123, 0, 0, "-", "resnet"], [124, 0, 0, "-", "resnext"], [125, 0, 0, "-", "utils"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet": [[120, 6, 1, "", "hrnetv2"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet": [[121, 6, 1, "", "mobilenetv2"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models": [[122, 2, 1, "", "C1"], [122, 2, 1, "", "C1DeepSup"], [122, 2, 1, "", "MobileNetV2Dilated"], [122, 2, 1, "", "ModelBuilder"], [122, 2, 1, "", "PPM"], [122, 2, 1, "", "PPMDeepsup"], [122, 2, 1, "", "Resnet"], [122, 2, 1, "", "ResnetDilated"], [122, 2, 1, "", "SegmentationModule"], [122, 2, 1, "", "SegmentationModuleBase"], [122, 2, 1, "", "UPerNet"], [122, 6, 1, "", "conv3x3_bn_relu"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.C1": [[122, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.C1DeepSup": [[122, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.MobileNetV2Dilated": [[122, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ModelBuilder": [[122, 3, 1, "", "build_decoder"], [122, 3, 1, "", "build_encoder"], [122, 3, 1, "", "weights_init"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.PPM": [[122, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.PPMDeepsup": [[122, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.Resnet": [[122, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ResnetDilated": [[122, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.SegmentationModule": [[122, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.SegmentationModuleBase": [[122, 3, 1, "", "pixel_acc"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.UPerNet": [[122, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet": [[123, 2, 1, "", "ResNet"], [123, 6, 1, "", "resnet101"], [123, 6, 1, "", "resnet18"], [123, 6, 1, "", "resnet50"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.ResNet": [[123, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext": [[124, 2, 1, "", "ResNeXt"], [124, 6, 1, "", "resnext101"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext.ResNeXt": [[124, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils": [[125, 6, 1, "", "load_url"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils": [[128, 2, 1, "", "AverageMeter"], [128, 1, 1, "", "NotSupportedCliException"], [128, 6, 1, "", "accuracy"], [128, 6, 1, "", "colorEncode"], [128, 6, 1, "", "find_recursive"], [128, 6, 1, "", "intersectionAndUnion"], [128, 6, 1, "", "parse_devices"], [128, 6, 1, "", "process_range"], [128, 6, 1, "", "setup_logger"], [128, 6, 1, "", "unique"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.AverageMeter": [[128, 3, 1, "", "add"], [128, 3, 1, "", "average"], [128, 3, 1, "", "initialize"], [128, 3, 1, "", "update"], [128, 3, 1, "", "value"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation": [[129, 2, 1, "", "MaskBuilding"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding": [[129, 4, 1, "", "colors"], [129, 4, 1, "", "config_file"], [129, 4, 1, "", "dec_weights"], [129, 4, 1, "", "enc_weights"], [129, 3, 1, "", "get_mask"], [129, 3, 1, "", "round2nearest_multiple"]], "brails.processors.foundation_classifier.foundation_classifier": [[131, 2, 1, "", "FoundationElevationClassifier"]], "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier": [[131, 4, 1, "", "checkpoint"], [131, 4, 1, "", "checkpoints_dir"], [131, 4, 1, "", "classes"], [131, 4, 1, "", "device"], [131, 4, 1, "", "load_masks"], [131, 4, 1, "", "mask_buildings"], [131, 4, 1, "", "model_dir"], [131, 4, 1, "", "model_file"], [131, 3, 1, "", "predict"], [131, 4, 1, "", "print_res"], [131, 4, 1, "", "test_transforms"], [131, 4, 1, "", "work_dir"]], "brails.processors.foundation_classifier.lib": [[133, 0, 0, "-", "LinearAverage"], [134, 0, 0, "-", "NCEAverage"], [135, 0, 0, "-", "NCECriterion"], [136, 0, 0, "-", "alias_multinomial"], [137, 0, 0, "-", "custom_transforms"], [138, 0, 0, "-", "normalize"], [139, 0, 0, "-", "utils"]], "brails.processors.foundation_classifier.lib.LinearAverage": [[133, 2, 1, "", "LinearAverage"], [133, 2, 1, "", "LinearAverageOp"]], "brails.processors.foundation_classifier.lib.LinearAverage.LinearAverage": [[133, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.lib.LinearAverage.LinearAverageOp": [[133, 3, 1, "", "backward"], [133, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.lib.NCEAverage": [[134, 2, 1, "", "NCEAverage"], [134, 2, 1, "", "NCEFunction"]], "brails.processors.foundation_classifier.lib.NCEAverage.NCEAverage": [[134, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.lib.NCEAverage.NCEFunction": [[134, 3, 1, "", "backward"], [134, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.lib.NCECriterion": [[135, 2, 1, "", "NCECriterion"]], "brails.processors.foundation_classifier.lib.NCECriterion.NCECriterion": [[135, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.lib.alias_multinomial": [[136, 2, 1, "", "AliasMethod"]], "brails.processors.foundation_classifier.lib.alias_multinomial.AliasMethod": [[136, 3, 1, "", "cuda"], [136, 3, 1, "", "draw"]], "brails.processors.foundation_classifier.lib.custom_transforms": [[137, 2, 1, "", "AddGaussianNoise"], [137, 2, 1, "", "AddGaussianPoissonNoise"], [137, 2, 1, "", "AddSpeckleNoise"], [137, 2, 1, "", "BilinearResize"], [137, 2, 1, "", "CenterCropNumpy"], [137, 2, 1, "", "ElasticTransform"], [137, 2, 1, "", "EnhancedCompose"], [137, 2, 1, "", "MaxScaleNumpy"], [137, 2, 1, "", "MedianScaleNumpy"], [137, 2, 1, "", "Merge"], [137, 2, 1, "", "MutualExclude"], [137, 2, 1, "", "NormalizeNumpy"], [137, 2, 1, "", "PoissonSubsampling"], [137, 2, 1, "", "RandomCropNumpy"], [137, 2, 1, "", "RandomGaussianBlurring"], [137, 2, 1, "", "RandomRotate"], [137, 2, 1, "", "Split"], [137, 6, 1, "", "center_crop"], [137, 6, 1, "", "elastic_transform"], [137, 6, 1, "", "poisson_downsampling"], [137, 6, 1, "", "random_num_generator"], [137, 6, 1, "", "to_tensor"]], "brails.processors.foundation_classifier.lib.normalize": [[138, 2, 1, "", "Normalize"]], "brails.processors.foundation_classifier.lib.normalize.Normalize": [[138, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.lib.utils": [[139, 2, 1, "", "AverageMeter"]], "brails.processors.foundation_classifier.lib.utils.AverageMeter": [[139, 3, 1, "", "reset"], [139, 3, 1, "", "update"]], "brails.processors.foundation_classifier.models": [[141, 0, 0, "-", "attention_module"], [142, 0, 0, "-", "basic_layer"], [143, 0, 0, "-", "residual_attention_network"], [144, 0, 0, "-", "resnet_applied"], [145, 0, 0, "-", "sknet"]], "brails.processors.foundation_classifier.models.attention_module": [[141, 2, 1, "", "AttentionModule_pre"], [141, 2, 1, "", "AttentionModule_stage0"], [141, 2, 1, "", "AttentionModule_stage1"], [141, 2, 1, "", "AttentionModule_stage1_cifar"], [141, 2, 1, "", "AttentionModule_stage2"], [141, 2, 1, "", "AttentionModule_stage2_cifar"], [141, 2, 1, "", "AttentionModule_stage3"], [141, 2, 1, "", "AttentionModule_stage3_cifar"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_pre": [[141, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage0": [[141, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage1": [[141, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage1_cifar": [[141, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage2": [[141, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage2_cifar": [[141, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage3": [[141, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage3_cifar": [[141, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.basic_layer": [[142, 2, 1, "", "ResidualBlock"], [142, 2, 1, "", "ResidualBlock1D"]], "brails.processors.foundation_classifier.models.basic_layer.ResidualBlock": [[142, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.basic_layer.ResidualBlock1D": [[142, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.residual_attention_network": [[143, 2, 1, "", "DenseBlock"], [143, 2, 1, "", "MLP"], [143, 2, 1, "", "ResidualAttentionModel_92"], [143, 2, 1, "", "ResidualAttentionModel_92_32input"], [143, 2, 1, "", "ResidualAttentionModel_92_32input_update"], [143, 2, 1, "", "ResidualAttentionModel_92_Small"], [143, 2, 1, "", "ResidualAttentionModel_92_Small_1D"]], "brails.processors.foundation_classifier.models.residual_attention_network.DenseBlock": [[143, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.residual_attention_network.MLP": [[143, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92": [[143, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_32input": [[143, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_32input_update": [[143, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_Small": [[143, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_Small_1D": [[143, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.resnet_applied": [[144, 2, 1, "", "ResNet"], [144, 6, 1, "", "resnet101"], [144, 6, 1, "", "resnet152"], [144, 6, 1, "", "resnet18"], [144, 6, 1, "", "resnet34"], [144, 6, 1, "", "resnet50"]], "brails.processors.foundation_classifier.models.resnet_applied.ResNet": [[144, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.sknet": [[145, 2, 1, "", "SKConv"], [145, 2, 1, "", "SKNet"], [145, 6, 1, "", "SKNet101"], [145, 6, 1, "", "SKNet26"], [145, 6, 1, "", "SKNet50"], [145, 2, 1, "", "SKUnit"]], "brails.processors.foundation_classifier.models.sknet.SKConv": [[145, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.sknet.SKNet": [[145, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.sknet.SKUnit": [[145, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.npid": [[150, 0, 0, "-", "npid_datasets"], [154, 0, 0, "-", "npid_lib"], [165, 0, 0, "-", "npid_toolbox"]], "brails.processors.foundation_classifier.npid.npid_datasets": [[150, 2, 1, "", "CIFAR100Instance"], [150, 2, 1, "", "CIFAR10Instance"], [150, 2, 1, "", "CombinedMaskDataset"], [150, 2, 1, "", "ImageFolderInstance"], [150, 2, 1, "", "MNISTInstance"], [150, 2, 1, "", "MaskFolderInstance"], [151, 0, 0, "-", "cifar"], [152, 0, 0, "-", "folder"], [153, 0, 0, "-", "mnist"]], "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance": [[150, 4, 1, "", "base_folder"], [150, 4, 1, "", "filename"], [150, 4, 1, "", "test_list"], [150, 4, 1, "", "tgz_md5"], [150, 4, 1, "", "train_list"], [150, 4, 1, "", "url"]], "brails.processors.foundation_classifier.npid.npid_datasets.CombinedMaskDataset": [[150, 3, 1, "", "loader"]], "brails.processors.foundation_classifier.npid.npid_datasets.cifar": [[151, 2, 1, "", "CIFAR100Instance"], [151, 2, 1, "", "CIFAR10Instance"]], "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance": [[151, 4, 1, "", "base_folder"], [151, 4, 1, "", "data"], [151, 4, 1, "", "filename"], [151, 4, 1, "", "test_list"], [151, 4, 1, "", "tgz_md5"], [151, 4, 1, "", "train_list"], [151, 4, 1, "", "url"]], "brails.processors.foundation_classifier.npid.npid_datasets.folder": [[152, 2, 1, "", "CombinedMaskDataset"], [152, 2, 1, "", "ImageFolderInstance"], [152, 2, 1, "", "MaskFolderInstance"]], "brails.processors.foundation_classifier.npid.npid_datasets.folder.CombinedMaskDataset": [[152, 3, 1, "", "loader"]], "brails.processors.foundation_classifier.npid.npid_datasets.mnist": [[153, 2, 1, "", "MNISTInstance"]], "brails.processors.foundation_classifier.npid.npid_lib": [[155, 0, 0, "-", "LinearAverage"], [156, 0, 0, "-", "NCEAverage"], [157, 0, 0, "-", "NCECriterion"], [158, 0, 0, "-", "alias_multinomial"], [159, 0, 0, "-", "custom_transforms"], [160, 0, 0, "-", "normalize"], [161, 0, 0, "-", "utils"]], "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage": [[155, 2, 1, "", "LinearAverage"], [155, 2, 1, "", "LinearAverageOp"]], "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.LinearAverage": [[155, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.LinearAverageOp": [[155, 3, 1, "", "backward"], [155, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage": [[156, 2, 1, "", "NCEAverage"], [156, 2, 1, "", "NCEFunction"]], "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.NCEAverage": [[156, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.NCEFunction": [[156, 3, 1, "", "backward"], [156, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.npid.npid_lib.NCECriterion": [[157, 2, 1, "", "NCECriterion"]], "brails.processors.foundation_classifier.npid.npid_lib.NCECriterion.NCECriterion": [[157, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial": [[158, 2, 1, "", "AliasMethod"]], "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial.AliasMethod": [[158, 3, 1, "", "cuda"], [158, 3, 1, "", "draw"]], "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms": [[159, 2, 1, "", "AddGaussianNoise"], [159, 2, 1, "", "AddGaussianPoissonNoise"], [159, 2, 1, "", "AddSpeckleNoise"], [159, 2, 1, "", "BilinearResize"], [159, 2, 1, "", "CenterCropNumpy"], [159, 2, 1, "", "ElasticTransform"], [159, 2, 1, "", "EnhancedCompose"], [159, 2, 1, "", "MaxScaleNumpy"], [159, 2, 1, "", "MedianScaleNumpy"], [159, 2, 1, "", "Merge"], [159, 2, 1, "", "MutualExclude"], [159, 2, 1, "", "NormalizeNumpy"], [159, 2, 1, "", "PoissonSubsampling"], [159, 2, 1, "", "RandomCropNumpy"], [159, 2, 1, "", "RandomGaussianBlurring"], [159, 2, 1, "", "RandomRotate"], [159, 2, 1, "", "Split"], [159, 6, 1, "", "center_crop"], [159, 6, 1, "", "elastic_transform"], [159, 6, 1, "", "poisson_downsampling"], [159, 6, 1, "", "random_num_generator"], [159, 6, 1, "", "to_tensor"]], "brails.processors.foundation_classifier.npid.npid_lib.normalize": [[160, 2, 1, "", "Normalize"]], "brails.processors.foundation_classifier.npid.npid_lib.normalize.Normalize": [[160, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.npid.npid_lib.utils": [[161, 2, 1, "", "AverageMeter"]], "brails.processors.foundation_classifier.npid.npid_lib.utils.AverageMeter": [[161, 3, 1, "", "reset"], [161, 3, 1, "", "update"]], "brails.processors.foundation_classifier.utils": [[171, 0, 0, "-", "Datasets"]], "brails.processors.foundation_classifier.utils.Datasets": [[171, 2, 1, "", "Foundation_Type_Binary"], [171, 2, 1, "", "Foundation_Type_Testset"]], "brails.processors.foundation_classifier.utils.Datasets.Foundation_Type_Testset": [[171, 4, 1, "", "filenames"], [171, 4, 1, "", "img_paths"], [171, 4, 1, "", "load_masks"], [171, 4, 1, "", "mask_buildings"], [171, 4, 1, "", "mask_paths"], [171, 4, 1, "", "transform"]], "brails.processors.garage_detector": [[174, 0, 0, "-", "garage_detector"], [175, 0, 0, "-", "lib"]], "brails.processors.garage_detector.garage_detector": [[174, 2, 1, "", "GarageDetector"]], "brails.processors.garage_detector.garage_detector.GarageDetector": [[174, 3, 1, "", "predict"], [174, 3, 1, "", "retrain"], [174, 3, 1, "", "train"]], "brails.processors.garage_detector.lib": [[176, 0, 0, "-", "backbone"], [177, 0, 0, "-", "efficientdet"], [184, 0, 0, "-", "efficientnet"], [188, 0, 0, "-", "infer_detector"], [189, 0, 0, "-", "train_detector"], [190, 0, 0, "-", "utils"]], "brails.processors.garage_detector.lib.backbone": [[176, 2, 1, "", "EfficientDetBackbone"]], "brails.processors.garage_detector.lib.backbone.EfficientDetBackbone": [[176, 3, 1, "", "forward"], [176, 3, 1, "", "freeze_bn"], [176, 3, 1, "", "init_backbone"]], "brails.processors.garage_detector.lib.efficientdet": [[178, 0, 0, "-", "coco"], [179, 0, 0, "-", "config"], [180, 0, 0, "-", "dataset"], [181, 0, 0, "-", "loss"], [182, 0, 0, "-", "model"], [183, 0, 0, "-", "utils"]], "brails.processors.garage_detector.lib.efficientdet.coco": [[178, 2, 1, "", "COCO"]], "brails.processors.garage_detector.lib.efficientdet.coco.COCO": [[178, 3, 1, "", "createIndex"], [178, 3, 1, "", "getAnnIds"], [178, 3, 1, "", "getCatIds"], [178, 3, 1, "", "getImgIds"], [178, 3, 1, "", "info"], [178, 3, 1, "", "loadAnns"], [178, 3, 1, "", "loadCats"], [178, 3, 1, "", "loadImgs"]], "brails.processors.garage_detector.lib.efficientdet.dataset": [[180, 2, 1, "", "Augmenter"], [180, 2, 1, "", "CocoDataset"], [180, 2, 1, "", "Normalizer"], [180, 2, 1, "", "Resizer"], [180, 6, 1, "", "collater"]], "brails.processors.garage_detector.lib.efficientdet.dataset.CocoDataset": [[180, 3, 1, "", "load_annotations"], [180, 3, 1, "", "load_classes"], [180, 3, 1, "", "load_image"]], "brails.processors.garage_detector.lib.efficientdet.loss": [[181, 2, 1, "", "FocalLoss"], [181, 6, 1, "", "calc_iou"]], "brails.processors.garage_detector.lib.efficientdet.loss.FocalLoss": [[181, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientdet.model": [[182, 2, 1, "", "BiFPN"], [182, 2, 1, "", "Classifier"], [182, 2, 1, "", "EfficientNet"], [182, 2, 1, "", "Regressor"], [182, 2, 1, "", "SeparableConvBlock"], [182, 6, 1, "", "nms"]], "brails.processors.garage_detector.lib.efficientdet.model.BiFPN": [[182, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientdet.model.Classifier": [[182, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientdet.model.EfficientNet": [[182, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientdet.model.Regressor": [[182, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientdet.model.SeparableConvBlock": [[182, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientdet.utils": [[183, 2, 1, "", "Anchors"], [183, 2, 1, "", "BBoxTransform"], [183, 2, 1, "", "ClipBoxes"]], "brails.processors.garage_detector.lib.efficientdet.utils.Anchors": [[183, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientdet.utils.BBoxTransform": [[183, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientdet.utils.ClipBoxes": [[183, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientnet": [[185, 0, 0, "-", "model"], [186, 0, 0, "-", "utils"], [187, 0, 0, "-", "utils_extra"]], "brails.processors.garage_detector.lib.efficientnet.model": [[185, 2, 1, "", "EfficientNet"], [185, 2, 1, "", "MBConvBlock"]], "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet": [[185, 3, 1, "", "extract_features"], [185, 3, 1, "", "forward"], [185, 3, 1, "", "from_name"], [185, 3, 1, "", "from_pretrained"], [185, 3, 1, "", "get_image_size"], [185, 3, 1, "", "set_swish"]], "brails.processors.garage_detector.lib.efficientnet.model.MBConvBlock": [[185, 3, 1, "", "forward"], [185, 4, 1, "", "has_se"], [185, 3, 1, "", "set_swish"]], "brails.processors.garage_detector.lib.efficientnet.utils": [[186, 2, 1, "", "BlockArgs"], [186, 2, 1, "", "BlockDecoder"], [186, 2, 1, "", "Conv2dDynamicSamePadding"], [186, 2, 1, "", "GlobalParams"], [186, 2, 1, "", "Identity"], [186, 2, 1, "", "MemoryEfficientSwish"], [186, 2, 1, "", "Swish"], [186, 2, 1, "", "SwishImplementation"], [186, 6, 1, "", "drop_connect"], [186, 6, 1, "", "efficientnet"], [186, 6, 1, "", "efficientnet_params"], [186, 6, 1, "", "get_model_params"], [186, 6, 1, "", "get_same_padding_conv2d"], [186, 6, 1, "", "load_pretrained_weights"], [186, 6, 1, "", "round_filters"], [186, 6, 1, "", "round_repeats"]], "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs": [[186, 4, 1, "", "expand_ratio"], [186, 4, 1, "", "id_skip"], [186, 4, 1, "", "input_filters"], [186, 4, 1, "", "kernel_size"], [186, 4, 1, "", "num_repeat"], [186, 4, 1, "", "output_filters"], [186, 4, 1, "", "se_ratio"], [186, 4, 1, "", "stride"]], "brails.processors.garage_detector.lib.efficientnet.utils.BlockDecoder": [[186, 3, 1, "", "decode"], [186, 3, 1, "", "encode"]], "brails.processors.garage_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding": [[186, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams": [[186, 4, 1, "", "batch_norm_epsilon"], [186, 4, 1, "", "batch_norm_momentum"], [186, 4, 1, "", "depth_coefficient"], [186, 4, 1, "", "depth_divisor"], [186, 4, 1, "", "drop_connect_rate"], [186, 4, 1, "", "dropout_rate"], [186, 4, 1, "", "image_size"], [186, 4, 1, "", "min_depth"], [186, 4, 1, "", "num_classes"], [186, 4, 1, "", "width_coefficient"]], "brails.processors.garage_detector.lib.efficientnet.utils.Identity": [[186, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientnet.utils.MemoryEfficientSwish": [[186, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientnet.utils.Swish": [[186, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientnet.utils.SwishImplementation": [[186, 3, 1, "", "backward"], [186, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientnet.utils_extra": [[187, 2, 1, "", "Conv2dStaticSamePadding"], [187, 2, 1, "", "MaxPool2dStaticSamePadding"]], "brails.processors.garage_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding": [[187, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding": [[187, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.infer_detector": [[188, 2, 1, "", "Infer"]], "brails.processors.garage_detector.lib.infer_detector.Infer": [[188, 3, 1, "", "display"], [188, 3, 1, "", "load_model"], [188, 3, 1, "", "predict"]], "brails.processors.garage_detector.lib.train_detector": [[189, 2, 1, "", "Detector"], [189, 2, 1, "", "ModelWithLoss"], [189, 6, 1, "", "boolean_string"]], "brails.processors.garage_detector.lib.train_detector.Detector": [[189, 3, 1, "", "save_checkpoint"], [189, 3, 1, "", "set_fixed_params"], [189, 3, 1, "", "set_hyperparams"], [189, 3, 1, "", "set_model"], [189, 3, 1, "", "set_train_dataset"], [189, 3, 1, "", "set_val_dataset"], [189, 3, 1, "", "start_training"], [189, 3, 1, "", "train"]], "brails.processors.garage_detector.lib.train_detector.ModelWithLoss": [[189, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.utils": [[191, 0, 0, "-", "sync_batchnorm"], [197, 0, 0, "-", "utils"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm": [[192, 0, 0, "-", "batchnorm"], [193, 0, 0, "-", "batchnorm_reimpl"], [194, 0, 0, "-", "comm"], [195, 0, 0, "-", "replicate"], [196, 0, 0, "-", "unittest"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm": [[192, 2, 1, "", "SynchronizedBatchNorm1d"], [192, 2, 1, "", "SynchronizedBatchNorm2d"], [192, 2, 1, "", "SynchronizedBatchNorm3d"], [192, 6, 1, "", "convert_model"], [192, 6, 1, "", "patch_sync_batchnorm"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl": [[193, 2, 1, "", "BatchNorm2dReimpl"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl": [[193, 3, 1, "", "forward"], [193, 3, 1, "", "reset_parameters"], [193, 3, 1, "", "reset_running_stats"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm": [[194, 2, 1, "", "FutureResult"], [194, 2, 1, "", "SlavePipe"], [194, 2, 1, "", "SyncMaster"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.FutureResult": [[194, 3, 1, "", "get"], [194, 3, 1, "", "put"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SlavePipe": [[194, 3, 1, "", "run_slave"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SyncMaster": [[194, 5, 1, "", "nr_slaves"], [194, 3, 1, "", "register_slave"], [194, 3, 1, "", "run_master"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate": [[195, 2, 1, "", "CallbackContext"], [195, 2, 1, "", "DataParallelWithCallback"], [195, 6, 1, "", "execute_replication_callbacks"], [195, 6, 1, "", "patch_replication_callback"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback": [[195, 3, 1, "", "replicate"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest": [[196, 2, 1, "", "TorchTestCase"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase": [[196, 3, 1, "", "assertTensorClose"]], "brails.processors.garage_detector.lib.utils.utils": [[197, 2, 1, "", "CustomDataParallel"], [197, 6, 1, "", "aspectaware_resize_padding"], [197, 6, 1, "", "display"], [197, 6, 1, "", "from_colorname_to_bgr"], [197, 6, 1, "", "get_index_label"], [197, 6, 1, "", "get_last_weights"], [197, 6, 1, "", "init_weights"], [197, 6, 1, "", "invert_affine"], [197, 6, 1, "", "plot_one_box"], [197, 6, 1, "", "postprocess"], [197, 6, 1, "", "preprocess"], [197, 6, 1, "", "preprocess_video"], [197, 6, 1, "", "replace_w_sync_bn"], [197, 6, 1, "", "standard_to_bgr"], [197, 6, 1, "", "variance_scaling_"]], "brails.processors.garage_detector.lib.utils.utils.CustomDataParallel": [[197, 3, 1, "", "scatter"]], "brails.processors.gpt_base_model": [[199, 0, 0, "-", "GPT"], [200, 0, 0, "-", "utils"]], "brails.processors.gpt_base_model.GPT": [[199, 2, 1, "", "GPT"]], "brails.processors.gpt_base_model.GPT.GPT": [[199, 3, 1, "", "predict"]], "brails.processors.gpt_base_model.utils": [[200, 6, 1, "", "encode_image"], [200, 6, 1, "", "find_json"], [200, 6, 1, "", "load_predictions_from_json"], [200, 6, 1, "", "prompt_and_save_caption"]], "brails.processors.image_classifier": [[202, 0, 0, "-", "image_classifier"]], "brails.processors.image_classifier.image_classifier": [[202, 2, 1, "", "ImageClassifier"]], "brails.processors.image_classifier.image_classifier.ImageClassifier": [[202, 3, 1, "", "predict"], [202, 3, 1, "", "retrain"], [202, 3, 1, "", "train"]], "brails.processors.image_processor": [[203, 2, 1, "", "ImageProcessor"]], "brails.processors.image_processor.ImageProcessor": [[203, 3, 1, "id0", "predict"]], "brails.processors.image_segmenter": [[205, 0, 0, "-", "image_segmenter"]], "brails.processors.image_segmenter.image_segmenter": [[205, 2, 1, "", "DatasetBinary"], [205, 2, 1, "", "DatasetRGB"], [205, 2, 1, "", "ImageSegmenter"]], "brails.processors.image_segmenter.image_segmenter.DatasetBinary": [[205, 3, 1, "", "__len__"], [205, 4, 1, "", "image_names"], [205, 4, 1, "", "mask_names"]], "brails.processors.image_segmenter.image_segmenter.DatasetRGB": [[205, 4, 1, "", "image_names"], [205, 4, 1, "", "mask_names"]], "brails.processors.image_segmenter.image_segmenter.ImageSegmenter": [[205, 4, 1, "", "batch_size"], [205, 4, 1, "", "classes"], [205, 4, 1, "", "device"], [205, 4, 1, "", "loss_history"], [205, 4, 1, "", "model_arch"], [205, 4, 1, "", "nepochs"], [205, 3, 1, "", "predict"], [205, 3, 1, "", "train"], [205, 4, 1, "", "train_data_dir"]], "brails.processors.nFloor_gpt": [[207, 0, 0, "-", "nFloor_gpt"]], "brails.processors.nFloor_gpt.nFloor_gpt": [[207, 2, 1, "", "NFloorGPT"]], "brails.processors.nFloor_gpt.nFloor_gpt.NFloorGPT": [[207, 3, 1, "", "predict"]], "brails.processors.nFloor_vlm": [[209, 0, 0, "-", "nFloor_vlm"]], "brails.processors.nFloor_vlm.nFloor_vlm": [[209, 2, 1, "", "NFloorVLM"]], "brails.processors.nfloors_detector": [[211, 0, 0, "-", "lib"], [234, 0, 0, "-", "nfloor_detector"]], "brails.processors.nfloors_detector.lib": [[212, 0, 0, "-", "backbone"], [213, 0, 0, "-", "efficientdet"], [220, 0, 0, "-", "efficientnet"], [224, 0, 0, "-", "infer_detector"], [225, 0, 0, "-", "train_detector"], [226, 0, 0, "-", "utils"]], "brails.processors.nfloors_detector.lib.backbone": [[212, 2, 1, "", "EfficientDetBackbone"]], "brails.processors.nfloors_detector.lib.backbone.EfficientDetBackbone": [[212, 3, 1, "", "forward"], [212, 3, 1, "", "freeze_bn"], [212, 3, 1, "", "init_backbone"]], "brails.processors.nfloors_detector.lib.efficientdet": [[214, 0, 0, "-", "coco"], [215, 0, 0, "-", "config"], [216, 0, 0, "-", "dataset"], [217, 0, 0, "-", "loss"], [218, 0, 0, "-", "model"], [219, 0, 0, "-", "utils"]], "brails.processors.nfloors_detector.lib.efficientdet.coco": [[214, 2, 1, "", "COCO"]], "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO": [[214, 3, 1, "", "createIndex"], [214, 3, 1, "", "getAnnIds"], [214, 3, 1, "", "getCatIds"], [214, 3, 1, "", "getImgIds"], [214, 3, 1, "", "info"], [214, 3, 1, "", "loadAnns"], [214, 3, 1, "", "loadCats"], [214, 3, 1, "", "loadImgs"]], "brails.processors.nfloors_detector.lib.efficientdet.dataset": [[216, 2, 1, "", "Augmenter"], [216, 2, 1, "", "CocoDataset"], [216, 2, 1, "", "Normalizer"], [216, 2, 1, "", "Resizer"], [216, 6, 1, "", "collater"]], "brails.processors.nfloors_detector.lib.efficientdet.dataset.CocoDataset": [[216, 3, 1, "", "load_annotations"], [216, 3, 1, "", "load_classes"], [216, 3, 1, "", "load_image"]], "brails.processors.nfloors_detector.lib.efficientdet.loss": [[217, 2, 1, "", "FocalLoss"], [217, 6, 1, "", "calc_iou"]], "brails.processors.nfloors_detector.lib.efficientdet.loss.FocalLoss": [[217, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientdet.model": [[218, 2, 1, "", "BiFPN"], [218, 2, 1, "", "Classifier"], [218, 2, 1, "", "EfficientNet"], [218, 2, 1, "", "Regressor"], [218, 2, 1, "", "SeparableConvBlock"], [218, 6, 1, "", "nms"]], "brails.processors.nfloors_detector.lib.efficientdet.model.BiFPN": [[218, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientdet.model.Classifier": [[218, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientdet.model.EfficientNet": [[218, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientdet.model.Regressor": [[218, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientdet.model.SeparableConvBlock": [[218, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientdet.utils": [[219, 2, 1, "", "Anchors"], [219, 2, 1, "", "BBoxTransform"], [219, 2, 1, "", "ClipBoxes"]], "brails.processors.nfloors_detector.lib.efficientdet.utils.Anchors": [[219, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientdet.utils.BBoxTransform": [[219, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientdet.utils.ClipBoxes": [[219, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientnet": [[221, 0, 0, "-", "model"], [222, 0, 0, "-", "utils"], [223, 0, 0, "-", "utils_extra"]], "brails.processors.nfloors_detector.lib.efficientnet.model": [[221, 2, 1, "", "EfficientNet"], [221, 2, 1, "", "MBConvBlock"]], "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet": [[221, 3, 1, "", "extract_features"], [221, 3, 1, "", "forward"], [221, 3, 1, "", "from_name"], [221, 3, 1, "", "from_pretrained"], [221, 3, 1, "", "get_image_size"], [221, 3, 1, "", "set_swish"]], "brails.processors.nfloors_detector.lib.efficientnet.model.MBConvBlock": [[221, 3, 1, "", "forward"], [221, 4, 1, "", "has_se"], [221, 3, 1, "", "set_swish"]], "brails.processors.nfloors_detector.lib.efficientnet.utils": [[222, 2, 1, "", "BlockArgs"], [222, 2, 1, "", "BlockDecoder"], [222, 2, 1, "", "Conv2dDynamicSamePadding"], [222, 2, 1, "", "GlobalParams"], [222, 2, 1, "", "Identity"], [222, 2, 1, "", "MemoryEfficientSwish"], [222, 2, 1, "", "Swish"], [222, 2, 1, "", "SwishImplementation"], [222, 6, 1, "", "drop_connect"], [222, 6, 1, "", "efficientnet"], [222, 6, 1, "", "efficientnet_params"], [222, 6, 1, "", "get_model_params"], [222, 6, 1, "", "get_same_padding_conv2d"], [222, 6, 1, "", "load_pretrained_weights"], [222, 6, 1, "", "round_filters"], [222, 6, 1, "", "round_repeats"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs": [[222, 4, 1, "", "expand_ratio"], [222, 4, 1, "", "id_skip"], [222, 4, 1, "", "input_filters"], [222, 4, 1, "", "kernel_size"], [222, 4, 1, "", "num_repeat"], [222, 4, 1, "", "output_filters"], [222, 4, 1, "", "se_ratio"], [222, 4, 1, "", "stride"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockDecoder": [[222, 3, 1, "", "decode"], [222, 3, 1, "", "encode"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding": [[222, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams": [[222, 4, 1, "", "batch_norm_epsilon"], [222, 4, 1, "", "batch_norm_momentum"], [222, 4, 1, "", "depth_coefficient"], [222, 4, 1, "", "depth_divisor"], [222, 4, 1, "", "drop_connect_rate"], [222, 4, 1, "", "dropout_rate"], [222, 4, 1, "", "image_size"], [222, 4, 1, "", "min_depth"], [222, 4, 1, "", "num_classes"], [222, 4, 1, "", "width_coefficient"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.Identity": [[222, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.MemoryEfficientSwish": [[222, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.Swish": [[222, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.SwishImplementation": [[222, 3, 1, "", "backward"], [222, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientnet.utils_extra": [[223, 2, 1, "", "Conv2dStaticSamePadding"], [223, 2, 1, "", "MaxPool2dStaticSamePadding"]], "brails.processors.nfloors_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding": [[223, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding": [[223, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.infer_detector": [[224, 2, 1, "", "Infer"]], "brails.processors.nfloors_detector.lib.infer_detector.Infer": [[224, 3, 1, "", "display"], [224, 3, 1, "", "load_model"], [224, 3, 1, "", "predict"]], "brails.processors.nfloors_detector.lib.train_detector": [[225, 2, 1, "", "Detector"], [225, 2, 1, "", "ModelWithLoss"], [225, 6, 1, "", "boolean_string"]], "brails.processors.nfloors_detector.lib.train_detector.Detector": [[225, 3, 1, "", "save_checkpoint"], [225, 3, 1, "", "set_fixed_params"], [225, 3, 1, "", "set_hyperparams"], [225, 3, 1, "", "set_model"], [225, 3, 1, "", "set_train_dataset"], [225, 3, 1, "", "set_val_dataset"], [225, 3, 1, "", "start_training"], [225, 3, 1, "", "train"]], "brails.processors.nfloors_detector.lib.train_detector.ModelWithLoss": [[225, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.utils": [[227, 0, 0, "-", "sync_batchnorm"], [233, 0, 0, "-", "utils"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm": [[228, 0, 0, "-", "batchnorm"], [229, 0, 0, "-", "batchnorm_reimpl"], [230, 0, 0, "-", "comm"], [231, 0, 0, "-", "replicate"], [232, 0, 0, "-", "unittest"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm": [[228, 2, 1, "", "SynchronizedBatchNorm1d"], [228, 2, 1, "", "SynchronizedBatchNorm2d"], [228, 2, 1, "", "SynchronizedBatchNorm3d"], [228, 6, 1, "", "convert_model"], [228, 6, 1, "", "patch_sync_batchnorm"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl": [[229, 2, 1, "", "BatchNorm2dReimpl"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl": [[229, 3, 1, "", "forward"], [229, 3, 1, "", "reset_parameters"], [229, 3, 1, "", "reset_running_stats"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm": [[230, 2, 1, "", "FutureResult"], [230, 2, 1, "", "SlavePipe"], [230, 2, 1, "", "SyncMaster"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.FutureResult": [[230, 3, 1, "", "get"], [230, 3, 1, "", "put"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SlavePipe": [[230, 3, 1, "", "run_slave"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SyncMaster": [[230, 5, 1, "", "nr_slaves"], [230, 3, 1, "", "register_slave"], [230, 3, 1, "", "run_master"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate": [[231, 2, 1, "", "CallbackContext"], [231, 2, 1, "", "DataParallelWithCallback"], [231, 6, 1, "", "execute_replication_callbacks"], [231, 6, 1, "", "patch_replication_callback"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback": [[231, 3, 1, "", "replicate"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest": [[232, 2, 1, "", "TorchTestCase"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase": [[232, 3, 1, "", "assertTensorClose"]], "brails.processors.nfloors_detector.lib.utils.utils": [[233, 2, 1, "", "CustomDataParallel"], [233, 6, 1, "", "aspectaware_resize_padding"], [233, 6, 1, "", "display"], [233, 6, 1, "", "from_colorname_to_bgr"], [233, 6, 1, "", "get_index_label"], [233, 6, 1, "", "get_last_weights"], [233, 6, 1, "", "init_weights"], [233, 6, 1, "", "invert_affine"], [233, 6, 1, "", "plot_one_box"], [233, 6, 1, "", "postprocess"], [233, 6, 1, "", "preprocess"], [233, 6, 1, "", "preprocess_video"], [233, 6, 1, "", "replace_w_sync_bn"], [233, 6, 1, "", "standard_to_bgr"], [233, 6, 1, "", "variance_scaling_"]], "brails.processors.nfloors_detector.lib.utils.utils.CustomDataParallel": [[233, 3, 1, "", "scatter"]], "brails.processors.nfloors_detector.nfloor_detector": [[234, 2, 1, "", "NFloorDetector"]], "brails.processors.nfloors_detector.nfloor_detector.NFloorDetector": [[234, 3, 1, "", "predict"], [234, 3, 1, "", "retrain"], [234, 3, 1, "", "train"]], "brails.processors.occupancy_classifier": [[236, 0, 0, "-", "occupancy_classifier"]], "brails.processors.occupancy_classifier.occupancy_classifier": [[236, 2, 1, "", "OccupancyClassifier"]], "brails.processors.occupancy_classifier.occupancy_classifier.OccupancyClassifier": [[236, 3, 1, "id0", "predict"], [236, 3, 1, "", "retrain"]], "brails.processors.other_idea": [[238, 0, 0, "-", "arial_processing"], [239, 0, 0, "-", "street_processor"]], "brails.processors.other_idea.arial_processing": [[238, 2, 1, "", "ArialProcessing"]], "brails.processors.other_idea.arial_processing.ArialProcessing": [[238, 3, 1, "", "predict"]], "brails.processors.other_idea.street_processor": [[239, 2, 1, "", "StreetProcessor"]], "brails.processors.other_idea.street_processor.StreetProcessor": [[239, 3, 1, "", "predict"]], "brails.processors.roof_shape_classifier": [[241, 0, 0, "-", "roof_shape_classifier"]], "brails.processors.roof_shape_classifier.roof_shape_classifier": [[241, 2, 1, "", "RoofShapeClassifier"]], "brails.processors.roof_shape_classifier.roof_shape_classifier.RoofShapeClassifier": [[241, 3, 1, "", "predict"], [241, 3, 1, "", "retrain"]], "brails.processors.roof_shape_gpt": [[243, 0, 0, "-", "roof_shape_gpt"]], "brails.processors.roof_shape_gpt.roof_shape_gpt": [[243, 2, 1, "", "RoofShapeGPT"]], "brails.processors.roof_shape_gpt.roof_shape_gpt.RoofShapeGPT": [[243, 3, 1, "", "predict"]], "brails.processors.roof_shape_vlm": [[245, 0, 0, "-", "roof_shape_vlm"]], "brails.processors.roof_shape_vlm.roof_shape_vlm": [[245, 2, 1, "", "RoofShapeVLM"]], "brails.processors.street_level_damage_detection": [[247, 0, 0, "-", "street_level_damage_detection"]], "brails.processors.street_level_damage_detection.street_level_damage_detection": [[247, 2, 1, "", "DamageDetection_StreetLevel"]], "brails.processors.street_level_damage_detection.street_level_damage_detection.DamageDetection_StreetLevel": [[247, 4, 1, "", "classes"], [247, 3, 1, "", "predict"], [247, 4, 1, "", "text_prompts"]], "brails.processors.vlm_image_classifier": [[249, 0, 0, "-", "CLIPClassifier"], [250, 0, 0, "-", "clip"]], "brails.processors.vlm_image_classifier.CLIPClassifier": [[249, 2, 1, "", "CLIPClassifier"]], "brails.processors.vlm_image_classifier.CLIPClassifier.CLIPClassifier": [[249, 4, 1, "", "batch_size"], [249, 4, 1, "", "device"], [249, 4, 1, "", "model_arch"], [249, 3, 1, "", "predict"], [249, 4, 1, "", "template"]], "brails.processors.vlm_image_classifier.clip": [[251, 0, 0, "-", "clip"], [252, 0, 0, "-", "model"], [253, 0, 0, "-", "simple_tokenizer"], [254, 0, 0, "-", "utils"]], "brails.processors.vlm_image_classifier.clip.clip": [[251, 6, 1, "", "available_models"], [251, 6, 1, "", "load"], [251, 6, 1, "", "tokenize"]], "brails.processors.vlm_image_classifier.clip.model": [[252, 2, 1, "", "AttentionPool2d"], [252, 2, 1, "", "Bottleneck"], [252, 2, 1, "", "CLIP"], [252, 2, 1, "", "LayerNorm"], [252, 2, 1, "", "ModifiedResNet"], [252, 2, 1, "", "QuickGELU"], [252, 2, 1, "", "ResidualAttentionBlock"], [252, 2, 1, "", "Transformer"], [252, 2, 1, "", "VisionTransformer"], [252, 6, 1, "", "build_model"], [252, 6, 1, "", "convert_weights"]], "brails.processors.vlm_image_classifier.clip.model.AttentionPool2d": [[252, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.model.Bottleneck": [[252, 4, 1, "", "expansion"], [252, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.model.CLIP": [[252, 3, 1, "", "build_attention_mask"], [252, 5, 1, "", "dtype"], [252, 3, 1, "", "encode_image"], [252, 3, 1, "", "encode_text"], [252, 3, 1, "", "forward"], [252, 3, 1, "", "initialize_parameters"]], "brails.processors.vlm_image_classifier.clip.model.LayerNorm": [[252, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.model.ModifiedResNet": [[252, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.model.QuickGELU": [[252, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.model.ResidualAttentionBlock": [[252, 3, 1, "", "attention"], [252, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.model.Transformer": [[252, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.model.VisionTransformer": [[252, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.simple_tokenizer": [[253, 2, 1, "", "SimpleTokenizer"], [253, 6, 1, "", "basic_clean"], [253, 6, 1, "", "bytes_to_unicode"], [253, 6, 1, "", "default_bpe"], [253, 6, 1, "", "get_pairs"], [253, 6, 1, "", "whitespace_clean"]], "brails.processors.vlm_image_classifier.clip.simple_tokenizer.SimpleTokenizer": [[253, 3, 1, "", "bpe"], [253, 3, 1, "", "decode"], [253, 3, 1, "", "encode"]], "brails.processors.vlm_image_classifier.clip.utils": [[254, 6, 1, "", "aggregate_predictions"], [254, 6, 1, "", "compute_similarity"], [254, 6, 1, "", "pred_idx_to_labels"], [254, 6, 1, "", "predict_wrapper"], [254, 6, 1, "", "preprocess_batch_img"], [254, 6, 1, "", "round"]], "brails.processors.vlm_segmenter": [[256, 0, 0, "-", "grounded_sam_utils"], [257, 0, 0, "-", "segment_anything"], [274, 0, 0, "-", "vlm_segmenter"]], "brails.processors.vlm_segmenter.grounded_sam_utils": [[256, 2, 1, "", "BoundingBox"], [256, 2, 1, "", "DetectionResult"], [256, 6, 1, "", "build_models"], [256, 6, 1, "", "detect"], [256, 6, 1, "", "run_on_one_image"], [256, 6, 1, "", "segment"], [256, 6, 1, "", "show_binary_mask"], [256, 6, 1, "", "show_box"], [256, 6, 1, "", "show_points"], [256, 6, 1, "", "verify_and_download_models"]], "brails.processors.vlm_segmenter.grounded_sam_utils.BoundingBox": [[256, 4, 1, "", "xmax"], [256, 4, 1, "", "xmin"], [256, 5, 1, "", "xyxy"], [256, 4, 1, "", "ymax"], [256, 4, 1, "", "ymin"]], "brails.processors.vlm_segmenter.grounded_sam_utils.DetectionResult": [[256, 4, 1, "", "box"], [256, 3, 1, "", "from_dict"], [256, 4, 1, "", "label"], [256, 4, 1, "", "mask"], [256, 4, 1, "", "score"]], "brails.processors.vlm_segmenter.segment_anything": [[258, 0, 0, "-", "automatic_mask_generator"], [259, 0, 0, "-", "build_sam"], [260, 0, 0, "-", "build_sam_hq"], [261, 0, 0, "-", "modeling"], [269, 0, 0, "-", "predictor"], [270, 0, 0, "-", "utils"]], "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator": [[258, 2, 1, "", "SamAutomaticMaskGenerator"]], "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator.SamAutomaticMaskGenerator": [[258, 3, 1, "", "generate"], [258, 3, 1, "", "postprocess_small_regions"]], "brails.processors.vlm_segmenter.segment_anything.build_sam": [[259, 6, 1, "", "build_sam"], [259, 6, 1, "", "build_sam_vit_b"], [259, 6, 1, "", "build_sam_vit_h"], [259, 6, 1, "", "build_sam_vit_l"]], "brails.processors.vlm_segmenter.segment_anything.build_sam_hq": [[260, 6, 1, "", "build_sam_hq"], [260, 6, 1, "", "build_sam_hq_vit_b"], [260, 6, 1, "", "build_sam_hq_vit_h"], [260, 6, 1, "", "build_sam_hq_vit_l"]], "brails.processors.vlm_segmenter.segment_anything.modeling": [[262, 0, 0, "-", "common"], [263, 0, 0, "-", "image_encoder"], [264, 0, 0, "-", "mask_decoder"], [265, 0, 0, "-", "mask_decoder_hq"], [266, 0, 0, "-", "prompt_encoder"], [267, 0, 0, "-", "sam"], [268, 0, 0, "-", "transformer"]], "brails.processors.vlm_segmenter.segment_anything.modeling.common": [[262, 2, 1, "", "LayerNorm2d"], [262, 2, 1, "", "MLPBlock"]], "brails.processors.vlm_segmenter.segment_anything.modeling.common.LayerNorm2d": [[262, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.common.MLPBlock": [[262, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder": [[263, 2, 1, "", "Attention"], [263, 2, 1, "", "Block"], [263, 2, 1, "", "ImageEncoderViT"], [263, 2, 1, "", "PatchEmbed"], [263, 6, 1, "", "add_decomposed_rel_pos"], [263, 6, 1, "", "get_rel_pos"], [263, 6, 1, "", "window_partition"], [263, 6, 1, "", "window_unpartition"]], "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.Attention": [[263, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.Block": [[263, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.ImageEncoderViT": [[263, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.PatchEmbed": [[263, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder": [[264, 2, 1, "", "MLP"], [264, 2, 1, "", "MaskDecoder"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.MLP": [[264, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.MaskDecoder": [[264, 3, 1, "", "forward"], [264, 3, 1, "", "predict_masks"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq": [[265, 2, 1, "", "MLP"], [265, 2, 1, "", "MaskDecoderHQ"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.MLP": [[265, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.MaskDecoderHQ": [[265, 3, 1, "", "forward"], [265, 3, 1, "", "predict_masks"]], "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder": [[266, 2, 1, "", "PositionEmbeddingRandom"], [266, 2, 1, "", "PromptEncoder"]], "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PositionEmbeddingRandom": [[266, 3, 1, "", "forward"], [266, 3, 1, "", "forward_with_coords"]], "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PromptEncoder": [[266, 3, 1, "", "forward"], [266, 3, 1, "", "get_dense_pe"]], "brails.processors.vlm_segmenter.segment_anything.modeling.sam": [[267, 2, 1, "", "Sam"]], "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam": [[267, 5, 1, "", "device"], [267, 3, 1, "", "forward"], [267, 4, 1, "", "image_format"], [267, 4, 1, "", "mask_threshold"], [267, 3, 1, "", "postprocess_masks"], [267, 3, 1, "", "preprocess"]], "brails.processors.vlm_segmenter.segment_anything.modeling.transformer": [[268, 2, 1, "", "Attention"], [268, 2, 1, "", "TwoWayAttentionBlock"], [268, 2, 1, "", "TwoWayTransformer"]], "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.Attention": [[268, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.TwoWayAttentionBlock": [[268, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.TwoWayTransformer": [[268, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.predictor": [[269, 2, 1, "", "SamPredictor"]], "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor": [[269, 5, 1, "", "device"], [269, 3, 1, "", "get_image_embedding"], [269, 3, 1, "", "predict"], [269, 3, 1, "", "predict_torch"], [269, 3, 1, "", "reset_image"], [269, 3, 1, "", "set_image"], [269, 3, 1, "", "set_torch_image"]], "brails.processors.vlm_segmenter.segment_anything.utils": [[271, 0, 0, "-", "amg"], [272, 0, 0, "-", "onnx"], [273, 0, 0, "-", "transforms"]], "brails.processors.vlm_segmenter.segment_anything.utils.amg": [[271, 2, 1, "", "MaskData"], [271, 6, 1, "", "area_from_rle"], [271, 6, 1, "", "batch_iterator"], [271, 6, 1, "", "batched_mask_to_box"], [271, 6, 1, "", "box_xyxy_to_xywh"], [271, 6, 1, "", "build_all_layer_point_grids"], [271, 6, 1, "", "build_point_grid"], [271, 6, 1, "", "calculate_stability_score"], [271, 6, 1, "", "coco_encode_rle"], [271, 6, 1, "", "generate_crop_boxes"], [271, 6, 1, "", "is_box_near_crop_edge"], [271, 6, 1, "", "mask_to_rle_pytorch"], [271, 6, 1, "", "remove_small_regions"], [271, 6, 1, "", "rle_to_mask"], [271, 6, 1, "", "uncrop_boxes_xyxy"], [271, 6, 1, "", "uncrop_masks"], [271, 6, 1, "", "uncrop_points"]], "brails.processors.vlm_segmenter.segment_anything.utils.amg.MaskData": [[271, 3, 1, "", "cat"], [271, 3, 1, "", "filter"], [271, 3, 1, "", "items"], [271, 3, 1, "", "to_numpy"]], "brails.processors.vlm_segmenter.segment_anything.utils.onnx": [[272, 2, 1, "", "SamOnnxModel"]], "brails.processors.vlm_segmenter.segment_anything.utils.onnx.SamOnnxModel": [[272, 3, 1, "", "forward"], [272, 3, 1, "", "mask_postprocessing"], [272, 3, 1, "", "resize_longest_image_size"], [272, 3, 1, "", "select_masks"]], "brails.processors.vlm_segmenter.segment_anything.utils.transforms": [[273, 2, 1, "", "ResizeLongestSide"]], "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide": [[273, 3, 1, "", "apply_boxes"], [273, 3, 1, "", "apply_boxes_torch"], [273, 3, 1, "", "apply_coords"], [273, 3, 1, "", "apply_coords_torch"], [273, 3, 1, "", "apply_image"], [273, 3, 1, "", "apply_image_torch"], [273, 3, 1, "", "get_preprocess_shape"]], "brails.processors.vlm_segmenter.vlm_segmenter": [[274, 2, 1, "", "VLMSegmenter"]], "brails.processors.vlm_segmenter.vlm_segmenter.VLMSegmenter": [[274, 3, 1, "", "predict"], [274, 3, 1, "", "write_dict"]], "brails.processors.year_built_classifier": [[276, 0, 0, "-", "Resnet"], [278, 0, 0, "-", "lib"], [281, 0, 0, "-", "model"], [283, 0, 0, "-", "weights"], [284, 0, 0, "-", "year_built_classifier"]], "brails.processors.year_built_classifier.Resnet": [[276, 2, 1, "", "ResNet"], [276, 6, 1, "", "resnet101"], [276, 6, 1, "", "resnet152"], [276, 6, 1, "", "resnet18"], [276, 6, 1, "", "resnet34"], [276, 6, 1, "", "resnet50"], [276, 6, 1, "", "resnext101_32x8d"], [276, 6, 1, "", "resnext50_32x4d"]], "brails.processors.year_built_classifier.Resnet.ResNet": [[276, 3, 1, "", "forward"]], "brails.processors.year_built_classifier.lib": [[279, 0, 0, "-", "datasets"], [280, 0, 0, "-", "utils"]], "brails.processors.year_built_classifier.lib.datasets": [[279, 2, 1, "", "YearBuiltFolder"]], "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder": [[279, 3, 1, "", "__len__"], [279, 4, 1, "", "calc_perf"], [279, 4, 1, "", "class_weights"], [279, 4, 1, "", "classes"], [279, 4, 1, "", "filenames"], [279, 4, 1, "", "img_paths"], [279, 4, 1, "", "labels"], [279, 3, 1, "", "loader"], [279, 4, 1, "", "soft_labels"], [279, 4, 1, "", "train_weights"], [279, 4, 1, "", "transforms"]], "brails.processors.year_built_classifier.lib.utils": [[280, 6, 1, "", "construct_confusion_matrix_image"], [280, 6, 1, "", "cosine_anneal_schedule"], [280, 6, 1, "", "jigsaw_generator"], [280, 6, 1, "", "load_model"], [280, 6, 1, "", "model_info"], [280, 6, 1, "", "test"], [280, 6, 1, "", "test_softlabels"]], "brails.processors.year_built_classifier.model": [[281, 2, 1, "", "BasicConv"], [281, 2, 1, "", "PMG"]], "brails.processors.year_built_classifier.model.BasicConv": [[281, 3, 1, "", "forward"]], "brails.processors.year_built_classifier.model.PMG": [[281, 3, 1, "", "forward"]], "brails.processors.year_built_classifier.year_built_classifier": [[284, 2, 1, "", "YearBuiltClassifier"]], "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier": [[284, 4, 1, "", "checkpoint"], [284, 4, 1, "", "checkpoints_dir"], [284, 4, 1, "", "classes"], [284, 3, 1, "", "construct_confusion_matrix_image"], [284, 4, 1, "", "device"], [284, 3, 1, "", "evaluate_to_stats"], [284, 4, 1, "", "model"], [284, 4, 1, "", "model_file"], [284, 3, 1, "", "predict"], [284, 4, 1, "", "print_res"], [284, 4, 1, "", "test_transforms"], [284, 4, 1, "", "work_dir"]], "brails.scrapers": [[286, 0, 0, "-", "asce_hazard_data_scraper"], [288, 0, 0, "-", "asset_data_augmenter"], [289, 0, 0, "-", "fema_firm_scraper"], [291, 0, 0, "-", "footprint_scraper"], [292, 0, 0, "-", "google_satellite"], [294, 0, 0, "-", "google_streetview"], [296, 0, 0, "-", "image_scraper"], [297, 0, 0, "-", "ms_footprint_scraper"], [299, 0, 0, "-", "nbi_scraper"], [301, 0, 0, "-", "nsi_parser"], [303, 0, 0, "-", "nti_scraper"], [305, 0, 0, "-", "osm_footprint_scraper"], [307, 0, 0, "-", "osm_power_network_scraper"], [309, 0, 0, "-", "overture_maps_scraper"], [312, 0, 0, "-", "usa_footprint_scraper"], [314, 0, 0, "-", "user_footprints"], [315, 0, 0, "-", "usgs_data_scrapers"]], "brails.scrapers.asset_data_augmenter": [[288, 2, 1, "", "AssetDataAugmenter"]], "brails.scrapers.asset_data_augmenter.AssetDataAugmenter": [[288, 3, 1, "", "populate_feature"]], "brails.scrapers.fema_firm_scraper": [[290, 0, 0, "-", "fema_firm_scraper"]], "brails.scrapers.fema_firm_scraper.fema_firm_scraper": [[290, 2, 1, "", "FEMAFIRMScraper"]], "brails.scrapers.fema_firm_scraper.fema_firm_scraper.FEMAFIRMScraper": [[290, 3, 1, "", "get_available_attributes"], [290, 3, 1, "", "populate_feature"]], "brails.scrapers.footprint_scraper": [[291, 2, 1, "", "FootprintScraper"]], "brails.scrapers.footprint_scraper.FootprintScraper": [[291, 4, 1, "", "centroids"], [291, 4, 1, "", "footprints"], [291, 3, 1, "id0", "get_footprints"], [291, 4, 1, "", "name"]], "brails.scrapers.google_satellite": [[293, 0, 0, "-", "google_satellite"]], "brails.scrapers.google_satellite.google_satellite": [[293, 2, 1, "", "GoogleSatellite"]], "brails.scrapers.google_satellite.google_satellite.GoogleSatellite": [[293, 3, 1, "", "get_images"]], "brails.scrapers.google_streetview": [[295, 0, 0, "-", "google_streetview"]], "brails.scrapers.google_streetview.google_streetview": [[295, 2, 1, "", "GoogleStreetview"]], "brails.scrapers.google_streetview.google_streetview.GoogleStreetview": [[295, 4, 1, "", "api_key"], [295, 3, 1, "", "get_images"]], "brails.scrapers.image_scraper": [[296, 2, 1, "", "ImageScraper"]], "brails.scrapers.image_scraper.ImageScraper": [[296, 3, 1, "", "get_images"]], "brails.scrapers.ms_footprint_scraper": [[298, 0, 0, "-", "ms_footprint_handler"]], "brails.scrapers.ms_footprint_scraper.ms_footprint_handler": [[298, 2, 1, "", "MS_FootprintScraper"]], "brails.scrapers.ms_footprint_scraper.ms_footprint_handler.MS_FootprintScraper": [[298, 3, 1, "", "get_footprints"], [298, 4, 1, "", "length_unit"]], "brails.scrapers.nbi_scraper": [[300, 0, 0, "-", "nbi_scraper"]], "brails.scrapers.nbi_scraper.nbi_scraper": [[300, 2, 1, "", "NBIScraper"]], "brails.scrapers.nbi_scraper.nbi_scraper.NBIScraper": [[300, 3, 1, "", "get_assets"], [300, 4, 1, "", "inventory"], [300, 4, 1, "", "length_unit"]], "brails.scrapers.nsi_parser": [[302, 0, 0, "-", "nsi_parser"]], "brails.scrapers.nsi_parser.nsi_parser": [[302, 2, 1, "", "NSI_Parser"]], "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser": [[302, 3, 1, "", "GetNSIData"], [302, 4, 1, "", "attributes"], [302, 4, 1, "", "brails2r2dmap"], [302, 4, 1, "", "footprints"], [302, 3, 1, "", "get_filtered_data_given_inventory"], [302, 3, 1, "", "get_raw_data"], [302, 4, 1, "", "nsi2brailsmap"]], "brails.scrapers.nti_scraper": [[304, 0, 0, "-", "nti_scraper"]], "brails.scrapers.nti_scraper.nti_scraper": [[304, 2, 1, "", "NTIScraper"]], "brails.scrapers.nti_scraper.nti_scraper.NTIScraper": [[304, 3, 1, "", "get_assets"], [304, 4, 1, "", "inventory"], [304, 4, 1, "", "length_unit"]], "brails.scrapers.osm_footprint_scraper": [[306, 0, 0, "-", "osm_footprint_scraper"]], "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper": [[306, 2, 1, "", "OSM_FootprintScraper"]], "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper.OSM_FootprintScraper": [[306, 3, 1, "", "get_footprints"], [306, 4, 1, "", "length_unit"]], "brails.scrapers.osm_power_network_scraper": [[308, 0, 0, "-", "osm_power_network_scraper"]], "brails.scrapers.osm_power_network_scraper.osm_power_network_scraper": [[308, 2, 1, "", "OSM_PowerNetworkScraper"]], "brails.scrapers.osm_power_network_scraper.osm_power_network_scraper.OSM_PowerNetworkScraper": [[308, 3, 1, "", "get_elements"], [308, 4, 1, "", "length_unit"]], "brails.scrapers.overture_maps_scraper": [[310, 0, 0, "-", "overture_maps_footprint_scraper"], [311, 0, 0, "-", "overture_maps_scraper"]], "brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper": [[310, 2, 1, "", "OvertureMapsFootprintScraper"]], "brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper.OvertureMapsFootprintScraper": [[310, 3, 1, "", "get_footprints"]], "brails.scrapers.overture_maps_scraper.overture_maps_scraper": [[311, 2, 1, "", "OvertureMapsScraper"]], "brails.scrapers.overture_maps_scraper.overture_maps_scraper.OvertureMapsScraper": [[311, 3, 1, "", "fetch_release_names"], [311, 3, 1, "", "normalize_bbox_order"]], "brails.scrapers.usa_footprint_scraper": [[313, 0, 0, "-", "usa_footprint_scraper"]], "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper": [[313, 2, 1, "", "USA_FootprintScraper"]], "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper.USA_FootprintScraper": [[313, 3, 1, "", "get_footprints"], [313, 4, 1, "", "length_unit"]], "brails.scrapers.user_footprints": [[314, 2, 1, "", "UserFootprint"]], "brails.scrapers.user_footprints.UserFootprint": [[314, 3, 1, "", "fetch_footprint_data"]], "brails.scrapers.usgs_data_scrapers": [[316, 0, 0, "-", "nlcd_scraper"], [317, 0, 0, "-", "usgs_elevation_scraper"]], "brails.scrapers.usgs_data_scrapers.nlcd_scraper": [[316, 2, 1, "", "NLCDScraper"]], "brails.scrapers.usgs_data_scrapers.nlcd_scraper.NLCDScraper": [[316, 3, 1, "", "populate_feature"]], "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper": [[317, 2, 1, "", "USGSElevationScraper"]], "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.USGSElevationScraper": [[317, 3, 1, "", "fetch_all_elevations"], [317, 3, 1, "", "get_elevation_usgs"], [317, 3, 1, "", "get_region_elevation_data"], [317, 3, 1, "", "populate_feature"], [317, 3, 1, "", "supported_asset_elevation_modes"]], "brails.types": [[319, 0, 0, "-", "asset_inventory"], [320, 0, 0, "-", "image_set"], [321, 0, 0, "-", "region_boundary"]], "brails.types.asset_inventory": [[346, 2, 1, "", "Asset"], [347, 2, 1, "", "AssetInventory"], [319, 6, 1, "", "clean_floats"]], "brails.types.asset_inventory.Asset": [[346, 3, 1, "", "__init__"], [319, 3, 1, "", "add_features"], [346, 4, 1, "", "asset_id"], [346, 4, 1, "", "coordinates"], [346, 4, 1, "", "features"], [319, 3, 1, "", "get_centroid"], [319, 3, 1, "", "print_info"], [319, 3, 1, "", "remove_features"]], "brails.types.asset_inventory.AssetInventory": [[347, 3, 1, "", "__init__"], [319, 3, 1, "", "add_asset"], [319, 3, 1, "", "add_asset_coordinates"], [319, 3, 1, "", "add_asset_features"], [319, 3, 1, "", "add_asset_features_from_csv"], [319, 3, 1, "", "add_model_predictions"], [319, 3, 1, "", "change_feature_names"], [319, 3, 1, "", "convert_polygons_to_centroids"], [319, 3, 1, "", "get_asset_coordinates"], [319, 3, 1, "", "get_asset_features"], [319, 3, 1, "", "get_asset_ids"], [319, 3, 1, "", "get_coordinates"], [319, 3, 1, "", "get_dataframe"], [319, 3, 1, "", "get_extent"], [319, 3, 1, "", "get_geojson"], [319, 3, 1, "", "get_multi_keys"], [319, 3, 1, "", "get_n_pw"], [319, 3, 1, "", "get_random_sample"], [319, 3, 1, "", "get_world_realization"], [319, 3, 1, "", "join"], [319, 3, 1, "", "print_info"], [319, 3, 1, "", "read_from_csv"], [319, 3, 1, "", "remove_asset"], [319, 3, 1, "", "remove_features"], [319, 3, 1, "", "update_world_realization"], [319, 3, 1, "", "write_to_geojson"]], "brails.types.image_set": [[348, 2, 1, "", "Image"], [349, 2, 1, "", "ImageSet"]], "brails.types.image_set.Image": [[348, 3, 1, "", "__init__"], [320, 3, 1, "", "print_info"], [320, 3, 1, "", "update_filename"], [320, 3, 1, "", "update_properties"]], "brails.types.image_set.ImageSet": [[349, 3, 1, "", "__init__"], [320, 3, 1, "", "add_image"], [320, 3, 1, "", "get_image"], [320, 3, 1, "", "print_info"], [320, 3, 1, "", "set_directory"]], "brails.types.region_boundary": [[350, 2, 1, "", "RegionBoundary"], [321, 2, 1, "", "RegionInput"]], "brails.types.region_boundary.RegionBoundary": [[350, 3, 1, "", "__init__"], [321, 3, 1, "", "get_boundary"]], "brails.utils": [[323, 0, 0, "-", "arcgisapi_service_helper"], [324, 0, 0, "-", "geo_tools"], [325, 0, 0, "-", "importer"], [326, 0, 0, "-", "input_validator"], [327, 0, 0, "-", "inventory_validator"], [328, 0, 0, "-", "model_utils"], [329, 0, 0, "-", "plot_tools"], [330, 0, 0, "-", "rapid_utils"], [331, 0, 0, "-", "segmentation_utils"], [332, 0, 0, "-", "spatial_join_methods"], [337, 0, 0, "-", "unit_converter"]], "brails.utils.arcgisapi_service_helper": [[351, 2, 1, "", "ArcgisAPIServiceHelper"]], "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper": [[351, 3, 1, "", "__init__"], [323, 3, 1, "", "categorize_and_split_cells"], [323, 3, 1, "", "download_all_attr_for_region"], [323, 3, 1, "", "download_all_attr_from_api"], [323, 3, 1, "", "download_attr_from_api"], [323, 3, 1, "", "fetch_api_fields"], [323, 3, 1, "", "fetch_data_for_cells"], [323, 3, 1, "", "fetch_max_records_per_query"], [323, 3, 1, "", "get_element_counts"], [323, 3, 1, "", "split_polygon_into_cells"]], "brails.utils.geo_tools": [[352, 2, 1, "", "GeoTools"]], "brails.utils.geo_tools.GeoTools": [[352, 3, 1, "", "__init__"], [324, 3, 1, "", "bbox2poly"], [324, 3, 1, "", "geometry_to_list_of_lists"], [324, 3, 1, "", "haversine_dist"], [324, 3, 1, "", "match_points_to_polygons"], [324, 3, 1, "", "mesh_polygon"], [324, 3, 1, "", "plot_polygon_cells"], [324, 3, 1, "", "write_polygon_to_geojson"]], "brails.utils.importer": [[353, 2, 1, "", "Importer"]], "brails.utils.importer.Importer": [[353, 3, 1, "", "__init__"], [325, 3, 1, "", "get_class"], [325, 3, 1, "", "get_object"]], "brails.utils.input_validator": [[354, 2, 1, "", "InputValidator"]], "brails.utils.input_validator.InputValidator": [[354, 3, 1, "", "__init__"], [326, 3, 1, "", "is_box"], [326, 3, 1, "", "is_float"], [326, 3, 1, "", "is_image"], [326, 3, 1, "", "is_linestring"], [326, 3, 1, "", "is_multilinestring"], [326, 3, 1, "", "is_multipolygon"], [326, 3, 1, "", "is_point"], [326, 3, 1, "", "is_polygon"], [326, 3, 1, "", "validate_coordinates"]], "brails.utils.inventory_validator": [[355, 2, 1, "", "InventoryValidator"]], "brails.utils.inventory_validator.InventoryValidator": [[355, 3, 1, "", "__init__"], [327, 3, 1, "", "is_inventory"], [327, 3, 1, "", "validate_inventory"]], "brails.utils.model_utils": [[356, 2, 1, "", "ModelUtils"]], "brails.utils.model_utils.ModelUtils": [[356, 3, 1, "", "__init__"], [328, 3, 1, "", "get_model_path"]], "brails.utils.plot_tools": [[357, 2, 1, "", "PlotTools"]], "brails.utils.plot_tools.PlotTools": [[357, 3, 1, "", "__init__"], [329, 3, 1, "", "plot_images"], [329, 3, 1, "", "show_predictions"]], "brails.utils.rapid_utils": [[358, 2, 1, "", "RAPIDUtils"]], "brails.utils.rapid_utils.RAPIDUtils": [[358, 3, 1, "", "__init__"], [330, 3, 1, "", "extract_aerial_imagery"], [330, 3, 1, "", "get_mosaic_bbox_wgs84"]], "brails.utils.segmentation_utils": [[359, 2, 1, "", "SegmentationUtils"]], "brails.utils.segmentation_utils.SegmentationUtils": [[359, 3, 1, "", "__init__"], [331, 3, 1, "", "create_overlaid_image"], [331, 3, 1, "", "decode_segmap"]], "brails.utils.spatial_join_methods": [[333, 0, 0, "-", "base"], [334, 0, 0, "-", "distance_based_point_matcher"], [335, 0, 0, "-", "get_points_in_polygons"], [336, 0, 0, "-", "get_points_near_polygons"]], "brails.utils.spatial_join_methods.base": [[360, 2, 1, "", "SpatialJoinMethods"]], "brails.utils.spatial_join_methods.base.SpatialJoinMethods": [[360, 3, 1, "", "__init__"], [333, 3, 1, "", "execute"], [333, 3, 1, "", "join_inventories"]], "brails.utils.spatial_join_methods.distance_based_point_matcher": [[361, 2, 1, "", "DistanceBasedPointMatcher"]], "brails.utils.spatial_join_methods.distance_based_point_matcher.DistanceBasedPointMatcher": [[361, 3, 1, "", "__init__"]], "brails.utils.spatial_join_methods.get_points_in_polygons": [[362, 2, 1, "", "GetPointsInPolygons"]], "brails.utils.spatial_join_methods.get_points_in_polygons.GetPointsInPolygons": [[362, 3, 1, "", "__init__"], [362, 3, 1, "", "_join_implementation"]], "brails.utils.spatial_join_methods.get_points_near_polygons": [[363, 2, 1, "", "GetPointsNearPolygons"]], "brails.utils.spatial_join_methods.get_points_near_polygons.GetPointsNearPolygons": [[363, 3, 1, "", "__init__"], [363, 3, 1, "", "_join_implementation"]], "brails.utils.unit_converter": [[364, 2, 1, "", "UnitConverter"]], "brails.utils.unit_converter.UnitConverter": [[364, 3, 1, "", "__init__"], [337, 3, 1, "", "convert_area"], [337, 3, 1, "", "convert_length"], [337, 3, 1, "", "convert_unit"], [337, 3, 1, "", "convert_weight"], [337, 3, 1, "", "get_supported_units"], [337, 3, 1, "", "get_unit_type"], [337, 3, 1, "", "normalize_unit"], [337, 3, 1, "", "parse_units"], [337, 3, 1, "", "unit_valid"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "exception", "Python exception"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:exception", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:function"}, "terms": {"": [0, 1, 3, 4, 6, 22, 52, 61, 76, 79, 106, 128, 174, 189, 192, 205, 225, 228, 234, 251, 252, 258, 267, 269, 290, 298, 310, 314, 316, 317, 319, 321, 323, 324, 328, 330, 336, 337, 340, 363, 364], "0": [5, 6, 15, 19, 50, 61, 63, 65, 67, 69, 70, 72, 73, 75, 76, 79, 80, 82, 84, 93, 106, 108, 109, 111, 115, 117, 128, 129, 133, 134, 137, 143, 155, 156, 159, 174, 176, 178, 180, 182, 183, 185, 186, 188, 189, 192, 193, 195, 197, 205, 212, 214, 216, 218, 219, 221, 222, 224, 225, 228, 229, 231, 233, 234, 251, 256, 258, 263, 266, 267, 269, 271, 281, 290, 310, 311, 319, 323, 324, 326, 330], "00": [290, 310, 317, 323, 328, 330], "000": 234, "0001": [61, 69, 174, 182, 218, 234], "000z": 317, "001": [76, 93, 106, 109, 189, 225, 319], "0055": 319, "0058": 319, "006": 319, "0060": 319, "01": [5, 311, 330], "0142": 320, "02": [310, 311, 319, 323], "022": 6, "02409": 6, "03": [6, 136, 158, 311, 317], "031": 323, "04": [311, 328, 330], "0406417365415": 323, "0406430242604": 323, "0406440782071": 323, "0407349647641": 323, "0408091186429": 323, "0408560099184": 323, "04096427197": 323, "0409659050115": 323, "0409678617538": 323, "0409913987935": 323, "0409990828814": 323, "041": 323, "0410085657733": 323, "0410198786033": 323, "045": 6, "05": [79, 80, 106, 192, 193, 228, 229, 252, 311], "05072021484375": 6, "0522": [317, 324], "0589": 317, "06": [262, 311], "060014213001020": 6, "060014216002007": 6, "060014223003010": 6, "060014225001003": 6, "060014239021001": 6, "06001_34778": 6, "06001_548222": 6, "06001_559590": 6, "06001_730116": 6, "06001_813170": 6, "07": [133, 134, 155, 156, 310, 311, 323], "08": [93, 311, 317, 319], "09": [4, 311], "0bbb": 317, "1": [1, 2, 3, 4, 5, 6, 19, 22, 25, 27, 47, 50, 61, 72, 73, 74, 75, 76, 79, 80, 82, 84, 94, 100, 106, 108, 117, 122, 128, 133, 134, 137, 139, 142, 145, 155, 156, 159, 161, 174, 185, 186, 187, 188, 189, 192, 193, 195, 197, 202, 209, 221, 222, 223, 224, 225, 228, 229, 231, 233, 234, 236, 251, 252, 258, 266, 268, 269, 271, 276, 279, 281, 290, 302, 311, 316, 317, 319, 320, 323, 324, 326, 329, 330, 331, 337, 342, 344], "10": [1, 3, 5, 79, 82, 106, 108, 117, 129, 137, 159, 192, 195, 202, 205, 228, 231, 302, 311, 317, 319, 326, 331, 337, 342], "100": [3, 79, 86, 106, 150, 151, 192, 202, 205, 228, 234, 236, 241, 290, 317, 319, 323, 328, 330, 331, 337], "1000": [72, 73, 123, 124, 137, 145, 159, 185, 186, 221, 222, 276, 323, 337, 364], "1004": 6, "101": [123, 124, 144, 276], "102": 129, "1024": [122, 263, 265], "103": 267, "1034449096679": 6, "104": 50, "105": [50, 323], "106": 6, "10606032": 342, "1076": 337, "1080": 320, "10802": 5, "10b": 253, "11": [2, 129, 302, 311, 319, 323, 328, 337], "112": [129, 141], "1129": 1, "1146": 323, "116": 267, "118": [317, 323, 324], "1181": 4, "11it": 317, "12": [1, 6, 129, 263, 267, 311, 319, 320, 328], "120": 129, "122": [1, 4, 5, 6, 129, 311, 319, 321, 324, 326, 330], "12213443753": 320, "123": [267, 311, 319], "124": 319, "128": 144, "1282028": 323, "12908634292": 330, "12it": [290, 310], "13": [1, 5, 311], "1326": [1, 4], "133": 129, "13333": [1, 6], "1376": 323, "14": [5, 80, 141, 193, 229, 249, 311, 317, 323, 326], "140": 129, "1421632630": 330, "143": 129, "14492": [321, 350], "148": 5, "1494": [1, 4], "15": [1, 129, 311, 319, 323], "150": [122, 129], "152": [144, 276, 323], "153": 129, "153727272727274": 323, "1539": 6, "1554": [1, 4], "15774": [321, 350], "1592": 6, "16": [141, 145, 236, 249, 263, 311], "160": 129, "16019d7e3df5f24257cddd939b257f8d": [150, 151], "160262": 6, "1621843": [7, 8, 340], "163": 129, "163881": 317, "165": 6, "1675": 1, "168116": 317, "1681703": 317, "1681829": 317, "1682373": 317, "17": [1, 4, 311], "170": 129, "173": 129, "17479": 6, "1773": 6, "1784": 5, "179966": 6, "18": [123, 144, 276, 311], "180": 129, "184": 129, "1866": [1, 6], "189018": 6, "19": [1, 5, 311], "190": 129, "1920": 320, "1939": 6, "194": 129, "194753": 6, "195": 6, "1954": 6, "1960": 284, "1975": [5, 284], "19786631e330df9f3622e5402b4a419a263a2c80": 263, "1985": 284, "1989": 6, "1992": 6, "1995": 284, "1e": [61, 79, 80, 82, 93, 106, 108, 174, 192, 193, 195, 228, 229, 231, 234, 252, 262], "1swb": 6, "1x": 266, "1x3xhxw": 269, "1xcxhxw": 269, "1xhxw": 269, "2": [1, 2, 3, 4, 5, 6, 7, 8, 50, 70, 73, 76, 94, 117, 122, 133, 134, 137, 138, 145, 155, 156, 159, 160, 183, 186, 189, 202, 205, 209, 219, 222, 225, 236, 268, 271, 273, 290, 302, 311, 316, 317, 319, 320, 323, 324, 326, 329, 330, 331, 337, 342, 344], "20": [2, 4, 79, 106, 129, 192, 202, 228, 271, 311, 317, 319, 323], "200": [1, 4, 6, 129, 254, 319], "2000": [317, 337, 364], "2003": [137, 159], "20049": 317, "2005": 284, "2008": 323, "2013": [136, 158], "2015": 284, "2017": 344, "2020": 342, "2022": 317, "2023": 311, "2024": [5, 310, 311, 342], "2025": [6, 311, 317, 319, 344], "204": 129, "2048": [122, 268], "20it": 317, "21": [1, 2, 4, 311, 323], "2109": 323, "212": 129, "2131111": [7, 8, 340], "214": 129, "22": [6, 310, 311, 317, 319, 323], "220": 129, "2204": 337, "22253183411836": 317, "224": [67, 84, 129, 180, 197, 216, 233, 252], "2240": [337, 364], "225": [67, 84, 180, 197, 216, 233], "22733": [321, 350], "229": [67, 84, 180, 197, 216, 233], "22it": 317, "23": [2, 4, 311], "230": 129, "23236": 4, "2341": 6, "2341962": 321, "235": 129, "236440": 5, "239": 6, "24": [1, 4, 5, 6, 323], "24068": 4, "243": 323, "243226233836": 323, "24332934719": 323, "243413068638": 323, "243415138653": 323, "243416898264": 323, "243492197701": 323, "2434982541": 323, "243501803082": 323, "243502997061": 323, "243522111045": 323, "243533076239": 323, "243541516086": 323, "243682323766": 323, "2437": [317, 324], "244": 323, "245": 129, "249638045616": [1, 4], "249704555083": [1, 4], "249751291732": [1, 4], "249817801199": [1, 4], "25": [4, 61, 129, 174, 234, 256, 311, 321, 324, 331], "250": 129, "2500": 337, "251349037992": [1, 4], "251381955857": [1, 4], "251516845084": [1, 4], "251549765644": [1, 4], "2534638": 6, "2534705": 6, "2534913": 6, "253494": 6, "2535403": 6, "253547": 6, "2535494": 6, "2535939": 6, "2535946": 6, "2535993": 6, "2536127": 6, "2538454": [1, 6], "2538636": [1, 6], "2538841": [1, 6], "2539358": [1, 6], "2539784": [1, 6], "2540264": [1, 6], "2540337": [1, 6], "2540379": [1, 6], "255": [129, 269], "256": [122, 263, 264, 265, 267, 269], "2576": 323, "2582": 5, "25t00": 317, "26": [311, 323, 324], "260463864989": 4, "260480216124": 4, "260597977173": 4, "260614329206": 4, "262559": 6, "2625592": 6, "2654134": 6, "2654248": 6, "2654737": 6, "2654851": 6, "2669": 5, "27": [1, 323], "27000": 6, "2743469": [1, 6], "2743673": [1, 6], "2743867": [1, 6], "2743897": [1, 6], "2743974": 6, "2744387": [1, 6], "2744416": [1, 6], "2744612": [1, 6], "2744816": [1, 6], "27705": 6, "278": 5, "27968": [321, 350], "2799116": 6, "279912": 6, "28": [141, 267, 316, 324], "28236720333845": 1, "2823711059354": 1, "28253856754118": 1, "28253945956331": 1, "28259568844234": 1, "28259869901714": 1, "2831763030742": 1, "2831818391027": 1, "2832593562512": 1, "2832648922797": 1, "2833528": 321, "284": 317, "28404": [1, 4], "286804056442": 4, "286829349408": 4, "286942660203": 4, "286967954066": 4, "29": [6, 317], "292": 323, "2927717": 6, "292788": 6, "2928486": 6, "2928649": 6, "29469": 1, "295": 323, "2973": [1, 6], "2989": [1, 6], "299": 323, "2d": [73, 79, 106, 186, 192, 222, 228, 271, 331], "2snb": 6, "2swb": 6, "2x3": 329, "3": [1, 2, 3, 5, 6, 15, 61, 72, 73, 76, 94, 117, 122, 129, 145, 174, 185, 186, 189, 209, 221, 222, 225, 234, 252, 254, 256, 263, 264, 265, 302, 317, 319, 321, 323, 324, 326, 329, 330, 331, 337], "30": [137, 159, 311, 319, 321, 331, 350], "300": 200, "3013": 317, "306": 6, "31": 129, "32": [124, 145, 202, 249, 258, 337], "320524": 6, "322763": 5, "3249": 5, "324kb": 328, "325kb": 328, "32k": 253, "33": 317, "334": 323, "336px": 249, "3389": 342, "33931": 317, "339it": 310, "34": [144, 276, 317, 323, 324], "341": 5, "3413333333333333": 258, "341454545454546": 323, "347": 324, "35": [79, 106, 192, 228, 256], "350": 6, "3522": 319, "352it": 317, "35547": [1, 6], "359933": 6, "36": 320, "360": [137, 159], "3601": 317, "36181": 310, "3686918": 321, "37": [1, 4, 5, 6, 311, 319, 321, 323, 324, 326], "375": [256, 267], "3753899307251": 6, "378037": 6, "379": 316, "37it": 323, "38": [319, 323, 326], "3824": 323, "384": 202, "385248": 323, "3882821": 317, "3882857": 317, "3883895": 317, "3883931": 317, "389506": 6, "39": [50, 310, 317, 319, 326, 337], "39104": 337, "392": 6, "395": [267, 319], "397": 330, "3d": [79, 106, 192, 228], "3dep": [0, 317], "3x3": 122, "3xhxw": 267, "4": [1, 2, 3, 4, 5, 6, 61, 70, 73, 94, 117, 129, 145, 174, 183, 186, 219, 222, 234, 252, 263, 269, 302, 310, 317, 319, 324, 326, 329, 337], "40": [2, 50, 311, 317, 319, 323], "406": [67, 84, 180, 197, 216, 233], "4071135": 317, "4071579": 317, "4071755": 317, "40722": 317, "4094": 319, "4096": 122, "4097": 317, "41": [129, 290], "4144": 319, "4180": 319, "4184": 317, "4190": 319, "41919999999999": 319, "4194": [319, 324], "419571": 5, "4196": 319, "42": [5, 317, 319, 329], "42452141999999": 5, "425334": 5, "4255108090909": 5, "42639508666667": 5, "42705018181817": 5, "42it": 317, "43": 319, "4326": [302, 324, 330], "435": 6, "43521675714284": 5, "44": [317, 319], "4411": 5, "45": [79, 106, 192, 228, 317], "456": [67, 84, 180, 197, 216, 233, 319], "457": 319, "46": 323, "463": 316, "4654": 5, "47": [319, 330], "473584913": 6, "474705763": 6, "474740175": 6, "475206003": 6, "475445345": 6, "479": 6, "48": [6, 319], "480": 320, "485": [67, 84, 180, 197, 216, 233], "487907837328": 323, "49": 319, "499": 323, "49it": 310, "4d": [79, 106, 192, 228], "4o": [207, 243], "4th": 5, "5": [6, 19, 50, 73, 75, 79, 82, 94, 106, 108, 117, 129, 133, 134, 155, 156, 186, 188, 192, 195, 202, 222, 224, 228, 231, 279, 290, 302, 311, 317, 319, 324, 326, 329, 331, 337], "50": [6, 19, 123, 129, 144, 202, 236, 276, 319, 331], "500": 19, "5000": 317, "503": 330, "51": 129, "512": [67, 84, 122, 180, 197, 216, 233, 337], "513": 323, "5147028043": 323, "51939999999999": 319, "520953": 319, "5280": 324, "5281": 342, "52999999999999": 290, "53": 267, "5302": 290, "534": 290, "5340": 290, "53420000000001": 290, "538": 316, "545": 323, "55": 4, "5500426357848": 317, "558706": 342, "56": [4, 141, 317], "56645584106445": 6, "57": [267, 317], "57it": 317, "58": 267, "59": 6, "5912666815452": 317, "5d": [79, 106, 192, 228], "5k": 253, "5th": 326, "6": [1, 4, 6, 22, 27, 47, 52, 73, 117, 122, 129, 143, 145, 186, 222, 302, 311, 319, 329, 337, 342], "600": 348, "60it": 323, "61": 129, "62": 337, "625": 6, "635": 6, "638": 323, "64": [202, 252, 258, 266, 269, 276], "640": 320, "6506": 6, "65364074707031": 6, "66": 317, "660999999999994": 290, "661": 323, "6611": 290, "6625": 290, "662600000000005": 290, "6666": [1, 4], "6679": 320, "67": 323, "6749": 319, "675": 267, "68": 317, "68756": 317, "69423131358": 330, "69it": 317, "7": [4, 50, 73, 117, 129, 186, 222, 258, 302, 317, 330], "70": 129, "70804716657": 330, "71": [129, 317, 323], "7128": 319, "712900000000005": 319, "713": 316, "7130": 319, "71405070861817": 6, "72": 6, "7271554": 328, "73": [311, 319], "73061": 319, "730610": 319, "739": 6, "74": [311, 319, 326], "75": [319, 320, 326, 331], "755": 319, "75d8d6da9513": 317, "76": [4, 319, 323, 326], "768": 263, "77": [251, 319, 323, 328], "7748": 319, "7749": [319, 324], "774950000000004": 319, "7750": 319, "7755": 319, "779": 323, "7799": 319, "78": 319, "7849": 319, "789": 319, "79": 319, "790": 319, "7977": 317, "79it": 330, "7nspwemp38bskcji": 323, "8": [2, 3, 50, 73, 86, 117, 122, 129, 141, 186, 222, 236, 241, 251, 253, 256, 263, 302, 310, 311, 317, 319], "80": [63, 129, 176, 212], "800": 348, "8084": 337, "81": [316, 323, 337], "81000": 6, "8128": 319, "82": [5, 129], "8288": 317, "8356877": 321, "849vvp4w": 6, "849vvpcg": 6, "849vvphp": 6, "849vvpjw": 6, "849vvpvc": 6, "85": [321, 324], "8512103598022": 6, "8517353439222": [1, 4], "8518000117672": [1, 4], "8518085710136": [1, 4], "8518732380851": [1, 4], "8549859": 6, "854993": 6, "8550463": 6, "8550534": 6, "8564399": 6, "8564404": 6, "856443": 6, "8564531": 6, "8564711": 6, "856479": 6, "85648153": 6, "8564912": 6, "8565177": 6, "8565272": 6, "8565277": 6, "8566": 319, "8599": 5, "85it": 323, "86": [323, 324], "863126736093584": 1, "86313236995723": 1, "86314179854076": 1, "86314364715192": 1, "86319887333546": 1, "86320635580323": 1, "86590688571429": 5, "86730380000001": 5, "8673577272146": 1, "86735994820125": 1, "86748674209271": 1, "86748896307548": 1, "869326593333334": 5, "86981550909091": 5, "87": 324, "870170718181825": 5, "8720097": [1, 6], "8720143": [1, 6], "8720287": [1, 6], "8720305": [1, 6], "8720353": [1, 6], "8720391": [1, 6], "872097621": 6, "8721725": [1, 6], "8721826": [1, 6], "8762541": 6, "8762696": 6, "8763047": 6, "8763201": 6, "8783233546667": 4, "8783452637543": 4, "8783862371837": 4, "8784081469617": 4, "879116732": 6, "879117": 6, "8794214649434": 4, "8794505676668": 4, "8794971468902": 4, "8795262510017": 4, "88": 258, "8821623": [1, 6], "8821659": [1, 6], "882245": [1, 6], "8822459": [1, 6], "882252355": 6, "8822577": [1, 6], "882258": [1, 6], "8823667": [1, 6], "8823889": [1, 6], "886": 6, "89": 323, "8918428029327": [1, 4], "8918864620566": [1, 4], "8919222669851": [1, 4], "891965925353": [1, 4], "894081": 6, "894081399": 6, "9": [50, 73, 93, 117, 129, 186, 222, 302, 311, 321, 324], "9004509815979": 6, "906": 319, "9066896": 321, "908": 323, "91": [290, 323], "910": 323, "92": [129, 323], "925": 4, "93": [321, 350], "933": 323, "935242": 319, "9361": 6, "93944549560547": 6, "93it": 323, "94": [317, 323], "940": 323, "943": 6, "95": [258, 317], "958384": 6, "96161651611328": 6, "966": 323, "9665": 323, "97": [319, 323], "992": 323, "9926392": 317, "9926423": 317, "992804": 317, "9928071": 317, "998": 5, "999": 93, "9999": 290, "99it": 310, "9m": 328, "A": [0, 3, 19, 22, 25, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 56, 61, 72, 80, 81, 88, 90, 93, 94, 107, 131, 171, 174, 185, 193, 194, 202, 205, 209, 221, 229, 230, 234, 241, 245, 247, 249, 251, 252, 258, 267, 269, 271, 279, 284, 290, 291, 293, 295, 298, 300, 302, 304, 306, 308, 310, 311, 313, 317, 319, 320, 321, 323, 324, 325, 326, 327, 329, 331, 333, 334, 335, 336, 337, 339, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 361, 362, 363, 364], "AND": 344, "AS": 344, "And": 253, "As": [1, 6], "BE": 344, "BUT": 344, "BY": 344, "Be": [94, 326], "But": 0, "By": 4, "FOR": 344, "For": [4, 5, 6, 11, 19, 56, 79, 81, 106, 107, 192, 194, 228, 230, 269, 271, 317, 336, 339, 350, 363], "IF": 344, "IN": 344, "If": [2, 19, 50, 61, 73, 88, 90, 117, 121, 123, 124, 131, 133, 134, 144, 155, 156, 174, 186, 202, 205, 222, 234, 236, 247, 249, 258, 267, 269, 276, 284, 290, 293, 295, 300, 302, 304, 311, 313, 317, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 333, 337, 350, 351, 358], "In": [5, 6, 326], "It": [5, 7, 8, 50, 61, 73, 86, 88, 90, 131, 133, 134, 155, 156, 171, 174, 186, 205, 222, 234, 249, 272, 284, 291, 295, 298, 306, 308, 317, 319, 323, 325, 326, 329, 351, 353, 354, 357], "NO": [6, 344], "NOT": [320, 344], "No": [7, 8, 290, 310, 317, 340], "Not": [247, 326], "OF": [290, 344], "ON": 344, "OR": 344, "One": 29, "Or": [311, 321, 350], "SUCH": 344, "THE": 344, "TO": 344, "That": 5, "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 15, 19, 22, 25, 27, 46, 47, 48, 50, 56, 59, 61, 70, 73, 74, 79, 81, 82, 88, 90, 94, 106, 107, 108, 131, 133, 134, 155, 156, 171, 174, 183, 186, 187, 192, 194, 195, 202, 203, 205, 207, 219, 222, 223, 228, 230, 231, 234, 236, 241, 243, 249, 251, 252, 253, 258, 267, 269, 271, 274, 279, 284, 288, 290, 291, 293, 298, 300, 302, 304, 306, 308, 310, 313, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 329, 330, 331, 333, 336, 337, 339, 344, 346, 348, 349, 350, 351, 352, 353, 355, 357, 363, 364], "Then": [3, 319], "There": [2, 5, 6, 73, 133, 134, 155, 156, 186, 222, 252], "These": [0, 5, 73, 186, 222, 269], "To": [1, 2, 3, 4, 25, 50, 59, 203, 207, 234, 236, 243, 253, 290, 311, 319, 320, 321, 323, 324, 326, 328, 329, 342, 346, 347, 348, 350, 351, 352, 354, 356, 357], "WITH": 6, "Will": 331, "With": [5, 79, 106, 192, 228], "_": [6, 50, 290, 310, 316, 317, 319], "__data_parallel_replicate__": [82, 108, 195, 231], "__getitem__": [115, 205, 279], "__init__": [137, 159, 174, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364], "__iter__": 117, "__len__": [115, 117, 205, 279], "__main__": [1, 2, 3, 4, 6], "__name__": [1, 2, 3, 4, 6], "_comment": 4, "_join_implement": [334, 335, 336, 361, 362, 363], "_slavepipebas": [81, 107, 194, 230], "_synchronizedbatchnorm": [79, 81, 106, 107, 192, 194, 228, 230], "a1": 50, "a101": 319, "a123": 319, "a2": 50, "a3": 50, "a4": 50, "abc": [4, 13, 17, 48, 203, 238, 239, 288, 291, 296, 311, 326, 333], "about": [1, 7, 8, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 65, 178, 214, 319, 320, 323, 351], "abov": [0, 5, 72, 185, 221, 344], "absolut": 328, "abstract": [4, 13, 15, 17, 48, 81, 107, 115, 194, 203, 230, 238, 239, 288, 291, 296, 325, 333, 345, 353, 360], "acceler": [79, 106, 192, 228], "accept": [73, 133, 134, 155, 156, 186, 222, 319, 351], "access": [0, 2, 291, 311, 316, 317, 324, 325, 353], "accident": 3, "accompani": [1, 6], "accord": [263, 321, 350], "accur": [0, 61, 174, 234, 317], "accuraci": [1, 3, 128, 202, 249, 317, 337, 364], "acgtyr": [80, 193, 229], "acknowledg": [7, 8], "across": [1, 79, 106, 192, 228, 234, 317, 319, 323, 325, 337, 351, 353, 364], "act": 262, "act_lay": 263, "action": 0, "activ": [1, 69, 182, 218, 262, 263, 264, 265, 266, 268], "actual": 330, "ad": [48, 79, 106, 192, 228, 263, 288, 290, 317, 319, 320], "adam": 342, "adamw": [61, 76, 93, 174, 189, 225, 234], "adapt": [70, 183, 219], "add": [4, 22, 25, 27, 47, 48, 50, 56, 82, 108, 128, 137, 159, 195, 231, 268, 319, 320, 347], "add_argu": [1, 2, 3, 4, 6], "add_asset": [50, 290, 316, 319], "add_asset_coordin": 319, "add_asset_featur": 319, "add_asset_features_from_csv": 319, "add_decomposed_rel_po": 263, "add_default": 40, "add_featur": [302, 319], "add_features_to_asset": 22, "add_imag": 320, "add_model_predict": 319, "addgaussiannois": [137, 159], "addgaussianpoissonnois": [137, 159], "addit": [4, 22, 25, 27, 47, 48, 56, 284, 288, 302, 311, 313, 319, 346], "addition": [52, 302, 319], "additional_featur": 319, "additional_properti": 320, "address": 2, "addspecklenois": [137, 159], "ade20k": 129, "adjust": [52, 329], "advanc": 267, "advis": 344, "advprop": [72, 73, 185, 186, 221, 222], "aerial": [0, 1, 2, 241, 245, 330], "aerial_from_rast": 0, "aerial_im": 2, "affin": [79, 82, 106, 108, 192, 195, 228, 231], "after": [79, 81, 82, 88, 107, 108, 192, 194, 195, 202, 228, 230, 231, 263, 268, 319, 323, 351], "afterward": [63, 68, 69, 70, 73, 74, 76, 80, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 193, 212, 217, 218, 219, 222, 223, 225, 229, 252, 262, 263, 264, 265, 268, 272, 276, 281], "again": [117, 319, 339], "against": [202, 316], "agg": 254, "agg_method": 254, "aggreg": 317, "aggregate_predict": 254, "agment": 19, "ahead": [82, 108, 195, 231], "ahsan": 342, "aid": 330, "aim": 46, "ain": 323, "alameda": [4, 310, 321], "algorithm": [0, 3, 7, 8], "alia": [73, 136, 158, 186, 222, 337, 364], "alias": [252, 337], "alias_multinomi": [132, 154], "aliasmethod": [136, 158], "all": [1, 4, 5, 63, 65, 68, 69, 70, 73, 74, 76, 79, 80, 81, 82, 84, 106, 107, 108, 115, 117, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 178, 181, 182, 183, 186, 187, 189, 192, 193, 194, 195, 197, 212, 214, 217, 218, 219, 222, 223, 225, 228, 229, 230, 231, 233, 251, 252, 262, 263, 264, 265, 268, 271, 272, 276, 281, 290, 311, 317, 319, 323, 325, 326, 329, 337, 344, 353, 354, 364], "allow": [4, 6, 86, 90, 268, 269, 313, 320, 323, 330, 332, 337, 351], "allow_mh_only_for_res2": 52, "along": [115, 324, 329], "alongsid": [329, 357], "alpha": [137, 159, 311, 331], "alreadi": [267, 269, 320, 328], "also": [1, 6, 61, 73, 79, 80, 86, 106, 133, 134, 155, 156, 171, 174, 186, 192, 193, 222, 228, 229, 234, 272, 310, 319, 326, 354], "although": [63, 68, 69, 70, 73, 74, 76, 80, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 193, 212, 217, 218, 219, 222, 223, 225, 229, 252, 262, 263, 264, 265, 268, 272, 276, 281], "alwai": [1, 117], "ambigu": [269, 319], "amg": 270, "among": [5, 82, 108, 195, 231], "an": [1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 15, 17, 19, 48, 50, 61, 72, 73, 79, 81, 82, 88, 90, 106, 107, 108, 115, 117, 131, 133, 134, 137, 155, 156, 159, 174, 185, 186, 192, 194, 195, 202, 203, 205, 221, 222, 228, 230, 231, 234, 236, 247, 249, 251, 252, 256, 258, 268, 269, 271, 279, 284, 290, 291, 293, 295, 296, 298, 300, 302, 304, 306, 308, 310, 311, 313, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 333, 337, 339, 342, 345, 346, 347, 348, 349, 351, 354], "anaconda3": [137, 159], "analys": 5, "analysi": [0, 137, 159, 291, 302, 317, 322, 324, 332, 352], "analyz": [0, 1, 2, 6, 61, 174, 234], "anchor": [68, 70, 84, 181, 183, 197, 217, 219, 233], "anchor_box": [70, 183, 219], "anchor_config": [70, 183, 219], "anchor_scal": [70, 183, 219], "angel": [323, 324], "angl": [0, 88], "angle_rang": [137, 159], "ani": [0, 1, 2, 4, 5, 61, 73, 82, 90, 108, 133, 134, 155, 156, 174, 186, 195, 202, 222, 231, 234, 258, 268, 279, 291, 317, 319, 320, 323, 325, 326, 327, 329, 336, 339, 340, 344, 346, 348, 350, 363], "ann": [65, 178, 214], "annot": [65, 68, 76, 178, 181, 189, 214, 217, 225], "annotation_fil": [65, 178, 214], "anoth": [117, 319, 337], "ant": 202, "anti": 252, "api": [2, 3, 7, 8, 290, 295, 306, 308, 313, 322, 323, 339, 351], "api_endpoint": 323, "api_endpoint_url": [323, 351], "api_help": 323, "api_kei": [2, 3, 199, 200, 207, 243, 295], "api_key_dir": [2, 3], "api_key_path": 2, "api_tool": 323, "apidoc": [7, 8, 339], "apikei": [2, 3], "appdata": 4, "appeal": [322, 329, 357], "append": 11, "appli": [2, 3, 72, 79, 106, 131, 137, 159, 171, 185, 192, 202, 205, 221, 228, 266, 279, 319], "applic": [3, 4, 5, 7, 8, 11, 252, 302, 328, 330, 339, 342, 356], "apploc": [7, 8], "apply_box": 273, "apply_boxes_torch": 273, "apply_coord": 273, "apply_coords_torch": 273, "apply_imag": 273, "apply_image_torch": 273, "approach": [4, 321, 350], "approxim": 323, "ar": [0, 1, 2, 3, 5, 6, 7, 8, 50, 61, 73, 79, 82, 88, 90, 106, 108, 117, 128, 131, 133, 134, 155, 156, 174, 186, 192, 195, 202, 203, 205, 222, 228, 231, 234, 241, 247, 249, 252, 266, 267, 269, 279, 284, 288, 293, 302, 310, 311, 313, 317, 319, 320, 323, 324, 325, 326, 328, 329, 330, 332, 336, 337, 339, 340, 344, 350, 353, 354, 356, 363, 364], "ar_revert": 323, "ar_subtrv": 323, "arbitrari": [73, 133, 134, 155, 156, 186, 222], "arcgi": [322, 323, 351], "arcgisapi_service_help": [8, 322], "arcgisapiservicehelp": [8, 322, 323], "arcgisonlin": 323, "arch": 122, "architectur": [61, 174, 202, 205, 234, 249], "area": [0, 1, 4, 65, 171, 178, 214, 258, 290, 296, 302, 306, 308, 310, 313, 314, 317, 321, 322, 323, 324, 337, 364], "area_from_rl": 271, "area_thresh": 271, "arearng": [65, 178, 214], "arg": [1, 2, 3, 4, 6, 70, 73, 74, 133, 134, 150, 152, 155, 156, 183, 186, 187, 219, 222, 223, 252, 271, 274], "argpars": [1, 2, 3, 4, 6], "args__": [86, 174, 202, 209, 234, 241], "argument": [1, 2, 3, 4, 6, 73, 82, 108, 133, 134, 155, 156, 186, 195, 222, 231, 300, 304, 313, 324], "argumentpars": [1, 2, 3, 4, 6], "arial_process": 237, "arialprocess": 238, "aris": 344, "around": [84, 197, 233, 241, 253, 258, 271], "arr": 22, "arrai": [15, 65, 70, 94, 129, 137, 159, 178, 183, 203, 214, 219, 256, 258, 269, 273, 279, 331], "as_numpi": [109, 118], "as_vari": 118, "asce_hazard_data_scrap": 285, "aspect": [323, 329], "aspectaware_resize_pad": [84, 197, 233], "assembl": 115, "asserttensorclos": [83, 109, 196, 232], "assess": [0, 25, 46], "assessor": 4, "asset": [1, 2, 3, 4, 5, 6, 7, 8, 17, 19, 22, 25, 27, 46, 47, 48, 50, 56, 288, 290, 293, 295, 296, 300, 302, 304, 310, 316, 317, 319, 323, 330, 332, 333, 339, 347, 358], "asset1": [290, 316, 319], "asset2": [290, 316, 319], "asset3": 319, "asset_data_augment": 285, "asset_id": [50, 319, 346], "asset_inventori": [4, 5, 8, 50, 290, 316, 317, 318, 327, 330], "assetdataaugment": [288, 290, 316, 317], "assetinventori": [1, 2, 3, 4, 5, 6, 8, 17, 19, 22, 25, 27, 47, 48, 50, 56, 288, 290, 291, 293, 295, 296, 298, 300, 302, 304, 306, 308, 310, 313, 316, 317, 319, 322, 327, 330, 332, 333, 339, 355], "assetinvetori": 17, "assign": [50, 82, 108, 195, 231, 234, 279, 290, 316, 319], "associ": [2, 171, 298, 306, 308, 313, 317, 319, 320, 329, 334, 336, 348, 361, 363], "assum": [234, 302, 320, 323, 326, 330, 331, 351], "assumpt": [46, 323], "async_copy_to": 111, "atlant": 46, "atol": [109, 271], "atrribut": [306, 308], "attempt": [3, 59, 207, 236, 243, 245, 319], "attend": 268, "attent": [69, 182, 218, 252, 263, 268], "attention_downsample_r": 268, "attention_modul": 140, "attention_util": 91, "attentionmodule_pr": 141, "attentionmodule_stage0": 141, "attentionmodule_stage1": 141, "attentionmodule_stage1_cifar": 141, "attentionmodule_stage2": 141, "attentionmodule_stage2_cifar": 141, "attentionmodule_stage3": 141, "attentionmodule_stage3_cifar": 141, "attentionpool2d": 252, "attn": 263, "attn_mask": 252, "attribut": [0, 5, 22, 25, 27, 47, 52, 73, 88, 90, 133, 134, 150, 152, 155, 156, 186, 222, 249, 290, 291, 298, 302, 306, 308, 310, 313, 319, 323, 329, 334, 346, 351, 361], "attribute_nam": 329, "attributes_": 174, "attributes__": [202, 209, 241, 245], "attrmap": 314, "aug": [5, 254], "augment": [48, 67, 180, 202, 216, 288, 290, 317], "augmentfil": 4, "authent": 295, "author": [80, 193, 229, 340], "auto": 46, "auto_hu_nj": 28, "auto_popul": [27, 46], "autograd": [73, 79, 106, 133, 134, 155, 156, 186, 192, 222, 228], "autom": [0, 4, 90], "automat": [0, 1, 4, 73, 90, 133, 134, 155, 156, 186, 222, 330, 337, 351], "automatic_mask_gener": 257, "automl": [70, 183, 219], "avail": [0, 1, 2, 3, 4, 6, 46, 88, 94, 202, 205, 249, 251, 290, 311, 319, 321, 322, 323, 328, 329, 332, 343, 356], "available_featur": [27, 40], "available_model": 251, "averag": [128, 139, 161, 252, 317], "averagemet": [128, 139, 161], "avg_loss": 94, "avgjantemp": 47, "avgjantemp_kei": 47, "avgpool": 252, "avoid": [4, 94, 253, 310, 325, 326, 353], "awai": 5, "ax": [137, 159, 256, 329], "axi": [94, 137, 159, 263], "b": [6, 19, 22, 25, 27, 47, 56, 68, 109, 181, 217, 249, 263, 267, 268], "b0": [72, 185, 221], "b202": 319, "b590fbec": 317, "b7f7": 317, "b950": 263, "bacetin": [1, 2, 6, 129, 137, 159, 253, 310, 317, 330], "back": [81, 107, 194, 230, 310, 317], "backbon": [62, 175, 211], "background": 269, "backoff": [323, 351], "backward": [73, 133, 134, 155, 156, 186, 222], "balanc": [323, 351], "bar": [276, 323], "barbaro": 342, "barf": 253, "base": [4, 8, 11, 13, 15, 17, 19, 22, 25, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 50, 52, 56, 59, 61, 63, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 86, 88, 90, 93, 100, 106, 107, 108, 109, 111, 115, 117, 122, 123, 124, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 171, 174, 176, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 199, 202, 203, 205, 207, 209, 212, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 241, 243, 245, 247, 249, 252, 253, 256, 258, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 279, 281, 284, 288, 290, 291, 293, 295, 296, 298, 300, 302, 304, 306, 308, 310, 311, 313, 314, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 340, 345, 350, 351, 354, 359, 361, 362, 363, 364], "base_fold": [150, 151], "base_imag": 331, "basedataset": 100, "basegeometri": [321, 324], "baselin": 0, "basement": [27, 302], "basement_kei": 27, "basementtyp": 27, "basementtype_kei": 27, "basi": [4, 6], "basic": [1, 4, 5, 6, 271, 319], "basic_clean": 253, "basic_lay": 140, "basicconv": 281, "batch": [19, 79, 80, 86, 90, 106, 111, 117, 192, 193, 202, 205, 228, 229, 236, 241, 249, 264, 265, 267, 269, 271, 273, 310, 317], "batch_idx": 254, "batch_iter": 271, "batch_norm_epsilon": [73, 186, 222], "batch_norm_momentum": [73, 186, 222], "batch_per_gpu": 100, "batch_siz": [19, 76, 79, 86, 106, 117, 189, 192, 202, 205, 225, 228, 236, 241, 249, 254, 271], "batched_input": 267, "batched_mask_to_box": 271, "batchnorm": [78, 80, 105, 191, 193, 227, 229], "batchnorm1d": [79, 106, 192, 228], "batchnorm2d": [79, 106, 192, 228], "batchnorm2dreimpl": [80, 193, 229], "batchnorm3d": [79, 106, 192, 228], "batchnorm_reimpl": [78, 191, 227], "batchsampl": 117, "batchsiz": [70, 183, 219], "bbox": [258, 311], "bbox2poli": 324, "bbox_wgs84": 330, "bboxtransform": [70, 183, 219], "beach": 317, "becaus": [4, 79, 106, 192, 228], "bee": 202, "been": [269, 271, 339], "befor": [3, 90, 202, 205, 247, 263, 267, 269, 317], "begin": 0, "behav": [79, 106, 192, 228], "behavior": 4, "being": [6, 61, 82, 108, 174, 195, 203, 231, 234, 253, 310, 317, 323, 326, 329, 339], "belong": 337, "below": [0, 1, 2, 3, 5, 320, 323, 325, 342, 349, 353], "benefit": 4, "berkelei": [1, 3, 4, 6, 310, 321, 350], "berkeley_build": 310, "best": [131, 137, 159, 269], "beta": [79, 93, 106, 192, 228, 311], "better": [1, 5, 6, 269], "between": [1, 72, 185, 221, 253, 271, 302, 319, 322, 324, 332, 333, 335, 337, 362, 364], "beyond": 326, "bfe_revert": 323, "bgr": 269, "bia": [73, 74, 186, 187, 222, 223, 252, 281], "bid": 6, "bifpn": [69, 182, 218], "bilinear": 100, "bilinearres": [137, 159], "bim": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45], "bim_ap": 40, "bim_in": 40, "binari": [131, 205, 267, 269, 271, 329, 344], "binary_mask": 258, "black": 324, "bld_id": 323, "bldg_class": 29, "bldg_geom_subset": 19, "bldg_geometries_df": 19, "bldg_impu_subset": 19, "bldg_inde_subset": 19, "bldg_prel_subset": 19, "bldg_properties_df": 19, "bldg_properties_encod": 19, "bldgtype": 6, "bleed": 343, "blend": 331, "blob": [0, 70, 183, 219, 263], "block": [72, 73, 123, 124, 144, 185, 186, 221, 222, 263, 276, 317], "block_arg": [72, 185, 221], "blockarg": [72, 73, 185, 186, 221, 222], "blockdecod": [73, 186, 222], "blocks_arg": [72, 73, 185, 186, 221, 222], "blog": [136, 158], "blue": 324, "blur": [137, 159], "bn": [122, 281], "bool": [61, 72, 86, 117, 121, 123, 124, 131, 144, 171, 174, 185, 202, 205, 221, 234, 236, 241, 251, 264, 265, 267, 269, 276, 279, 284, 311, 317, 319, 320, 323, 326, 327, 328, 329, 330, 337], "boolean": [65, 73, 79, 106, 133, 134, 155, 156, 178, 186, 192, 214, 222, 228, 319, 326], "boolean_str": [76, 189, 225], "both": [0, 2, 4, 90, 115, 205, 234, 266, 273, 306, 308, 329, 342, 357], "bottleneck": [72, 185, 221, 252], "bottom": 329, "bound": [0, 290, 302, 306, 308, 311, 313, 314, 319, 321, 323, 324, 330, 350, 351], "boundari": [1, 291, 298, 300, 302, 304, 306, 310, 313, 317, 319, 321, 323, 324, 350], "boundaryregion": 1, "boundingbox": [4, 256], "box": [15, 70, 183, 219, 256, 258, 264, 265, 266, 267, 269, 271, 273, 290, 302, 306, 311, 314, 319, 321, 323, 324, 326, 330, 351], "box_nms_thresh": 258, "box_threshold": 256, "box_xyxi": 271, "box_xyxy_to_xywh": 271, "bpe": 253, "bpe_path": 253, "bpe_simple_vocab_16e6": 253, "bpoli": [323, 324], "bpoly_long": 324, "brail": [0, 1, 2, 3, 4, 5, 6, 7, 8, 339, 340, 341, 342, 343, 344], "brails2r2dmap": 302, "brails_download_imag": 2, "brails_eq_building_inventory_cr": 0, "brails_filt": 3, "brails_footprint": 1, "brails_footprint_name_input": 0, "brails_hu_building_inventory_cr": 0, "brails_imagery_pipelin": 0, "brails_nsi": 6, "brails_nsi_integr": 0, "brails_power_network": 0, "brails_vers": 319, "brailserror": [11, 325, 353], "brailsplusplu": [0, 129, 253, 343], "bridg": [300, 319, 323], "broader": 317, "bsd": [1, 2, 4, 5, 6, 7, 8, 344], "buffer": 319, "buid": 46, "buidl": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45], "build": [0, 2, 3, 4, 5, 6, 7, 8, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 59, 61, 73, 88, 90, 131, 171, 174, 186, 209, 222, 234, 236, 247, 284, 291, 293, 295, 298, 302, 306, 310, 313, 317, 319, 320, 323, 330, 339], "build_all_layer_point_grid": 271, "build_attention_mask": 252, "build_decod": 122, "build_encod": 122, "build_model": [252, 256], "build_point_grid": 271, "build_sam": 257, "build_sam_hq": 257, "build_sam_hq_vit_b": 260, "build_sam_hq_vit_h": 260, "build_sam_hq_vit_l": 260, "build_sam_vit_b": 259, "build_sam_vit_h": 259, "build_sam_vit_l": 259, "building1": 319, "building2": 319, "building_class": 29, "building_footprint": 323, "building_front": 320, "building_material_llm": 57, "building_part": 310, "buildingclassruleset": 28, "buildingheight": [1, 4, 6, 88], "buildinginventori": 4, "buildingmaterialllm": 59, "buildingtyp": 47, "buildingtype_kei": 47, "built": [0, 11, 15, 73, 79, 106, 186, 192, 222, 228, 256, 279, 284, 313, 339, 342], "bundl": 234, "busi": 344, "bx": 266, "bx1xhxw": [267, 269], "bx4": [267, 269, 273], "bxc": [267, 269], "bxcxhxw": [267, 269, 273], "bxn": [267, 269], "bxnx": 266, "bxnx2": [267, 269], "byte": [253, 319], "bytearrai": 319, "bytes_to_unicod": 253, "c": [6, 79, 106, 137, 150, 151, 159, 192, 228, 263, 267, 269, 344], "c1": 122, "c1deepsup": 122, "c1xc2x": 271, "c4e855863085": 317, "ca": [1, 2, 3, 4, 6, 310, 321, 323, 324, 350], "cach": [90, 251], "calc_iou": [68, 181, 217], "calc_perf": 279, "calcul": [73, 79, 90, 94, 106, 186, 192, 222, 228, 263, 269, 271, 279, 310, 319, 324, 352], "calculate_all_dist": 165, "calculate_stability_scor": 271, "california": [4, 310, 321, 323, 344], "call": [63, 68, 69, 70, 72, 73, 74, 76, 79, 80, 81, 82, 106, 107, 108, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 185, 186, 187, 189, 192, 193, 194, 195, 203, 212, 217, 218, 219, 221, 222, 223, 225, 228, 229, 230, 231, 247, 249, 252, 262, 263, 264, 265, 267, 268, 272, 276, 281, 317, 319, 351], "callabl": [93, 171, 251, 323], "callback": [81, 82, 107, 108, 194, 195, 230, 231], "callbackcontext": [82, 108, 195, 231], "caller": [13, 15, 296], "cam_elev": [88, 320], "camelev": 88, "camera": [88, 295, 320, 348], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 73, 81, 82, 86, 107, 108, 131, 133, 134, 137, 155, 156, 159, 171, 186, 194, 195, 222, 230, 231, 234, 251, 267, 269, 284, 310, 317, 319, 320, 321, 323, 325, 326, 327, 339, 343, 349, 350, 351, 353, 355], "cannot": [117, 325, 326], "capabl": [0, 1], "captur": 0, "care": [63, 68, 69, 70, 73, 74, 76, 80, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 193, 212, 217, 218, 219, 222, 223, 225, 229, 252, 262, 263, 264, 265, 268, 272, 276, 281], "case": [4, 11, 79, 106, 137, 159, 192, 228, 251, 337, 364], "cat": [65, 178, 214, 271, 348], "categor": [323, 329, 351], "categori": [50, 337, 364], "categorize_and_split_cel": 323, "category_in_df_to_indic": 19, "catid": [65, 178, 214], "catnm": [65, 178, 214], "caus": 344, "cbfip": 6, "cecb": 30, "cecb_config": 30, "cell": [4, 290, 300, 304, 313, 323, 324, 351], "cells_to_keep": 323, "cells_to_split": 323, "censu": 323, "center": [3, 137, 159, 339], "center_crop": [137, 159], "center_crop_s": [137, 159], "centercrop": [137, 159], "centercropnumpi": [137, 159], "centermost": 234, "centimet": [337, 364], "centimetr": [337, 364], "centroid": [291, 316, 317, 319, 324, 336, 363], "centroid_elev": 317, "cerb": 31, "cerb_config": 31, "certain": [5, 339], "cetin": 342, "chang": [3, 252, 319], "change_feature_nam": 319, "channel": [137, 159], "charact": 253, "characterist": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 302], "charl": 342, "check": [61, 174, 234, 324, 326, 327, 328, 337, 354, 355], "check_kei": [22, 25], "checkpoint": [131, 251, 259, 260, 284], "checkpoints_dir": [131, 284], "child": [79, 192, 228], "chimnei": [0, 61], "chimney_detector": [0, 57], "chimneydetector": 61, "choos": [73, 186, 222], "chosen": [3, 350], "cifar": [146, 150], "cifar10": [150, 151], "cifar100inst": [150, 151], "cifar10inst": [150, 151], "cite": [7, 8], "citi": 27, "city_kei": 27, "class": [1, 4, 6, 11, 13, 15, 17, 19, 22, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 50, 52, 56, 59, 61, 63, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 86, 88, 90, 93, 94, 100, 106, 107, 108, 109, 111, 115, 117, 122, 123, 124, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 171, 174, 176, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 199, 202, 203, 205, 207, 209, 212, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 241, 243, 245, 247, 249, 252, 253, 256, 258, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 279, 280, 281, 284, 288, 290, 291, 293, 295, 296, 298, 300, 302, 304, 306, 308, 310, 311, 313, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364], "class_nam": 325, "class_num": 145, "class_obj": 325, "class_to_cod": 256, "class_weight": 279, "classes_list": [75, 76, 188, 189, 224, 225], "classes_num": 281, "classif": [0, 68, 84, 86, 131, 181, 197, 202, 205, 209, 217, 233, 236, 241, 247, 249, 290, 328, 329, 357], "classifi": [0, 59, 69, 84, 86, 131, 171, 182, 197, 202, 207, 209, 218, 233, 236, 241, 243, 245, 247, 249, 279, 284], "classmethod": [15, 72, 185, 221, 256, 333], "classtyp": [4, 325], "claus": 344, "clean": [3, 337], "clean_featur": [25, 27, 47], "clean_float": 319, "cleaner": 329, "cleanli": 319, "clear": [327, 355], "click": 269, "clip": [0, 209, 245, 247, 248, 249], "clipbox": [70, 84, 183, 197, 219, 233], "clipclassifi": [59, 209, 245, 247, 248], "close": 326, "closest": [324, 336, 363], "closur": 93, "cloud": 342, "cluster": 19, "cm": [337, 364], "cm2": [337, 364], "coars": 50, "coarse_land_cov": 50, "coarser": 50, "coco": [64, 177, 213], "coco_dir": [67, 76, 180, 189, 216, 225], "coco_encode_rl": 271, "cocodataset": [67, 180, 216], "code": [1, 4, 5, 6, 50, 253, 290, 317, 323, 328, 339, 344, 356], "code_num": 323, "codebas": 4, "coeffici": [61, 73, 174, 186, 222, 234], "col": [324, 329], "colab": 0, "collact": [319, 347], "collat": [67, 180, 216], "collect": [61, 81, 90, 107, 174, 194, 230, 234, 284, 295, 319, 320, 322, 324, 330, 347, 349, 352, 358], "colmap": 4, "color": [84, 128, 129, 197, 233, 269, 319], "colorencod": 128, "column": [5, 310, 319, 324, 329], "column_nam": 19, "com": [0, 70, 80, 120, 121, 183, 193, 219, 229, 263, 323, 343], "com4": 5, "combin": [0, 73, 133, 134, 155, 156, 186, 222, 272], "combinedmaskdataset": [150, 152], "come": [5, 269], "comm": [78, 105, 191, 227], "command": [1, 2, 3, 4, 6], "commit": 3, "common": [79, 106, 192, 228, 261, 324, 335, 337, 339, 352, 362], "commun": [1, 7, 8, 81, 107, 194, 230], "comp_coeff": [61, 174, 234], "compar": 1, "comparison": [61, 174, 234], "compat": [73, 133, 134, 155, 156, 186, 222, 302, 337, 364], "complet": [0, 4, 5, 202, 290, 319, 323], "complex": 324, "compon": [7, 8, 90, 131, 291], "compos": [131, 137, 159, 205, 284], "composit": 205, "compound_coef": [63, 69, 176, 182, 212, 218], "comprehens": 0, "comput": [0, 2, 63, 68, 69, 70, 73, 74, 76, 79, 80, 81, 106, 107, 122, 123, 124, 128, 131, 133, 134, 135, 138, 139, 141, 142, 143, 144, 145, 155, 156, 157, 160, 161, 176, 181, 182, 183, 186, 187, 189, 192, 193, 194, 205, 212, 217, 218, 219, 222, 223, 225, 228, 229, 230, 249, 252, 262, 263, 264, 265, 268, 271, 272, 273, 276, 281, 290, 317, 322, 323, 324, 328, 330, 356], "computation": 88, "compute_n_possible_world": 25, "compute_similar": 254, "con_mat": [94, 280, 284], "concatdataset": 115, "concaten": [115, 271], "concept": 0, "conclus": 340, "concret": [310, 319, 333, 334, 335, 336], "concurr": 323, "condit": [65, 178, 214, 247, 249, 344], "confer": [137, 159], "confid": 131, "config": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 64, 96, 129, 137, 159, 177, 213], "config_fil": 129, "configr": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45], "configur": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 61, 70, 174, 183, 219, 234, 249, 290, 317, 321, 345], "confirm": 326, "conflict": [325, 353], "conform": [326, 354], "confus": [284, 326], "connect": [72, 73, 185, 186, 221, 222, 323], "cons_type_classifi": 57, "consequ": 6, "consequenti": 344, "consist": [7, 8, 94, 311, 317, 319, 337, 364], "consol": 319, "constant": 9, "construct": [0, 4, 72, 86, 121, 123, 124, 144, 185, 221, 276, 284, 302, 306, 319], "construct_confusion_matrix_imag": [94, 280, 284], "construction_type_classifi": 0, "constructionclass": [22, 25], "constructionclass_kei": [22, 25], "constructiontypeclassifi": 85, "constructor": 351, "constyp": [5, 6], "constypeclassifi": 86, "consum": 88, "contain": [2, 5, 6, 46, 50, 61, 72, 73, 86, 88, 90, 115, 131, 174, 185, 186, 202, 205, 209, 221, 222, 234, 236, 241, 245, 247, 249, 251, 252, 258, 269, 284, 288, 291, 296, 298, 300, 302, 304, 311, 313, 314, 317, 319, 320, 321, 322, 323, 324, 325, 326, 329, 330, 332, 334, 335, 336, 339, 348, 349, 361, 362, 363], "content": [5, 326, 330], "content_value_infer": 53, "context": [0, 73, 82, 108, 133, 134, 155, 156, 186, 195, 222, 231, 251], "context_length": [251, 252], "continu": 343, "contract": 344, "contrari": 5, "contribut": 1, "contributor": [1, 344], "control": [253, 272, 319], "conv2d": [73, 74, 186, 187, 222, 223], "conv2ddynamicsamepad": [73, 186, 222], "conv2dstaticsamepad": [74, 187, 223], "conv3x3_bn_relu": 122, "conv_channel": [69, 182, 218], "conv_out": 122, "convers": [337, 364], "convert": [19, 50, 67, 79, 180, 192, 216, 228, 251, 252, 279, 302, 317, 319, 321, 322, 324, 326, 331, 337, 359, 364], "convert_area": 337, "convert_length": 337, "convert_model": [79, 192, 228], "convert_polygons_to_centroid": 319, "convert_unit": 337, "convert_weight": [252, 337], "convolut": [72, 73, 122, 137, 159, 185, 186, 221, 222, 252], "coord": [84, 197, 233, 256, 273, 317, 319, 321, 324, 326], "coordin": [0, 1, 4, 6, 258, 266, 273, 290, 291, 293, 302, 310, 311, 314, 317, 319, 321, 324, 326, 330, 346, 350, 354], "coordinatesin": 311, "coords_input": 266, "copi": [82, 94, 108, 195, 231, 319], "copy_id": [82, 108, 195, 231], "copyright": [7, 8], "corner": [311, 326], "correa": 342, "correct": 47, "correl": 19, "correspond": [4, 73, 133, 134, 155, 156, 186, 205, 222, 241, 247, 249, 253, 279, 295, 302, 319, 321, 324, 329, 335, 350, 362], "corrmat": 19, "corrupt": 326, "cosine_anneal_schedul": 280, "cost": [2, 302], "count": [234, 319, 323, 351], "counti": [4, 46, 310, 317, 321, 323], "cover": [50, 290, 316, 323, 330], "coverag": [1, 253], "cpu": [79, 106, 131, 192, 202, 205, 228, 249, 284], "cr": [319, 330], "creat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 69, 73, 74, 82, 86, 108, 182, 186, 187, 195, 218, 222, 223, 231, 310, 311, 313, 316, 317, 319, 320, 322, 323, 324, 325, 329, 330, 331, 339, 358, 359], "create_correl": 19, "create_overlaid_imag": 331, "createindex": [65, 178, 214], "creation": [0, 61, 174, 234, 339], "crit": 122, "criteria": [13, 345], "criterion": [280, 334, 361], "crop": [3, 90, 137, 159, 258, 271, 329], "crop_box": [258, 271], "crop_imag": 329, "crop_n_lay": 258, "crop_n_points_downscale_factor": 258, "crop_nms_thresh": 258, "crop_overlap_ratio": 258, "crowd": [65, 178, 214], "crs84": 319, "csail_seg": [95, 129], "csail_segment": 95, "csail_segmentation_tool": 91, "csv": [4, 5, 319], "csv_root_fold": [150, 152], "ctx": [73, 82, 108, 133, 134, 155, 156, 186, 195, 222, 231], "cuda": [84, 131, 136, 158, 197, 205, 233, 251, 256, 284], "cummulative_s": 115, "cumsum": 115, "current": [2, 73, 128, 133, 134, 139, 155, 156, 161, 186, 222, 236, 269, 290, 302, 319, 331, 337], "curv": 205, "custom": [0, 11, 73, 82, 86, 108, 133, 134, 155, 156, 171, 186, 195, 209, 222, 231, 319, 328, 329], "custom_model": 90, "custom_transform": [132, 154], "customdataparallel": [84, 197, 233], "customiz": 249, "cv": 258, "cxhxw": 269, "d": [79, 106, 115, 192, 228, 274], "d0": [76, 189, 225], "d095e4b8": 317, "d4": 234, "d4_chimneydetector": 61, "d4_garagedetector": 174, "d4_nfloordetector": 234, "d_model": 252, "damag": [0, 25, 46, 247, 344], "damagedetection_streetlevel": 247, "data": [0, 1, 2, 3, 4, 5, 6, 17, 19, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 67, 73, 81, 82, 84, 86, 88, 94, 96, 107, 108, 112, 133, 134, 151, 155, 156, 171, 174, 180, 186, 194, 195, 197, 202, 205, 216, 222, 230, 231, 233, 236, 241, 271, 279, 284, 288, 290, 291, 298, 300, 302, 304, 306, 308, 310, 311, 313, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 330, 339, 344, 350, 351, 352, 354], "data_csv": [150, 152], "data_dir": [86, 236, 241], "data_parallel": [82, 108, 110, 195, 231], "data_sourc": 117, "data_tensor": 115, "databas": [0, 1, 5, 339], "datafram": [88, 319], "dataload": [113, 202, 284], "dataparallel": [79, 82, 84, 106, 108, 192, 195, 197, 228, 231, 233], "dataparallelwithcallback": [82, 108, 195, 231], "dataset": [0, 1, 5, 6, 19, 50, 61, 64, 86, 96, 113, 117, 150, 151, 152, 153, 170, 174, 177, 202, 205, 213, 234, 253, 278, 284, 290, 298, 310, 317, 322, 330, 358], "dataset_ext": 330, "dataset_path": [330, 358], "datasetbinari": 205, "datasetrgb": 205, "datatyp": 321, "debug": [76, 189, 225, 284], "dec_weight": 129, "decent": 253, "decim": [88, 254, 317, 337], "decod": [73, 186, 222, 253, 272], "decode_box_output": [70, 183, 219], "decode_segmap": 331, "decoder_epoch_20": 129, "decompos": 263, "dedic": 2, "deep": [284, 326], "deep_sup_scal": 122, "deepen": 0, "deeplabv3_resnet101": 205, "def": [1, 2, 3, 4, 6, 73, 133, 134, 155, 156, 186, 222, 319], "default": [1, 2, 6, 50, 61, 65, 79, 86, 90, 94, 97, 106, 131, 171, 174, 178, 192, 202, 205, 209, 214, 228, 234, 236, 241, 249, 251, 284, 290, 298, 300, 304, 306, 308, 310, 311, 313, 317, 319, 328, 329, 330, 331, 337, 346, 348, 353], "default_bp": 253, "default_filenam": 328, "default_load": [150, 152], "default_model": 328, "defin": [4, 10, 11, 13, 48, 63, 68, 69, 70, 73, 74, 76, 80, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 193, 202, 203, 212, 217, 218, 219, 222, 223, 225, 229, 252, 262, 263, 264, 265, 268, 272, 276, 281, 288, 290, 291, 293, 295, 296, 298, 300, 302, 304, 306, 308, 310, 311, 313, 314, 317, 319, 320, 321, 323, 324, 326, 329, 333, 334, 335, 336, 337, 349, 350], "definit": [319, 350], "deform": [137, 159], "degenerated_to_sgd": 93, "degre": [317, 324], "deierlein": 342, "deleg": 333, "demonstr": [1, 2, 3, 4, 5, 6, 7, 8, 317], "denomin": [79, 106, 192, 228], "dens": 266, "dense_prompt_embed": [264, 265], "denseblock": 143, "dep_revert": 323, "depend": [258, 330], "depth": [73, 79, 88, 106, 186, 192, 222, 228, 263, 268, 295, 320, 323, 348], "depth_coeffici": [73, 186, 222], "depth_divisor": [73, 186, 222], "depthmap": [88, 295], "deriv": [48, 131, 319, 337, 364], "desc": [321, 323], "desc_long": 324, "descent": 202, "describ": [46, 137, 159, 314, 323, 326], "descript": [1, 2, 3, 4, 6, 29, 321, 323, 324, 328, 350], "desert": 50, "design": [0, 3, 209, 249, 298, 317, 326, 329, 354, 357], "designlevel": 25, "designlevel_h": 47, "designlevel_h_kei": 47, "designlevel_kei": 25, "designsaf": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364], "designwindspe": 47, "designwindspeed_kei": 47, "desir": [317, 337], "det": [69, 182, 218], "detail": [0, 1, 50, 73, 81, 107, 133, 134, 155, 156, 186, 194, 222, 230, 264, 265, 272], "detect": [0, 6, 15, 61, 90, 91, 174, 234, 256, 275, 326, 330, 337, 358], "detection_dict": [15, 256], "detectionresult": 256, "detector": [61, 76, 174, 189, 225, 234], "detector_id": [15, 256], "detectron2": 90, "determiend": 267, "determin": [61, 81, 107, 174, 194, 230, 234, 247, 266, 298, 323, 326, 339, 351], "dev": 111, "develop": [4, 6, 7, 8, 316, 339, 343], "deviat": [79, 106, 192, 228, 317], "devic": [79, 81, 82, 106, 107, 108, 128, 129, 131, 192, 194, 195, 202, 205, 228, 230, 231, 249, 251, 252, 254, 256, 267, 269, 284], "device_id": [82, 84, 108, 111, 195, 197, 231, 233], "df": 19, "dfirm_id": [290, 323], "dh": [70, 183, 219], "dict": [1, 4, 6, 61, 88, 90, 131, 174, 202, 203, 205, 209, 234, 236, 241, 245, 247, 249, 258, 267, 279, 284, 290, 302, 317, 319, 320, 323, 324, 325, 329, 337, 345, 346, 348, 349, 350, 353], "dict_kei": 319, "dictgatherdataparallel": 111, "dictionari": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 61, 70, 88, 90, 131, 174, 183, 202, 205, 209, 219, 234, 236, 241, 245, 247, 249, 258, 267, 284, 302, 317, 319, 320, 323, 324, 325, 329, 337, 346, 347, 348, 349, 350, 353], "differ": [1, 6, 61, 79, 82, 86, 106, 108, 115, 174, 192, 195, 202, 205, 228, 231, 266, 271, 322, 325, 337, 353, 364], "differenti": [73, 133, 134, 155, 156, 186, 222], "difficult": 234, "dilat": [73, 74, 186, 187, 222, 223, 281], "dilate_scal": 122, "dim": [82, 108, 111, 195, 231, 263], "dimens": [70, 79, 94, 106, 115, 183, 192, 219, 228, 269, 273], "dimension": [251, 319, 326, 346], "dino": [15, 256], "dir_path": [3, 13, 15, 88, 90, 131, 284, 320, 329, 345, 349], "direct": [311, 321, 344, 350], "directli": [3, 4, 6, 73, 133, 134, 155, 156, 186, 222, 267, 272, 311, 329, 336, 343, 363], "directori": [3, 4, 5, 6, 13, 15, 86, 88, 90, 131, 171, 202, 205, 236, 241, 284, 293, 320, 325, 329, 330, 331, 349, 353], "dirnam": [5, 6], "disambigu": 267, "disclaim": 344, "disconnect": [258, 271], "discret": [136, 158], "discuss": [0, 317], "displai": [0, 75, 84, 131, 188, 197, 224, 233, 236, 276, 320, 323, 329, 357], "distanc": [319, 324, 332, 334, 352, 361], "distance_based_point_match": [8, 332], "distancebasedpointmatch": [8, 332, 334], "distinct": 5, "distort": 234, "distribut": [79, 106, 113, 192, 228, 323, 344, 351], "distributed_rank": 128, "divid": [70, 183, 219, 313, 323, 324, 351], "dl": 46, "dl_ap": 46, "do": [3, 4, 6, 269, 323, 340], "document": [0, 7, 8, 129, 137, 159, 253, 310, 326, 330, 339, 344], "documentaion": [7, 8, 339], "doe": [2, 6, 19, 88, 131, 202, 205, 284, 302, 311, 319, 320, 323, 324, 326, 328, 329, 331], "dog": 348, "doi": 342, "done": [5, 6, 7, 8, 79, 106, 115, 192, 228, 236], "door": [90, 339], "download": [0, 1, 3, 7, 8, 61, 73, 90, 131, 150, 151, 153, 174, 186, 202, 205, 222, 234, 251, 276, 290, 293, 295, 298, 313, 316, 317, 323, 328, 356], "download_all_attr_for_region": 323, "download_all_attr_from_api": 323, "download_attr_from_api": 323, "download_footprint": 1, "download_func": 323, "download_imag": 2, "download_root": 251, "download_url": [256, 328], "downloaded_data": 323, "downsample_r": 268, "downscal": 268, "downstream": 291, "draw": [117, 136, 158], "drawn": 117, "driven": 1, "drop": [72, 73, 117, 185, 186, 221, 222, 310], "drop_connect": [73, 186, 222], "drop_connect_r": [72, 73, 185, 186, 221, 222], "drop_last": 117, "dropout": 143, "dropout_p": 143, "dropout_r": [73, 186, 222], "dtype": [70, 129, 183, 219, 252, 331], "dual_zon": 323, "due": [1, 5, 323], "duplic": [258, 320, 325, 326, 353], "dure": [6, 61, 73, 79, 81, 86, 106, 107, 131, 133, 134, 155, 156, 174, 186, 192, 194, 202, 205, 222, 228, 230, 234, 236, 241, 279], "dw": [70, 183, 219], "dx": [70, 183, 219], "dy": [70, 183, 219], "dynam": [1, 4, 73, 186, 222, 325, 353], "e": [2, 5, 6, 19, 56, 65, 73, 86, 90, 128, 131, 133, 134, 137, 155, 156, 159, 178, 186, 202, 205, 214, 222, 284, 290, 298, 302, 311, 313, 317, 319, 320, 321, 323, 324, 326, 329, 337, 339, 350], "each": [0, 1, 3, 5, 6, 22, 25, 27, 47, 48, 50, 56, 61, 73, 79, 81, 82, 88, 90, 106, 107, 108, 115, 131, 133, 134, 137, 155, 156, 159, 171, 174, 186, 192, 194, 195, 202, 205, 222, 228, 230, 231, 234, 236, 258, 267, 269, 271, 279, 284, 288, 290, 300, 302, 304, 313, 314, 316, 317, 319, 320, 323, 324, 326, 329, 330, 337, 339, 354], "earli": [202, 205], "earth": 324, "easi": [79, 106, 192, 228], "easili": [0, 72, 185, 221], "east_build": 320, "east_view": 320, "eav": 88, "eb9058c3a382ffc7106e4002c42a8d85": [150, 151], "edg": [271, 319, 343], "edit": 258, "edu": [136, 150, 151, 158], "effect": [7, 8, 234, 236, 339], "effici": [3, 72, 136, 158, 185, 221, 300, 304, 317], "efficientdet": [61, 62, 76, 174, 175, 189, 211, 225, 234], "efficientdetbackbon": [63, 176, 212], "efficientnet": [62, 69, 175, 182, 211, 218], "efficientnet_param": [73, 186, 222], "efficientnetv2_": 202, "either": [5, 73, 133, 134, 155, 156, 186, 205, 222, 284, 298, 311, 317, 321, 328, 332, 333, 337, 350], "elast": [137, 159], "elastic_transform": [137, 159], "elastictransform": [137, 159], "element": [3, 11, 117, 137, 159, 267, 308, 311, 313, 319, 323, 324, 351], "element_count": 323, "elementwise_affin": 252, "elev": [0, 88, 90, 131, 171, 290, 317, 323], "elevation_data": 317, "elhaddad": 342, "elif": 4, "elig": 319, "els": [3, 4], "emb": 266, "embed": [263, 264, 265, 266, 268, 269], "embed_dim": [252, 263, 266], "embed_h": 266, "embed_w": 266, "embedding_dim": [262, 268], "embedding_h": 266, "embedding_w": 266, "empti": [2, 205, 271, 284, 319, 324, 346, 347, 348, 349], "empty_asset": 319, "enabl": [0, 1, 4, 272, 329, 342, 357], "enc_weight": 129, "encod": [2, 3, 73, 186, 222, 251, 253, 264, 265, 266, 268, 271, 272], "encode_imag": [200, 252], "encode_text": 252, "encoder_epoch_20": 129, "encourag": 1, "end": [253, 267], "end_idx": 100, "endpoint": [290, 323, 351], "enforc": [5, 73, 133, 134, 155, 156, 186, 222, 327, 355], "engin": 288, "enhanc": 249, "enhancedcompos": [137, 159], "enrich": [336, 363], "ensur": [0, 3, 5, 61, 88, 131, 174, 234, 236, 319, 323, 325, 326, 328, 337, 351, 353, 354, 356, 364], "enter": [4, 6, 249], "entiti": 11, "entri": [2, 81, 88, 107, 194, 230, 314, 339], "env": [137, 159], "envelop": 323, "environ": [0, 61, 174, 234, 339, 342], "ep": [79, 80, 82, 93, 106, 108, 192, 193, 195, 228, 229, 231, 252, 262], "epoch": [61, 86, 94, 174, 202, 205, 234, 236, 241], "epsg": [302, 324, 330], "epsilon": [69, 79, 106, 182, 192, 218, 228], "equal": [323, 326], "equival": [73, 82, 108, 133, 134, 155, 156, 186, 195, 222, 231, 319], "era": [284, 306], "erabuilt": [1, 5, 6], "error": [2, 6, 11, 300, 304, 311, 321, 323, 327, 337, 351, 355, 364], "errormessag": 321, "ertugrul": 342, "es_min_delta": [76, 189, 225], "es_pati": [76, 189, 225], "es_toler": [202, 205], "especi": 319, "essenti": [323, 351], "estim": [0, 5, 79, 90, 106, 192, 228, 234], "etc": 319, "euclidean": [332, 334, 361], "eval": 96, "eval_multipro": 96, "evalu": [79, 94, 106, 192, 202, 228, 284, 329, 357], "evaluate_to_stat": 284, "even": [324, 328, 344], "evenli": 271, "event": 344, "evergreen": 50, "everi": [4, 63, 68, 69, 70, 73, 74, 76, 80, 117, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 193, 212, 217, 218, 219, 222, 223, 225, 229, 252, 262, 263, 264, 265, 268, 272, 276, 281, 323], "everyth": [46, 339], "exactli": [79, 106, 192, 228, 273, 311, 326], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 50, 72, 79, 81, 82, 90, 94, 106, 107, 108, 117, 137, 159, 185, 192, 194, 195, 221, 228, 230, 231, 290, 302, 310, 311, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 337, 339, 348, 350], "example__": 202, "example_imag": 331, "example_tiburon": 5, "exce": [319, 323], "exceed": [319, 323], "except": [2, 6, 9, 128, 319], "excess": 326, "excit": [72, 185, 221], "exclud": [267, 310, 319], "exclude_channel": [137, 159], "exclude_featur": 19, "exclus": [50, 115], "execut": [3, 4, 6, 56, 61, 82, 108, 174, 195, 231, 234, 319, 333, 336, 363], "execute_replication_callback": [82, 108, 195, 231], "exemplari": 344, "exist": [2, 3, 4, 5, 6, 61, 82, 88, 108, 115, 131, 171, 174, 195, 202, 205, 231, 234, 284, 319, 320, 324, 325, 326, 328, 330, 331, 334, 342, 353, 361], "exist_ok": 6, "expand_ratio": [73, 186, 222], "expans": 252, "expect": [5, 46, 79, 106, 192, 228, 269, 271, 273, 319, 321, 323, 327, 337], "expected_unit_typ": 337, "expens": 88, "explain": 0, "explor": 0, "exponenti": [323, 351], "export": [72, 73, 185, 186, 221, 222, 272, 310], "express": [340, 344], "ext": 128, "extend": [46, 73, 133, 134, 155, 156, 186, 222, 302, 310, 339], "extens": [320, 324, 326, 354], "extent": [319, 330], "extent_custom": 319, "extent_default": 319, "extent_non": 319, "extern": 321, "extra": 272, "extract": [0, 1, 3, 6, 72, 185, 221, 263, 291, 298, 302, 306, 308, 310, 319, 330, 358], "extract_aerial_imageri": 330, "extract_featur": [72, 185, 221], "f": [1, 2, 3, 4, 5, 6, 323], "f0ef6b0ae62326f3e7ffdfab6717acfc": [150, 151], "f369": 317, "facad": [0, 88], "facade_pars": [0, 57], "facadepars": 88, "facebookresearch": 263, "facil": [322, 330, 358], "facilit": [2, 86], "factor": 339, "fail": [317, 319, 321, 323, 350, 351], "fall": [310, 317, 324, 335, 362], "fals": [19, 22, 25, 27, 47, 56, 61, 63, 65, 69, 72, 73, 75, 76, 79, 82, 84, 94, 106, 108, 117, 120, 121, 122, 123, 124, 128, 143, 144, 150, 151, 153, 171, 174, 176, 178, 182, 185, 186, 188, 189, 192, 195, 197, 212, 214, 218, 221, 222, 224, 225, 228, 231, 233, 234, 251, 256, 263, 264, 265, 268, 269, 272, 276, 279, 281, 284, 302, 311, 317, 319, 320, 323, 326, 327, 328, 329, 330, 337], "faq": 317, "fashion": [15, 256, 302], "faster": 19, "fbuil": 342, "fc_dim": 122, "fd_id": 6, "featur": [1, 4, 5, 6, 17, 19, 22, 25, 27, 47, 48, 50, 56, 70, 72, 90, 145, 183, 185, 219, 221, 284, 288, 290, 302, 316, 317, 319, 323, 336, 337, 339, 346, 363, 364], "feature_kei": 319, "feature_name_map": 319, "feature_s": 281, "featurecollect": 319, "features_to_remov": 319, "featureserv": 323, "feed_dict": 122, "feet": [88, 298, 302, 317, 324, 337, 364], "fema": [1, 290, 313, 323], "fema_firm_scrap": 285, "femafirmscrap": 290, "fetch": [0, 290, 300, 302, 304, 311, 317, 321, 323, 351], "fetch_all_elev": 317, "fetch_api_field": 323, "fetch_data_for_cel": 323, "fetch_footprint_data": 314, "fetch_max_records_per_queri": [323, 351], "fetch_release_nam": 311, "fewer": [319, 324], "ffe": 319, "ffh": 90, "ffh_predictor_klepac": 57, "ffhpredictorklepac": 90, "field": [5, 6, 50, 73, 93, 186, 222, 290, 316, 319, 323, 339], "field_nam": 323, "figur": [284, 322, 329], "file": [2, 3, 4, 5, 6, 11, 46, 61, 65, 73, 90, 131, 174, 178, 186, 205, 214, 222, 234, 236, 241, 251, 279, 284, 302, 314, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 348, 349, 352, 353, 354, 356, 358], "file_path": [5, 6, 319], "filenam": [4, 90, 128, 150, 151, 171, 205, 279, 284, 320, 324, 328, 329, 348], "filenotfounderror": [2, 3, 11, 88, 205], "filepath": [5, 256, 326], "fill": [0, 5, 17], "filter": [0, 4, 6, 7, 8, 9, 65, 73, 178, 186, 214, 222, 258, 271, 302, 310, 339], "filter1": 15, "filter_hous": 3, "filterboundingbox": 15, "filterdetectionresult": 15, "filtered_imag": 3, "filtered_images_street": 3, "final": [72, 185, 221, 252, 273, 323], "final_cel": 323, "find": [0, 6, 310, 317, 324, 332, 335, 340, 353, 362], "find_json": 200, "find_recurs": 128, "fine": [202, 316], "firm": 290, "firm_scrap": 290, "firmett": 323, "firmzon": 6, "first": [3, 5, 73, 81, 82, 90, 107, 108, 115, 133, 134, 155, 156, 186, 194, 195, 222, 230, 231, 310, 319, 323, 324, 325, 326, 337, 353, 364], "first_tim": [69, 182, 218], "firstfloorelev": 27, "firstfloorelevation_kei": 27, "fit": [329, 344], "five": 50, "fix": [174, 331], "fl": 317, "flag": 313, "flat": [241, 319], "flatten": 319, "flatten_arrai": 22, "fld_ar_id": [290, 323], "fld_zone": [290, 323], "flexibl": 332, "float": [15, 61, 65, 70, 72, 88, 90, 174, 178, 183, 185, 205, 214, 219, 221, 234, 256, 258, 273, 279, 284, 311, 317, 319, 324, 326, 330, 337, 346, 350, 354], "float32": [70, 183, 219], "float64": 5, "flood": 290, "floodtyp": 27, "floodtype_kei": 27, "floodzon": [27, 47], "floodzone_kei": [27, 47], "floor": [0, 90, 207, 209, 234, 243, 302, 319], "floor_area_infer": 53, "florida": 317, "fly": 115, "fmk": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364], "focalloss": [68, 181, 217], "focu": [0, 7, 8, 339], "focus": 0, "folder": [150, 205, 296, 358], "folder_path": 200, "follow": [1, 2, 3, 4, 5, 6, 50, 73, 88, 90, 120, 121, 133, 134, 155, 156, 186, 222, 252, 258, 267, 290, 317, 321, 330, 331, 337, 339, 344, 350, 351, 358, 359, 364], "foot": [337, 364], "footprint": [0, 2, 3, 4, 6, 7, 8, 88, 291, 293, 295, 298, 302, 306, 310, 313, 314, 330], "footprint_scrap": 285, "footprintscrap": [6, 291, 298, 306, 313], "footprintsourc": 4, "forc": [84, 197, 233, 328], "foreground": 269, "forest": 50, "form": [267, 269, 326, 337, 344, 350], "format": [128, 249, 258, 267, 269, 271, 273, 279, 302, 311, 317, 319, 324, 326, 337, 346], "former": [63, 68, 69, 70, 73, 74, 76, 80, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 193, 212, 217, 218, 219, 222, 223, 225, 229, 252, 262, 263, 264, 265, 268, 272, 276, 281], "formula": [73, 133, 134, 155, 156, 186, 222], "fort": 317, "forward": [63, 68, 69, 70, 72, 73, 74, 76, 80, 81, 107, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 185, 186, 187, 189, 193, 194, 212, 217, 218, 219, 221, 222, 223, 225, 229, 230, 252, 262, 263, 264, 265, 266, 267, 268, 272, 276, 281], "forward_with_coord": 266, "found": [1, 2, 3, 4, 6, 11, 202, 205, 310, 317, 319, 320, 321, 323, 325, 326, 330, 333, 337, 353], "found_ht": 6, "found_typ": 6, "foundat": [0, 1, 7, 8, 171, 340], "foundation_classifi": 57, "foundation_type_binari": 171, "foundation_type_classifi": 0, "foundation_type_testset": 171, "foundationelevationclassifi": 131, "foundationtyp": 25, "foundationtype_kei": 25, "four": [1, 311, 326], "fourth": 326, "fp16": 252, "fp_inventori": 2, "fparea": [1, 4, 5, 6], "fpn_dim": 122, "fpn_inplan": 122, "fpsourc": 314, "frac": [79, 106, 192, 228], "frame": [267, 269], "frame_from_video": [84, 197, 233], "framework": [4, 7, 8, 339, 342], "francisco": 324, "frank": 342, "freeze_bn": [63, 176, 212], "freeze_head": [76, 189, 225], "frequenc": [1, 266, 279], "from": [0, 1, 2, 3, 4, 5, 6, 29, 50, 61, 70, 73, 79, 81, 86, 88, 90, 106, 107, 115, 117, 120, 121, 131, 136, 137, 158, 159, 171, 174, 183, 186, 192, 194, 202, 209, 219, 222, 228, 230, 234, 236, 241, 245, 247, 249, 263, 264, 265, 267, 269, 271, 279, 284, 290, 293, 295, 298, 300, 302, 304, 306, 308, 310, 311, 314, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 339, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 363, 364], "from_channel": [137, 159], "from_colorname_to_bgr": [84, 197, 233], "from_dict": [15, 256], "from_nam": [72, 185, 221], "from_pretrain": [72, 185, 221], "from_unit": 337, "frontier": 342, "ft": [1, 2, 3, 4, 6, 290, 298, 300, 302, 304, 306, 308, 310, 313, 314, 317, 330, 337, 364], "ft2": [337, 364], "ftmyerselevationmap": 317, "ftprntid": 6, "ftprntsrc": 6, "full": 1, "fulli": 4, "function": [1, 2, 3, 4, 6, 15, 61, 63, 68, 69, 70, 72, 73, 74, 76, 80, 82, 93, 108, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 150, 152, 155, 156, 157, 160, 174, 176, 181, 182, 183, 185, 186, 187, 189, 193, 195, 205, 212, 217, 218, 219, 221, 222, 223, 225, 229, 231, 234, 252, 256, 262, 263, 264, 265, 268, 272, 276, 281, 293, 302, 314, 317, 319, 321, 323, 324, 326, 329, 334, 335, 336, 337, 350, 351, 352, 361, 362, 363], "fund": [7, 8], "further": [269, 302], "fuse": 0, "futur": [81, 107, 194, 230], "futureresult": [81, 107, 194, 230], "g": [5, 65, 73, 86, 90, 128, 131, 133, 134, 145, 155, 156, 178, 186, 202, 205, 214, 222, 284, 290, 298, 311, 313, 317, 319, 320, 321, 323, 329, 337, 339, 342, 350, 364], "gabl": [5, 241, 319], "gain": [84, 197, 233], "galleri": [7, 8], "galveston": 317, "gamma": [79, 106, 192, 228], "gap": [2, 5, 254], "garag": [0, 174], "garage_detector": [0, 57], "garagedetector": 174, "garagetyp": [22, 25], "garagetype_kei": [22, 25], "gararg": 302, "gather": [81, 107, 194, 230], "gaussian": [137, 159], "gaussian_std": 279, "gcp": 4, "gcpkei": 4, "gelu": [262, 263, 264, 265, 266], "gen_method": 19, "gener": [0, 1, 2, 5, 7, 8, 19, 70, 131, 183, 219, 258, 266, 271, 302, 313, 317, 319, 323, 329, 339, 357], "generate_crop_box": 271, "generate_csv": 170, "geo_tool": [8, 322], "geograph": [1, 7, 8, 291, 298, 300, 304, 308, 313, 316, 317, 319, 323, 324, 326, 339, 352, 354], "geojson": [5, 6, 302, 310, 314, 317, 319, 324, 352], "geojson_dict": 319, "geojson_written": 319, "geom": [321, 324, 326], "geom_typ": 321, "geometr": 90, "geometri": [291, 308, 319, 321, 323, 324, 326, 330, 336, 346, 352, 354, 363], "geometry_to_list_of_list": 324, "geospati": [322, 324, 326, 352, 354], "geospatial_knn": 19, "geotool": [8, 322, 323, 324, 326], "get": [0, 1, 2, 3, 6, 65, 73, 81, 88, 107, 178, 186, 194, 214, 222, 230, 263, 291, 293, 295, 302, 306, 308, 310, 311, 317, 319, 321, 323, 324, 330, 339], "get_asset": [300, 304], "get_asset_coordi": 319, "get_asset_coordin": 319, "get_asset_featur": [5, 319], "get_asset_id": 319, "get_available_attribut": 290, "get_boundari": [317, 321, 323], "get_centroid": 319, "get_class": [1, 2, 3, 4, 5, 6, 50, 234, 290, 310, 311, 316, 317, 321, 323, 325, 329, 330, 350, 353], "get_coordin": 319, "get_datafram": 319, "get_dense_p": 266, "get_el": 308, "get_element_count": [323, 351], "get_elevation_usg": 317, "get_era_height_foundation_class": 25, "get_ext": 319, "get_extended_featur": 302, "get_filtered_data_given_inventori": [6, 302], "get_footprint": [1, 2, 3, 4, 6, 291, 298, 306, 310, 313, 317, 330], "get_geojson": 319, "get_hazus_base_replacement_cost": 23, "get_hazus_height_class": 23, "get_hazus_height_classes_res1": 23, "get_hazus_income_to_const_class": 23, "get_hazus_occ_type_map": 23, "get_hazus_region_to_garag": 23, "get_hazus_state_region_map": 23, "get_hazus_year_class": 23, "get_imag": [2, 3, 293, 295, 296, 320, 329], "get_image_embed": 269, "get_image_s": [72, 185, 221], "get_index_label": [84, 197, 233], "get_last_weight": [84, 197, 233], "get_mask": 129, "get_model_param": [73, 186, 222], "get_model_path": 328, "get_mosaic_bbox_wgs84": 330, "get_multi_kei": 319, "get_n_pw": 319, "get_object": 325, "get_pair": 253, "get_points_in_polygon": [8, 332], "get_points_near_polygon": [8, 332], "get_preprocess_shap": 273, "get_random_sampl": [1, 2, 3, 4, 6, 317, 319], "get_raw_data": [6, 302], "get_raw_data_given_boundari": 6, "get_region_elevation_data": 317, "get_rel_po": 263, "get_replacement_cost": 22, "get_same_padding_conv2d": [73, 186, 222], "get_str_from_occ": 22, "get_supported_unit": 337, "get_unit_typ": 337, "get_world_r": 319, "getannid": [65, 178, 214], "getcatid": [65, 178, 214], "getimgid": [65, 178, 214], "getnsidata": 302, "getpointsinpolygon": [8, 319, 332, 334, 335, 336], "getpointsnearpolygon": [8, 332, 336], "gfid": 323, "gi": 302, "gi_ap": 46, "git": 343, "github": [0, 70, 80, 120, 121, 183, 193, 219, 229, 263, 343], "gitignor": 3, "give": [0, 1, 79, 106, 192, 228, 269], "given": [1, 61, 65, 73, 115, 117, 131, 133, 134, 137, 155, 156, 159, 171, 174, 178, 186, 214, 222, 234, 241, 247, 249, 251, 258, 264, 265, 267, 269, 273, 279, 291, 293, 295, 296, 300, 302, 304, 306, 308, 310, 313, 321, 323, 324, 325, 326, 327, 333, 339, 350, 351, 353, 355], "glimps": 0, "global": [1, 10, 73, 186, 222], "global_asset_indic": 22, "global_attn_index": 263, "global_param": [72, 73, 185, 186, 221, 222], "global_ruleset": 40, "globalid": 323, "globalparam": [72, 73, 185, 186, 221, 222], "go": 339, "goal": 5, "goe": 319, "good": 344, "googl": [0, 2, 3, 4, 70, 183, 219, 293, 295], "google_satellit": [2, 285, 329], "google_satellite_class": 2, "google_street": [2, 3], "google_street_class": [2, 3], "google_streetview": 285, "googlesatellit": [2, 293, 329], "googlestreetview": [2, 3, 295], "gov": [317, 323], "gover": [7, 8], "govindje": 342, "gp": 1, "gpt": [0, 198, 207, 243], "gpt_base_model": 57, "gpu": [61, 79, 84, 88, 106, 174, 192, 197, 202, 205, 228, 233, 234, 249, 284], "gpu0": 128, "gpu1": 128, "grad": [73, 93, 133, 134, 155, 156, 186, 222], "grad_output": [73, 186, 222], "gradient": [73, 133, 134, 155, 156, 186, 202, 222], "gradoutput": [133, 134, 155, 156], "grain": 316, "gram": [337, 364], "grant": [7, 8, 340], "graphic": [1, 5, 6], "grassland": 50, "gregori": 342, "grid": [266, 271, 323, 324, 329, 357], "ground": [1, 15, 256, 284], "ground_elv": 6, "ground_elv_m": 6, "grounded_sam_util": 255, "grounding_dino_model": 256, "group": [73, 74, 124, 137, 159, 186, 187, 222, 223, 276, 281], "gstrt_4769427063_": 320, "gt_label": 254, "guarante": [82, 108, 195, 231, 323], "guo": 342, "gz": [150, 151, 253], "h": [79, 106, 137, 159, 192, 228, 263, 267, 268, 269, 273, 331, 342], "ha": [0, 4, 5, 70, 73, 117, 133, 134, 155, 156, 183, 186, 219, 222, 234, 269, 271, 319, 324, 326, 339], "hackabl": 251, "hackish": [150, 152], "halv": 202, "hand": 0, "handl": [5, 61, 73, 133, 134, 155, 156, 171, 174, 186, 222, 234, 252, 300, 304, 306, 320, 323, 324, 329, 351, 352], "hard": 4, "harvard": [136, 158], "has_mask_input": 272, "has_part": 317, "has_s": [72, 185, 221], "hasgarag": 47, "hasgarage_kei": 47, "have": [1, 3, 5, 6, 73, 82, 88, 108, 133, 134, 137, 155, 156, 159, 186, 195, 205, 222, 231, 268, 319, 324, 329], "haversin": 324, "haversine_dist": 324, "hazard": [7, 8, 29, 290, 323, 339, 342], "hazu": [22, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 52], "hazus_infer": 20, "hazus_inferer_earthquak": 20, "hazus_inferer_flood": 20, "hazus_inferer_wind": 20, "hazus_ruleset": 21, "hazusinfer": [22, 52], "hazusinfererearthquak": 25, "hazusinfererflood": 27, "hazusinfererwind": 47, "head": [202, 252, 263], "heatmap": 284, "hei": 339, "height": [0, 22, 47, 52, 70, 79, 84, 88, 90, 106, 183, 192, 197, 219, 228, 233, 263, 298, 306, 313, 317, 319, 320, 323, 329, 348], "height_kei": 47, "heightclass": 25, "heightclass_kei": 25, "help": [1, 2, 3, 4, 6], "helper": [73, 186, 222, 323, 351], "herbac": 50, "here": [1, 3, 4, 6], "heurist": [52, 90], "hhw": 6, "hidden": 329, "hidden_dim": [264, 265], "hidden_s": 143, "high": [271, 295, 339], "hip": [5, 136, 158, 241, 319], "histori": 205, "hold": [61, 174, 290, 300, 304, 329], "holder": 344, "hole": [258, 271], "home": [129, 137, 159, 253, 310, 317, 330], "hook": [63, 68, 69, 70, 73, 74, 76, 80, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 193, 212, 217, 218, 219, 222, 223, 225, 229, 252, 262, 263, 264, 265, 268, 272, 276, 281], "hornauer": 342, "hous": [3, 90], "house_view": 12, "houseview": [3, 15], "how": [0, 1, 2, 5, 6, 7, 8, 288, 317, 319, 350], "howev": 344, "hp": 263, "hp6g80pky0om7qvq": 323, "hq_featur": 265, "hq_token_onli": [264, 265, 269], "hrnet": 119, "hrnetv2": 120, "http": [0, 70, 80, 84, 120, 121, 136, 150, 151, 158, 183, 193, 197, 219, 229, 233, 263, 317, 323, 328, 343, 351], "httperror": [323, 351], "huef": 32, "hueff": 32, "hueffs_config": 32, "huefh": 32, "huefh_config": 32, "huefs_config": 32, "huefss": 32, "huefss_config": 32, "human": [321, 324, 328, 337], "hurrican": [0, 46], "hw": [258, 263], "hwc": [258, 269], "hxwxc": 273, "hymenoptera_data": 202, "hyperparamet": 202, "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 19, 46, 50, 56, 61, 73, 79, 81, 82, 86, 88, 90, 106, 107, 108, 115, 117, 120, 121, 131, 133, 134, 137, 150, 151, 155, 156, 159, 171, 174, 186, 192, 194, 195, 202, 205, 209, 222, 228, 230, 231, 234, 236, 241, 247, 249, 251, 252, 253, 258, 266, 267, 269, 271, 272, 273, 274, 284, 290, 291, 293, 295, 298, 300, 302, 304, 306, 308, 310, 311, 313, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 336, 337, 339, 340, 343, 344, 350, 351, 353, 355, 357, 358, 361, 363, 364], "id": [19, 65, 81, 107, 131, 178, 194, 214, 230, 319, 321, 323, 346], "id_column": [5, 319], "id_skip": [73, 186, 222], "ident": [73, 186, 222], "identifi": [0, 4, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 81, 88, 107, 194, 230, 234, 284, 291, 319, 320, 321, 325, 329, 330, 335, 337, 339, 346, 349, 353, 362], "idx": [134, 156], "ignor": [63, 68, 69, 70, 73, 74, 76, 80, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 193, 212, 217, 218, 219, 222, 223, 225, 229, 252, 262, 263, 264, 265, 268, 272, 276, 281], "illustr": [1, 4, 6, 69, 182, 218], "im": 100, "im_siz": 271, "imag": [0, 1, 4, 7, 8, 13, 15, 59, 61, 70, 73, 84, 86, 88, 90, 131, 137, 150, 152, 159, 171, 174, 183, 186, 197, 199, 202, 203, 205, 207, 219, 222, 233, 234, 236, 238, 241, 243, 245, 247, 249, 251, 252, 256, 258, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 279, 280, 284, 293, 295, 296, 313, 320, 322, 324, 326, 329, 330, 331, 339, 345, 349, 354, 357, 359], "image_classifi": 57, "image_download": 0, "image_embed": [264, 265, 268, 272], "image_embedding_s": 266, "image_encod": [261, 267], "image_featur": 254, "image_filt": 3, "image_fold": [171, 279], "image_format": [267, 269], "image_index": [67, 180, 216], "image_nam": 205, "image_p": [264, 265, 268], "image_path": [15, 84, 197, 200, 233], "image_processor": [0, 57], "image_resolut": 252, "image_s": [70, 73, 183, 186, 219, 222, 266], "image_scrap": 285, "image_segment": 57, "image_set": [5, 8, 90, 318, 330], "imageclassifi": [86, 202, 236, 241], "imageencodervit": 263, "imagefold": [150, 152, 205], "imagefolderinst": [150, 152], "imagenet": [121, 123, 144, 276], "imageprocess": 203, "imageprocessor": [88, 203], "imageri": [0, 1, 2, 3, 88, 131, 209, 234, 236, 241, 245, 247, 293, 295, 330, 358], "images_ari": 239, "images_raster_test": 330, "images_satellit": [2, 329], "images_street": [2, 3, 239], "imagescrap": [293, 295, 296], "imagesegment": 205, "imageset": [3, 5, 8, 13, 15, 59, 61, 88, 90, 131, 174, 202, 203, 207, 234, 236, 241, 243, 245, 247, 249, 274, 284, 293, 295, 296, 320, 329, 330, 339, 345, 357], "imagin": 4, "imdir": 205, "img": [65, 70, 75, 76, 84, 100, 178, 183, 188, 189, 197, 214, 219, 224, 225, 233, 320, 348], "img_dir": [67, 76, 180, 189, 216, 225], "img_kei": 200, "img_path": [75, 171, 188, 224, 254, 279], "img_set": 320, "img_siz": [67, 180, 216, 263], "img_sourc": 256, "img_transform": 100, "imgid": [65, 178, 214], "imlab": 128, "impact": [7, 8, 342], "imperi": [337, 364], "implement": [1, 13, 15, 48, 73, 79, 80, 81, 82, 106, 107, 108, 120, 121, 186, 192, 193, 194, 195, 203, 222, 228, 229, 230, 231, 271, 288, 291, 296, 311, 323, 333, 335, 362], "implemented_architectur": 202, "impli": 344, "import": [0, 1, 2, 3, 5, 6, 7, 8, 50, 79, 192, 228, 234, 290, 310, 311, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 337, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 364], "impr": 128, "improv": [3, 202, 205, 319], "imput": [0, 2, 6, 7, 8, 9, 339], "imputation_exampl": 0, "imputed_inventori": 5, "imres": 100, "imshow": [75, 84, 188, 197, 224, 233], "imwrit": [75, 84, 188, 197, 224, 233], "in2": [337, 364], "in_chan": 263, "in_channel": [69, 72, 73, 74, 141, 142, 182, 185, 186, 187, 218, 221, 222, 223], "in_featur": 145, "in_plan": [122, 281], "inaccur": [79, 106, 192, 228], "inch": [337, 364], "incident": 344, "includ": [0, 1, 3, 4, 6, 50, 61, 81, 88, 107, 174, 194, 230, 234, 290, 298, 302, 306, 308, 310, 311, 313, 316, 317, 319, 320, 323, 324, 326, 328, 339, 344, 350, 351, 352, 354, 356], "include_existing_imag": 320, "include_featur": [22, 27, 47], "incom": [22, 25], "income_kei": [22, 25], "incomplet": 5, "ind": 6, "ind6": 6, "index": [5, 6, 7, 8, 115, 117, 150, 152, 205, 279, 311, 319, 324], "index_select": 251, "indic": [115, 117, 251, 269, 271, 300, 304, 319, 323, 324, 326, 331], "indici": 319, "indirect": 344, "individu": [0, 137, 159, 279, 317, 320, 324], "inf": [65, 178, 214], "infer": [5, 9, 61, 75, 88, 90, 131, 174, 188, 224, 234, 288, 328, 339], "infer_building_one_by_on": [27, 47], "infer_detector": [62, 175, 211], "inference_engin": 20, "inferenceengin": [22, 25, 27, 47, 48, 50, 56], "inferred_featur": [27, 40], "info": [2, 65, 178, 214], "infom": 290, "inform": [0, 1, 3, 6, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 65, 81, 82, 107, 108, 178, 194, 195, 214, 230, 231, 245, 272, 284, 290, 291, 302, 310, 314, 316, 319, 320, 321, 323, 339, 351], "infrastructur": 0, "infrequ": 1, "inherit": [4, 86, 334, 335, 336, 361, 362, 363], "inidividu": 290, "init_backbon": [63, 176, 212], "init_weight": [84, 197, 233], "initi": [1, 7, 8, 9, 61, 84, 86, 90, 128, 174, 197, 202, 205, 209, 233, 234, 247, 302, 316, 319, 325, 345, 346, 347, 348, 349, 350, 351, 353, 358], "initialize_paramet": 252, "inp": 128, "inplan": 252, "input": [0, 2, 4, 6, 63, 69, 70, 72, 73, 79, 84, 88, 90, 106, 111, 128, 131, 133, 134, 155, 156, 174, 176, 182, 183, 185, 186, 192, 197, 202, 205, 212, 218, 219, 221, 222, 228, 233, 236, 241, 249, 251, 258, 263, 264, 265, 266, 267, 269, 271, 273, 284, 302, 311, 314, 317, 319, 321, 322, 323, 324, 326, 327, 333, 337, 345, 350, 354], "input_": [80, 193, 229], "input_data": [13, 15, 61, 88, 90, 131, 174, 234, 236, 241, 284, 295, 298, 345], "input_devic": 128, "input_dict": [59, 199, 207, 209, 243, 245, 247, 249, 274, 290, 300, 304, 306, 308, 310, 313, 316, 317, 321, 337, 350], "input_dim": [264, 265], "input_filt": [73, 186, 222], "input_imag": 15, "input_image_s": [266, 272], "input_inventori": [17, 19, 22, 25, 27, 47, 48, 50, 56, 288, 290, 316, 317], "input_resolut": 252, "input_s": [143, 263, 267], "input_typ": [321, 350], "input_valid": [8, 322], "input_valu": 326, "inputs": [133, 134, 155, 156], "inputvalid": [8, 322, 326], "insensit": [337, 364], "insert": [4, 6], "insid": [73, 186, 222, 332, 336, 363], "insight": 0, "instal": [7, 8], "instanc": [1, 61, 63, 68, 69, 70, 73, 74, 76, 79, 80, 94, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 150, 153, 155, 156, 157, 160, 174, 176, 181, 182, 183, 186, 187, 189, 192, 193, 212, 217, 218, 219, 222, 223, 225, 228, 229, 234, 236, 252, 262, 263, 264, 265, 268, 272, 276, 281, 290, 293, 295, 300, 304, 313, 317, 319, 325, 327, 333, 348, 350, 351, 355], "instanti": [4, 311, 325, 353], "instead": [6, 11, 63, 68, 69, 70, 73, 74, 76, 79, 80, 84, 106, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 192, 193, 197, 212, 217, 218, 219, 222, 223, 225, 228, 229, 233, 252, 262, 263, 264, 265, 268, 269, 272, 276, 281], "instruct": [337, 364], "insur": 290, "int": [15, 19, 56, 61, 65, 86, 88, 94, 117, 174, 178, 202, 205, 209, 214, 234, 236, 241, 249, 251, 256, 258, 263, 267, 269, 279, 284, 317, 319, 320, 321, 323, 324, 325, 329, 331, 337, 346, 349, 351, 353], "integ": [65, 70, 88, 115, 137, 159, 178, 183, 202, 214, 219, 319], "integr": [0, 4, 7, 8, 319], "intend": [7, 8, 73, 133, 134, 155, 156, 186, 222, 311, 328, 356], "intens": 316, "interact": [0, 302, 313, 322, 323, 351], "interchang": 1, "interest": [0, 1, 3, 6, 234, 291, 298, 302, 306, 308, 310, 314, 323], "interfac": [203, 291, 295, 339], "interim": 295, "interm_embed": [264, 265], "intermedi": 131, "intern": [137, 159, 319, 336, 337, 363], "interp": 100, "interpol": [84, 197, 233], "interpret": 331, "interrupt": 344, "intersect": [61, 174, 234, 310, 324], "intersectionandunion": 128, "introduc": 0, "intuit": [329, 357], "inv": [50, 327], "invalid": [88, 205, 319, 321, 323, 324, 326, 327, 337, 351], "invalid_id": 47, "invenntori": 5, "inventori": [0, 1, 2, 3, 4, 5, 6, 7, 8, 17, 19, 22, 25, 27, 46, 47, 48, 50, 56, 288, 290, 291, 293, 295, 296, 298, 300, 302, 304, 306, 308, 310, 313, 314, 316, 317, 319, 327, 330, 333, 336, 339, 347, 363], "inventory1": 333, "inventory2": 333, "inventory_arrai": [54, 55], "inventory_cr": 0, "inventory_df": 25, "inventory_geojson": 319, "inventory_json": [27, 47], "inventory_subset": 6, "inventory_to_join": 319, "inventory_valid": [8, 322], "inventoryvalid": [8, 322, 327], "invert": [72, 185, 221], "invert_affin": [84, 197, 233], "invetory_to_df": 19, "invok": [5, 81, 82, 107, 108, 194, 195, 230, 231], "io": [84, 197, 233], "iou": 271, "iou_head_depth": [264, 265], "iou_head_hidden_dim": [264, 265], "iou_pr": 272, "iou_predict": 267, "iou_threshold": [84, 197, 233], "ipynb": 0, "is_box": 326, "is_box_near_crop_edg": 271, "is_categori": 19, "is_float": 326, "is_imag": 326, "is_inventori": 327, "is_linestr": 326, "is_multilinestr": 326, "is_multipolygon": 326, "is_point": 326, "is_polygon": 326, "is_ready_to_inf": [27, 40], "is_underground": 317, "is_valid_fil": [150, 152], "iscrowd": [65, 178, 214], "isinst": 321, "isol": 3, "isomorph": [82, 108, 195, 231], "issu": [5, 80, 193, 229, 310, 323, 326, 351], "item": [50, 271, 319, 323], "iter": [115, 117, 267, 269, 317, 319], "ith": 271, "its": [0, 2, 4, 5, 6, 79, 90, 106, 117, 192, 228, 251, 288, 316, 319, 320, 321, 323, 324, 325, 326, 329, 330, 348, 353, 354, 358], "itself": [81, 107, 194, 230], "j": 342, "j2p": 6, "jigsaw_gener": 280, "jinyan": 342, "jit": 251, "join": [319, 332, 333, 334, 335, 336, 347, 360, 361, 362, 363], "join_inventori": 333, "jpg": [128, 320, 326, 331, 348], "json": [4, 5, 319, 323, 325], "json_cont": 200, "json_object": 325, "jupyt": [0, 1, 5, 6], "just": [0, 3, 73, 133, 134, 155, 156, 186, 222, 236], "jvp": [73, 133, 134, 155, 156, 186, 222], "jxw": 6, "k": [5, 19, 134, 156, 263, 268], "k_h": 263, "k_nn": 19, "k_size": 263, "k_w": 263, "kareem": 342, "keep": [3, 79, 106, 192, 228, 271, 323], "keep_exist": [5, 319], "kei": [0, 1, 2, 3, 4, 6, 11, 61, 70, 88, 90, 131, 174, 183, 202, 203, 205, 219, 234, 236, 241, 247, 249, 258, 263, 267, 268, 284, 290, 295, 302, 317, 319, 320, 323, 325, 329, 337, 349, 350, 353, 364], "kept": [79, 106, 192, 228, 323], "kera": [74, 84, 187, 197, 223, 233], "kernel_s": [73, 74, 186, 187, 222, 223, 263, 281], "key_p": 268, "keyerror": 323, "keys_to_inf": 25, "kg": [337, 364], "kijewski": 342, "kilogram": [337, 364], "kilomet": [337, 364], "kilometr": [337, 364], "kincho": 342, "km": [337, 364], "km2": [337, 364], "knn": 5, "knn_imput": 16, "knn_imputer_class": 5, "knnimput": [5, 19], "known": 267, "kriz": [150, 151], "kwarg": [52, 63, 68, 70, 73, 74, 84, 100, 111, 120, 121, 123, 124, 133, 134, 137, 144, 150, 152, 155, 156, 159, 176, 181, 183, 186, 187, 197, 212, 217, 219, 222, 223, 233, 252, 271, 276], "l": [79, 106, 145, 192, 228, 249, 263], "label": [15, 29, 65, 84, 115, 122, 128, 131, 178, 197, 202, 205, 214, 233, 247, 256, 266, 267, 269, 279, 284, 329, 331, 359], "label_cod": 256, "label_encod": 19, "labelmap": 128, "lambda": 321, "land": [50, 316], "land_cov": [50, 316], "landcov": 50, "languag": 59, "larg": [0, 7, 8, 59, 115, 253, 339], "larger": [0, 319], "largest": [70, 183, 219], "lariac2": 323, "lariac_d": 323, "lariac_sourc": 323, "last": [6, 94, 117, 273, 326], "last_lay": 143, "lat": [5, 6, 319, 324], "lat1": [311, 319, 326, 346, 350], "lat2": [311, 319, 326, 346, 350], "latest": [310, 317, 343], "latitud": [302, 311, 314, 317, 319, 324, 326, 330, 354], "latmax": 311, "latmin": 311, "latn": [319, 326, 346, 350], "latter": [5, 19, 63, 68, 69, 70, 73, 74, 76, 80, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 193, 212, 217, 218, 219, 222, 223, 225, 229, 252, 262, 263, 264, 265, 268, 272, 276, 281], "laura": 342, "law": 342, "layer": [61, 72, 79, 106, 123, 124, 144, 174, 185, 192, 221, 228, 234, 252, 263, 268, 271, 276, 290, 323], "layernorm": [252, 263], "layernorm2d": 262, "layout": 329, "lb": [290, 310, 317, 337, 364], "learn": [0, 5, 61, 174, 202, 205, 234, 284], "learnabl": [79, 106, 192, 228], "learning_r": [61, 174, 234], "least": [319, 324, 326], "lee": 317, "left": 319, "len": [1, 2, 3, 4, 6, 115, 117, 323, 324], "len_unit": 323, "length": [1, 2, 3, 4, 6, 115, 117, 251, 253, 269, 273, 290, 300, 302, 304, 306, 308, 310, 313, 317, 319, 322, 330, 337, 364], "length_unit": [298, 300, 302, 304, 306, 308, 313], "lengthi": 4, "lengthunit": [4, 302, 314], "less": [117, 319], "let": 0, "level": [0, 2, 3, 70, 88, 131, 183, 209, 219, 234, 236, 247, 291, 295, 302, 326, 330, 339], "leverag": [0, 1, 284, 324, 352], "lh": 263, "li": 319, "liabil": 344, "liabl": 344, "lib": [60, 91, 96, 159, 173, 210, 275], "licenc": [7, 8], "licens": [1, 2, 4, 5, 6, 7, 8], "lie": [336, 363], "light": 50, "lightweight": [326, 354], "like": [5, 11, 73, 186, 222, 253, 319, 335, 339, 362], "limit": [1, 234, 325, 344, 353], "limited_to_extension_typ": 320, "line": [1, 2, 3, 4, 6, 50, 290, 308, 326, 337, 364], "line_thick": [84, 197, 233], "linear": [72, 185, 221], "linearaverag": [132, 154], "linearaverageop": [133, 155], "linestr": [319, 326, 354], "link": [1, 5, 6], "list": [5, 70, 72, 73, 88, 115, 117, 131, 137, 159, 171, 183, 185, 186, 202, 205, 209, 219, 221, 222, 241, 245, 247, 249, 251, 253, 258, 267, 271, 279, 284, 290, 291, 302, 311, 314, 317, 319, 320, 323, 324, 326, 329, 337, 342, 344, 346, 354], "list_color_nam": [84, 197, 233], "literatur": 5, "lo": [323, 324], "load": [1, 2, 61, 65, 72, 73, 86, 90, 131, 171, 174, 178, 185, 186, 202, 205, 214, 221, 222, 234, 236, 249, 251, 279, 284, 310, 314, 316, 320, 330], "load_annot": [67, 180, 216], "load_api_kei": 2, "load_class": [67, 180, 216], "load_fc": [73, 186, 222], "load_imag": [67, 180, 216], "load_mask": [131, 171], "load_model": [75, 188, 224, 280], "load_predictions_from_json": 200, "load_pretrained_weight": [73, 186, 222], "load_url": 125, "load_weight": [63, 69, 72, 176, 182, 185, 212, 218, 221], "loadann": [65, 178, 214], "loadcat": [65, 178, 214], "loader": [150, 152, 279], "loadimg": [65, 178, 214], "local": [328, 356], "locat": [1, 2, 3, 4, 6, 137, 159, 202, 288, 295, 302, 314, 316, 320, 321, 329, 348, 350], "location_name_input": 321, "locationnam": [1, 2, 3, 4, 6, 310, 317, 321, 323, 350], "locationpolygon": [321, 330, 350], "log": [128, 323], "logic": [311, 323, 333, 336, 351, 363], "logit": [72, 185, 221, 267, 269, 271], "lon": [5, 6, 319, 324], "lon1": [311, 319, 326, 346, 350], "lon2": [311, 319, 326, 346, 350], "long": [29, 251, 273], "long_coord": 324, "long_side_length": 273, "long_ton": [337, 364], "longer": [73, 133, 134, 155, 156, 186, 222, 251], "longest": 273, "longest_sid": 272, "longitud": [302, 311, 314, 317, 319, 324, 326, 330, 354], "longtensor": 251, "lonmax": 311, "lonmin": 311, "lonn": [319, 326, 346, 350], "lookup": 253, "loop": 326, "loss": [0, 25, 46, 64, 86, 93, 177, 205, 213, 236, 241, 344], "loss_histori": 205, "low": [267, 269, 271, 342], "low_dim": 144, "low_res_logit": 267, "lr": [61, 76, 93, 174, 189, 225, 234, 280], "lulc": 47, "lulc_kei": 47, "lw": 263, "m": [1, 4, 6, 79, 84, 106, 122, 145, 192, 197, 228, 233, 298, 302, 317, 337, 364], "m2": [337, 364], "ma": 86, "mab": 86, "machin": 5, "mai": [1, 5, 6, 88, 94, 273, 317, 319, 330], "main": [2, 3, 4, 5, 6, 81, 90, 107, 146, 194, 230, 320, 337, 364], "main_stream": 111, "mainli": [7, 8], "maintain": 329, "make": [4, 22, 27, 47, 52, 86, 202, 203, 205, 209, 234, 247, 249, 323, 324, 325, 342, 351, 352, 353], "makedir": [5, 6], "manag": [61, 174, 202, 205, 234, 319, 320, 323, 329, 347, 357], "mani": [0, 2, 5, 73, 133, 134, 136, 155, 156, 158, 186, 222], "manipul": [94, 319, 320, 324, 347, 352], "manner": 115, "manual": 1, "map": [0, 1, 50, 73, 88, 90, 131, 186, 222, 241, 247, 249, 253, 263, 290, 295, 302, 310, 311, 317, 319, 320, 323, 324, 325, 337, 348, 353, 364], "map_loc": 125, "mapassessor": 4, "mapserv": 323, "mark": 323, "mark_volatil": 118, "marker_s": 256, "mask": [15, 19, 131, 150, 152, 171, 205, 256, 258, 264, 265, 266, 267, 269, 271, 272, 274, 322, 331, 359], "mask_build": [131, 171], "mask_data": 258, "mask_decod": [261, 267], "mask_decoder_hq": 261, "mask_imag": [150, 152, 331], "mask_impu_subset": 19, "mask_in_chan": 266, "mask_input": [267, 269, 272], "mask_nam": 205, "mask_path": 171, "mask_postprocess": 272, "mask_threshold": [267, 271], "mask_to_rle_pytorch": 271, "maskbuild": 129, "maskdata": 271, "maskdecod": 264, "maskdecoderhq": 265, "maskfold": 205, "maskfolderinst": [150, 152], "master": [0, 70, 81, 82, 107, 108, 183, 194, 195, 219, 230, 231], "master_callback": [81, 107, 194, 230], "master_msg": [81, 107, 194, 230], "match": [6, 273, 302, 319, 320, 324, 332, 334, 336, 337, 361, 363], "match_points_to_polygon": 324, "materi": [59, 319, 340, 344], "mathemat": 319, "matplotlib": [284, 329], "matrix": [94, 284], "matt": 342, "max": [137, 159, 252, 254, 317], "max_elements_per_cel": [323, 351], "max_elev": 317, "max_latitud": 330, "max_level": [70, 183, 219], "max_longitud": 330, "max_missing_data_ratio": 330, "max_parse_level": [325, 353], "max_record": 323, "max_sampl": 100, "max_siz": [84, 197, 233], "max_token": 200, "maximum": [313, 323, 329, 330, 351], "maxlat": 319, "maxlon": 319, "maxpool2d": [74, 187, 223], "maxpool2dstaticsamepad": [74, 187, 223], "maxrecordcount": 323, "maxscalenumpi": [137, 159], "mbconvblock": [72, 185, 221], "mckenna": 342, "mdistanc": 146, "mean": [4, 5, 67, 79, 84, 106, 117, 137, 159, 180, 192, 197, 216, 228, 233, 253, 339], "meaning": 0, "measur": [258, 298, 306, 308, 317, 337, 364], "mecb": 33, "mecb_config": 33, "mechan": [325, 353], "med_yr_blt": 6, "median": [5, 137, 159, 317], "medianscalenumpi": [137, 159], "medium": 316, "memori": [72, 133, 134, 155, 156, 185, 221, 316], "memory_effici": [72, 185, 221], "memoryefficientswish": [73, 186, 222], "merb": 34, "merb_config": 34, "merchant": 344, "merg": [6, 137, 159, 319, 322, 334, 336, 361, 363], "merge_two_json": [19, 22, 25, 27, 47, 56], "merging_point_inventori": [334, 361], "mesh": [4, 290, 300, 304, 313, 323, 324, 352], "mesh_plot": 324, "mesh_polygon": 324, "messag": [11, 81, 107, 194, 230, 300, 304, 321, 323, 326], "met": [247, 249, 344], "meta": [84, 197, 233], "metadata": [2, 9, 131, 295, 313, 319, 320, 329, 330, 348], "meter": [298, 302, 337, 364], "method": [1, 2, 3, 4, 5, 6, 13, 15, 17, 19, 22, 25, 27, 46, 47, 48, 50, 52, 56, 61, 72, 88, 90, 117, 136, 158, 174, 185, 202, 203, 205, 221, 234, 236, 247, 269, 273, 274, 288, 290, 291, 296, 298, 300, 302, 304, 306, 308, 310, 311, 313, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 337, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364], "method_nam": 333, "methodnam": [83, 109, 196, 232], "methods_": 174, "methods__": [241, 245], "metr": [337, 364], "metric": [88, 279, 337, 364], "metric_ton": [337, 364], "mg": [337, 364], "mh_config": 35, "mi": [337, 364], "mi2": [337, 364], "microsoft": [1, 298, 314, 317], "mid_featur": 145, "might": [79, 106, 192, 228, 339], "mile": [324, 337, 364], "milligram": [337, 364], "millimet": [337, 364], "millimetr": [337, 364], "min": [5, 137, 159, 317], "min_area": 258, "min_depth": [73, 186, 222], "min_elev": 317, "min_latitud": 330, "min_longitud": 330, "min_mask_region_area": 258, "mini": [79, 106, 117, 192, 228], "minim": [69, 182, 218, 290], "minlat": 319, "minlon": 319, "mirror": [73, 186, 222], "mislabel": 326, "mismatch": [337, 364], "miss": [0, 2, 5, 11, 17, 19, 50, 88, 90, 325, 326, 328, 330, 339, 350, 353], "mitig": 2, "ml": 317, "mlp": [143, 264, 265], "mlp_dim": [262, 268], "mlp_ratio": 263, "mlpblock": 262, "mlri": 36, "mlri_config": 36, "mlrm": 37, "mlrm_config": 37, "mm": [337, 364], "mm2": [337, 364], "mmuh": 38, "mmuh_config": 38, "mnist": 150, "mnistinst": [150, 153], "mobil": [72, 185, 221], "mobilenet": 119, "mobilenet_v2": 121, "mobilenetv2": 121, "mobilenetv2dil": 122, "modal": 5, "mode": [73, 128, 133, 134, 137, 155, 156, 159, 186, 222, 271, 317], "mode_nam": 94, "model": [0, 46, 56, 59, 61, 64, 71, 73, 76, 79, 84, 86, 88, 90, 91, 93, 96, 131, 174, 177, 184, 186, 189, 192, 197, 202, 205, 213, 220, 222, 225, 228, 233, 234, 236, 241, 245, 249, 250, 251, 254, 257, 258, 269, 272, 273, 275, 276, 280, 284, 319, 322, 328, 329, 356, 357], "model_arch": [200, 202, 205, 249], "model_descript": 328, "model_dir": [125, 129, 131], "model_fil": [131, 284], "model_info": 280, "model_inp_s": 202, "model_nam": [72, 73, 76, 185, 186, 189, 221, 222, 225, 280], "model_path": [61, 75, 86, 88, 90, 174, 188, 202, 205, 224, 234, 236, 241, 328], "model_properti": 202, "model_util": [8, 322], "modelbuild": 122, "modelpath": [61, 90, 174, 234, 236, 274], "modelutil": [8, 322, 328], "modelwithloss": [76, 189, 225], "modes_onli": 317, "modif": [4, 344], "modifi": [1, 2, 69, 70, 93, 120, 121, 182, 183, 218, 219, 271, 272, 302, 317, 319], "modifiedresnet": 252, "modul": [2, 3, 4, 6, 7, 8, 9, 12, 14, 16, 18, 20, 21, 24, 26, 28, 49, 51, 53, 57, 58, 60, 62, 64, 71, 77, 78, 85, 87, 89, 91, 92, 95, 96, 97, 104, 110, 112, 113, 119, 132, 140, 146, 150, 154, 162, 165, 170, 173, 175, 177, 184, 190, 191, 198, 201, 204, 206, 208, 210, 211, 213, 220, 226, 227, 235, 237, 240, 242, 244, 246, 248, 250, 255, 257, 261, 270, 275, 278, 285, 286, 289, 292, 294, 297, 299, 301, 303, 305, 307, 309, 312, 315, 318, 322, 332, 353], "modular": 4, "modulate_occ": [22, 52], "modulate_weight": [22, 52], "momentum": [79, 80, 106, 133, 134, 155, 156, 192, 193, 228, 229], "monkei": [82, 108, 195, 231], "more": [0, 5, 73, 133, 134, 155, 156, 186, 222, 251, 264, 265, 313, 323, 339], "more_featur": 319, "mosaic": 316, "most": [4, 72, 93, 185, 221], "move": [84, 197, 233], "mp_dic": 19, "mpoli": 324, "ms_class": 1, "ms_footprint_handl": [4, 297], "ms_footprint_scrap": [4, 285], "ms_footprintscrap": [1, 4, 298], "ms_inventori": 1, "ms_scraper": 1, "msf": 39, "msf_config": 39, "msg": [81, 107, 194, 230], "multi": [263, 319, 326, 354], "multilinestr": 326, "multimask_output": [264, 265, 267, 269], "multinomi": [136, 158], "multipl": [0, 5, 70, 79, 82, 106, 108, 115, 183, 192, 195, 219, 228, 231, 234, 264, 265, 267, 269, 298, 317, 319, 323, 324], "multipli": [73, 186, 222], "multipolygon": [324, 326], "multiscal": [70, 183, 219], "must": [13, 15, 48, 70, 73, 133, 134, 155, 156, 183, 186, 203, 219, 222, 268, 288, 291, 296, 300, 304, 311, 319, 321, 324, 326, 337, 344, 350], "mutualexclud": [137, 159], "mvit": 263, "mvitv2": 263, "my_data": 202, "my_image_set": 329, "my_model": 328, "my_multipolygon": 324, "my_polygon": 324, "my_predict": 329, "mydata": 4, "myer": 317, "mymodel": 325, "m\u00b2": [337, 364], "n": [1, 6, 70, 79, 106, 136, 139, 158, 161, 183, 192, 219, 228, 266, 269, 280], "n_bldg_subset": 22, "n_head": 252, "n_layer": 271, "n_per_sid": 271, "n_point": 268, "n_possible_world": [5, 19, 22, 25, 27, 47], "n_pw": [19, 22, 27, 47, 56, 319], "na": [1, 5, 6], "name": [0, 1, 2, 4, 6, 11, 65, 73, 76, 178, 186, 189, 202, 205, 214, 222, 225, 236, 238, 239, 249, 251, 279, 290, 291, 302, 308, 310, 311, 314, 317, 319, 320, 321, 323, 324, 325, 329, 331, 333, 337, 348, 350, 353, 364], "namedtupl": [72, 73, 185, 186, 221, 222], "nan": [310, 337, 364], "narg": [1, 2, 6], "nation": [6, 7, 8, 50, 300, 302, 304, 317, 340], "nativ": 330, "natur": [7, 8, 339, 342], "nb_epoch": 280, "nbi": 300, "nbi_scrap": 285, "nbiscrap": 300, "nbldg_per_clust": 19, "nbrs_g": 19, "nc": 331, "nceaverag": [132, 154], "ncecriterion": [132, 154], "ncefunct": [134, 156], "ncrop": 3, "ndarrai": [67, 137, 159, 180, 216, 258, 269, 279, 284, 331], "nearest": [19, 88, 137, 159, 332], "nearestneighbour": 5, "necessari": [73, 117, 186, 222, 241, 300, 304, 313, 328, 356], "necessarili": 340, "need": [1, 2, 3, 4, 25, 63, 68, 69, 70, 73, 74, 76, 79, 80, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 192, 193, 212, 217, 218, 219, 222, 223, 225, 228, 229, 252, 253, 262, 263, 264, 265, 268, 269, 272, 276, 281, 311, 313, 328, 339, 356], "needed_featur": [27, 40], "needed_kei": [22, 25], "needs_input_grad": [73, 133, 134, 155, 156, 186, 222], "neeed": [4, 6], "neglig": 344, "neighbor": [19, 332], "nepoch": [61, 86, 174, 202, 205, 234, 236, 241], "nest": [61, 174, 234, 319, 324, 326, 354], "net": 280, "net_dec": 122, "net_enc": 122, "network": [0, 73, 79, 106, 137, 159, 186, 192, 222, 228, 308, 323, 351], "neural": [137, 159], "new": [3, 4, 6, 17, 19, 22, 25, 27, 47, 48, 50, 56, 86, 115, 202, 234, 236, 258, 288, 311, 319, 320, 333, 339], "new_featur": 319, "new_inventori": 5, "new_nam": 319, "new_prop": 22, "new_stat": 271, "nfhlrest_firmett": 323, "nfloor_detector": [0, 210], "nfloor_detector_class": 234, "nfloor_gpt": 57, "nfloor_vlm": 57, "nfloordetector": 234, "nfloorgpt": [207, 243], "nfloors_detector": 57, "nfloorsgpt": 0, "nfloorsvlm": 0, "nfloorvlm": 209, "nga": 6, "ngpu": [61, 174, 234], "nheri": [0, 7, 8, 339, 342, 343], "nightli": [4, 6], "nj": 46, "nlcd": [50, 316], "nlcd_infer": 20, "nlcd_scraper": 315, "nlcd_to_coarse_land_cov": 49, "nlcdscraper": 316, "nlcdtocoarselandcov": 50, "nlem": [135, 157], "nm": [69, 182, 218, 258], "nms_thresh": 258, "nms_threshold": 256, "nn": [79, 103, 192, 228, 251, 262, 263, 264, 265, 266, 268, 284], "no_urm": 52, "nois": [137, 159], "non": [1, 19, 73, 115, 131, 133, 134, 155, 156, 171, 186, 222, 251, 263, 269, 325, 326, 353], "none": [4, 11, 15, 25, 27, 47, 59, 61, 65, 67, 69, 70, 72, 73, 76, 82, 84, 86, 90, 93, 108, 111, 122, 125, 131, 133, 134, 150, 151, 152, 153, 155, 156, 171, 174, 178, 180, 182, 183, 185, 186, 189, 195, 197, 199, 200, 202, 205, 207, 209, 214, 216, 218, 219, 221, 222, 225, 231, 233, 234, 236, 241, 243, 245, 247, 249, 251, 252, 256, 258, 259, 260, 263, 266, 269, 274, 276, 279, 284, 290, 300, 304, 310, 314, 316, 317, 319, 320, 323, 324, 326, 329, 331, 337, 346, 348, 364], "nonexist": 319, "noqa": 263, "norm": [69, 182, 218], "norm_lay": [263, 276], "normal": [67, 79, 80, 106, 132, 137, 154, 159, 180, 192, 193, 202, 216, 228, 229, 253, 263, 266, 267, 311, 337], "normalize_bbox_ord": 311, "normalize_unit": 337, "normalized_shap": 252, "normalizenumpi": [137, 159], "north_build": 320, "north_view": 320, "notadirectoryerror": [90, 131, 202, 205, 284], "notat": [73, 186, 222], "note": [1, 11, 79, 82, 88, 94, 106, 108, 131, 192, 195, 228, 231, 302, 310, 313, 330], "notebook": 0, "notfounderror": [11, 325, 353], "notic": 344, "notimplementederror": [202, 323, 351], "notsupportedcliexcept": 128, "now": [6, 252], "np": [5, 258, 269, 279, 284, 331], "npid": 91, "npid_dataset": 146, "npid_lib": 146, "npid_model": 146, "npid_toolbox": 146, "npp": 19, "nr_slave": [81, 107, 194, 230], "nsampl": 319, "nsi": [0, 7, 8, 302, 339], "nsi2brailsmap": 302, "nsi_class": 6, "nsi_data": 6, "nsi_integr": 0, "nsi_inventori": 6, "nsi_inventory_subset": 6, "nsi_pars": [6, 285], "nsmall": 1, "nti": 304, "nti_scrap": 285, "ntiscrap": 304, "num": [3, 4], "num_anchor": [69, 182, 218], "num_channel": [69, 182, 218, 262], "num_class": [63, 69, 72, 73, 122, 123, 124, 143, 176, 182, 185, 186, 212, 218, 221, 222, 254, 276, 280], "num_dense_lay": 143, "num_epoch": [76, 189, 225], "num_featur": [79, 80, 106, 192, 193, 228, 229], "num_gpu": [76, 84, 189, 197, 225, 233], "num_head": [252, 263, 268], "num_lay": [69, 182, 218, 264, 265], "num_multimask_output": [264, 265], "num_point": [272, 317], "num_pos_feat": 266, "num_repeat": [73, 186, 222], "num_sampl": [117, 329], "num_stori": 6, "num_window": 263, "num_work": [76, 189, 225], "number": [0, 1, 2, 5, 6, 19, 56, 61, 70, 73, 86, 94, 117, 133, 134, 155, 156, 174, 183, 186, 202, 205, 207, 209, 219, 222, 234, 236, 241, 243, 249, 251, 266, 267, 269, 279, 302, 306, 313, 317, 319, 320, 323, 324, 329, 331, 337, 339, 351], "numberofstori": [22, 25, 27, 47], "numberofstories_kei": [22, 25, 27, 47], "numberofunit": 47, "numberofunits_kei": 47, "numclass": 128, "numer": [79, 80, 106, 192, 193, 228, 229, 311, 319, 320, 337], "numpi": [70, 94, 137, 159, 183, 219, 273, 331], "nums_block_list": 145, "nums_class": 145, "numstori": [1, 5, 6], "nuse": 1, "nx2": 269, "o": [2, 3, 5, 6], "o65dis": 6, "obj": [111, 118, 319, 325], "obj_list": [76, 84, 189, 197, 225, 233], "objdata": 325, "object": [0, 3, 4, 6, 7, 8, 15, 50, 61, 65, 67, 73, 75, 76, 81, 82, 86, 88, 90, 107, 108, 115, 117, 122, 128, 129, 131, 133, 134, 136, 137, 139, 155, 156, 158, 159, 161, 171, 174, 178, 180, 186, 188, 189, 194, 195, 199, 202, 205, 209, 214, 216, 222, 224, 225, 230, 231, 234, 236, 241, 245, 247, 249, 253, 256, 258, 269, 271, 273, 274, 279, 284, 290, 298, 300, 302, 304, 308, 310, 313, 314, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 337, 339, 347, 349, 351, 355, 358], "objectid": [290, 323], "obtain": [1, 2, 3, 6, 13, 15, 81, 107, 194, 230, 271, 290, 293, 295, 296, 310, 313, 321, 323, 339, 343, 350], "occ": [22, 52], "occtyp": 6, "occup": [0, 5, 6, 236, 302], "occupancy2": 5, "occupancy_classifi": [0, 57], "occupancyclass": [22, 25, 27, 47], "occupancyclass_kei": [22, 25, 27, 47], "occupancyclassifi": 236, "occur": [1, 11, 94, 323, 328], "odd": 324, "odgt": 100, "offici": [73, 186, 222], "often": 269, "ogc": 319, "old_nam": 319, "older": 251, "oldh": 273, "oldw": 273, "one": [0, 5, 19, 50, 63, 68, 69, 70, 73, 74, 76, 79, 80, 81, 88, 94, 106, 107, 117, 122, 123, 124, 133, 134, 135, 137, 138, 141, 142, 143, 144, 145, 155, 156, 157, 159, 160, 176, 181, 182, 183, 186, 187, 189, 192, 193, 194, 212, 217, 218, 219, 222, 223, 225, 228, 229, 230, 234, 252, 262, 263, 264, 265, 268, 272, 276, 281, 284, 319, 320, 321, 326, 329, 337, 350], "onli": [0, 5, 6, 61, 79, 81, 106, 107, 174, 192, 194, 228, 230, 234, 269, 302, 310, 311, 319, 320, 324, 329], "onlin": 1, "onnx": [73, 186, 222, 270], "onnx_export": [69, 182, 218], "onto": [331, 359], "open": [1, 2, 3, 7, 8, 50, 258, 326, 330, 354], "openstreetmap": [1, 306, 308, 314], "oper": [50, 73, 115, 133, 134, 155, 156, 186, 202, 205, 222, 319, 322, 324, 352], "opinion": 340, "oppos": 252, "opposit": 326, "opt": 100, "optim": [61, 76, 90, 93, 174, 189, 202, 225, 234, 251], "option": [5, 15, 52, 86, 90, 93, 131, 171, 174, 200, 202, 205, 209, 236, 245, 249, 256, 272, 284, 302, 311, 317, 319, 320, 321, 323, 324, 328, 329, 330, 331, 337, 346, 348, 364], "optional_needed_kei": [22, 25], "order": [117, 319, 324], "org": 328, "organ": [0, 61, 174, 300, 304], "orient": [7, 8, 339], "orig_box": 271, "orig_h": 271, "orig_im_s": 272, "orig_net": 122, "orig_resnet": 122, "orig_w": 271, "origin": [6, 50, 82, 108, 195, 231, 263, 267, 269, 271, 273, 319, 331, 339], "original_image_s": 269, "original_s": [267, 273], "orthomosa": 330, "osm": [1, 306, 308, 314, 321, 323], "osm_class": 1, "osm_footprint_scrap": [4, 285, 330], "osm_footprintscrap": [1, 4, 6, 306, 330], "osm_footprintsscrap": 1, "osm_id": 321, "osm_inventori": 1, "osm_power_network_scrap": 285, "osm_powernetworkscrap": 308, "osm_scrap": 1, "other": [5, 73, 115, 133, 134, 155, 156, 186, 222, 236, 249, 298, 302, 323, 344], "other_data_path": [150, 152], "other_idea": 57, "otherwis": [0, 73, 93, 186, 222, 258, 319, 320, 325, 326, 327, 337, 344], "ounc": [337, 364], "our": 317, "out": [1, 6, 171, 302, 339, 344], "out_chan": 263, "out_channel": [69, 73, 74, 141, 142, 182, 186, 187, 218, 222, 223], "out_featur": 145, "out_plan": [122, 281], "outcom": [136, 158], "outfil": [302, 324], "outlin": [5, 324, 342], "output": [0, 1, 5, 6, 13, 15, 72, 73, 79, 90, 94, 106, 133, 134, 155, 156, 185, 186, 192, 205, 221, 222, 228, 269, 271, 273, 284, 290, 302, 314, 319, 324, 329, 330, 331, 337, 357], "output_devic": [82, 108, 111, 195, 231], "output_dim": [143, 252, 264, 265], "output_dim_ff": 143, "output_dir": [15, 256, 274, 331], "output_fil": [200, 319, 324], "output_filt": [73, 186, 222], "output_mod": 258, "output_path": 274, "output_s": 143, "outputfil": 314, "outputs": [133, 134, 155, 156], "outsid": 302, "over": [79, 90, 94, 106, 117, 192, 202, 228, 236, 258, 267, 324], "overlai": [1, 330, 331, 359], "overlaid": 331, "overlaid_imag": 331, "overlaid_imageri": 330, "overlap": [115, 263], "overlap_ratio": 271, "overlay_asset_outlin": 330, "overpass": 308, "overrid": [5, 73, 115, 133, 134, 155, 156, 186, 222], "overridden": [63, 68, 69, 70, 73, 74, 76, 80, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 193, 212, 217, 218, 219, 222, 223, 225, 229, 252, 262, 263, 264, 265, 268, 272, 276, 281], "override_param": [72, 73, 185, 186, 221, 222], "overs": 323, "overtur": [1, 310, 311], "overture_id": 317, "overture_maps_footprint_scrap": 309, "overture_maps_scrap": [285, 317], "overture_releas": 310, "overturemap": [4, 310, 311], "overturemapsfootprintscrap": [310, 311, 317], "overturemapsscrap": [310, 311, 317], "overturereleas": [310, 317], "overview": 1, "overwirte_exist": [22, 25, 27, 47], "overwrit": [56, 319, 328], "own": [1, 258], "oz": [337, 364], "p": [6, 73, 100, 129, 137, 159, 186, 222], "p1": 324, "p2": 324, "p3_0": [69, 182, 218], "p3_2": [69, 182, 218], "p4_0": [69, 182, 218], "p4_1": [69, 182, 218], "p4_2": [69, 182, 218], "p5_0": [69, 182, 218], "p5_1": [69, 182, 218], "p5_2": [69, 182, 218], "p6_0": [69, 182, 218], "p6_1": [69, 182, 218], "p6_2": [69, 182, 218], "p7_0": [69, 182, 218], "p7_2": [69, 182, 218], "packag": [7, 137, 159, 319, 325, 330, 338, 353], "package_nam": [325, 353], "package_path": [325, 353], "pad": [73, 74, 94, 186, 187, 222, 223, 263, 267, 281], "pad_hw": 263, "page": [7, 8], "pair": [205, 253, 311, 314, 317, 319, 320, 324, 326, 346], "pano": 3, "paper": [263, 342], "parallel": [81, 82, 104, 107, 108, 194, 195, 230, 231, 317, 323, 351], "param": [65, 73, 93, 94, 133, 134, 137, 155, 156, 159, 178, 186, 214, 222, 263, 276], "paramet": [11, 13, 15, 17, 19, 22, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 56, 61, 65, 70, 72, 73, 79, 81, 88, 90, 93, 106, 107, 115, 117, 121, 123, 124, 131, 144, 174, 178, 183, 185, 186, 192, 194, 203, 205, 214, 219, 221, 222, 228, 230, 234, 236, 247, 249, 251, 252, 258, 263, 264, 265, 266, 267, 268, 269, 279, 284, 288, 290, 291, 293, 295, 296, 298, 300, 302, 304, 306, 308, 310, 311, 313, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 337, 345, 346, 348, 349, 350, 351, 353, 358], "parameters__": 202, "parent": 247, "pars": [0, 1, 2, 3, 4, 6, 88, 128, 310, 314, 317, 323, 324, 325, 337, 351, 353], "parse_aim": 46, "parse_arg": [1, 2, 3, 4, 6], "parse_devic": 128, "parse_input_list": 100, "parse_unit": 337, "parsed_api_kei": 2, "parser": [1, 2, 3, 4, 6], "part": [4, 310, 324], "particular": [319, 344], "particularli": 1, "partit": 263, "pass": [63, 68, 69, 70, 73, 74, 76, 80, 81, 107, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 193, 194, 212, 217, 218, 219, 222, 223, 225, 229, 230, 252, 262, 263, 264, 265, 267, 268, 269, 272, 276, 281, 323, 337, 339, 351, 364], "patch": [82, 108, 195, 231, 263, 330], "patch_replication_callback": [82, 108, 195, 231], "patch_siz": [252, 263], "patch_sync_batchnorm": [79, 192, 228], "patchemb": 263, "path": [2, 3, 4, 5, 6, 13, 15, 61, 63, 86, 88, 90, 131, 150, 152, 171, 174, 176, 202, 205, 212, 234, 236, 241, 251, 274, 279, 284, 296, 319, 320, 323, 325, 326, 328, 329, 330, 331, 349, 353, 354, 358], "path_to_dir": 320, "pathlib": 3, "pd": [88, 319], "pdf": 326, "peak": [137, 159], "per": [79, 106, 192, 202, 205, 228, 236, 241, 313, 323, 337, 351], "percentag": [5, 253], "perfect": [1, 5, 6], "perform": [1, 4, 6, 61, 63, 68, 69, 70, 73, 74, 76, 80, 86, 90, 93, 122, 123, 124, 131, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 174, 176, 181, 182, 183, 186, 187, 189, 193, 202, 205, 212, 217, 218, 219, 222, 223, 225, 229, 234, 236, 252, 262, 263, 264, 265, 268, 272, 276, 279, 281, 323, 324, 326, 328, 332, 333, 334, 336, 337, 352, 361, 363, 364], "period": 1, "permit": 344, "perspect": 234, "pic": 129, "piec": [5, 94], "pil": [137, 159, 251], "pip": [137, 159, 343], "pipe": [81, 107, 194, 230], "pipelin": [131, 284], "pitch": [0, 88], "pixel": [258, 267, 269], "pixel_acc": 122, "pixel_mean": 267, "pixel_std": 267, "pkl": 90, "place": [3, 81, 88, 107, 124, 194, 230, 258, 319, 337, 350], "placehold": 50, "plainradam": 93, "plan": [3, 302], "planarea": [22, 25, 47], "planarea_kei": [22, 25, 47], "plane": 252, "platform": 1, "platt": [137, 159], "pleas": [3, 317, 330, 331, 342, 358, 359], "plot": [86, 202, 205, 236, 241, 313, 323, 324, 329, 352], "plot_accuraci": 202, "plot_cel": [313, 323], "plot_imag": 329, "plot_loss": [86, 205, 236, 241], "plot_mesh": 323, "plot_one_box": [84, 197, 233], "plot_polygon_cel": [323, 324], "plot_tool": [8, 322], "plottool": [8, 322, 329], "plt": 284, "plu": 326, "pmg": 281, "png": [320, 324, 326, 348], "point": [2, 5, 6, 258, 264, 265, 266, 267, 268, 269, 271, 302, 314, 317, 319, 324, 326, 332, 334, 335, 336, 352, 354, 361, 362, 363], "point1": 319, "point_coord": [258, 267, 269, 272], "point_embed": 268, "point_grid": 258, "point_inventori": [319, 335, 336, 362, 363], "point_label": [267, 269, 272], "points_per_batch": 258, "points_per_sid": 258, "poisson": [137, 159], "poisson_downsampl": [137, 159], "poissonsubsampl": [137, 159], "poli": [324, 326], "poly1": 324, "poly2": 324, "poly_inventori": 319, "polygon": [0, 61, 174, 234, 302, 308, 313, 317, 319, 321, 323, 324, 326, 330, 332, 335, 336, 350, 351, 352, 354, 362, 363], "polygon1": 319, "polygon1_asset": 319, "polygon2": 319, "polygon2_asset": 319, "polygon_inventori": [335, 336, 362, 363], "pool": [252, 323], "pool_scal": 122, "pop2amo65": 6, "pop2amu65": 6, "pop2pmo65": 6, "pop2pmu65": 6, "popual": 46, "popul": [46, 290, 316, 317], "populate_featur": [288, 290, 316, 317], "posit": [90, 263, 264, 265, 266, 268, 319], "position": 266, "positionembeddingrandom": 266, "possibl": [4, 5, 19, 56, 90, 319, 339, 344], "possible_height": 319, "possibli": 115, "postfirm": 27, "postfirm_kei": 27, "postfirm_year_by_c": 27, "postprocess": [84, 197, 233, 272], "postprocess_mask": 267, "postprocess_small_region": 258, "pound": [337, 364], "power": [0, 138, 160, 308], "ppm": 122, "ppm_deepsup": [122, 129], "ppmdeepsup": 122, "practic": [137, 159], "pre": [61, 86, 90, 121, 123, 124, 131, 144, 171, 174, 202, 205, 234, 276, 284, 328, 356], "precis": [337, 364], "pred": [75, 84, 122, 128, 188, 197, 224, 233], "pred_idx_to_label": 254, "pred_iou_thresh": 258, "predefin": [247, 284], "predict": [0, 4, 59, 61, 75, 86, 88, 90, 131, 174, 188, 199, 202, 203, 205, 207, 209, 224, 234, 236, 238, 239, 241, 243, 245, 247, 249, 258, 264, 265, 267, 269, 271, 274, 284, 319, 329, 357], "predict_mask": [264, 265], "predict_torch": 269, "predict_wrapp": 254, "predicted_i": 258, "prediction_df": 254, "predictor": [90, 234, 257], "preliminari": 323, "preliminary_cel": 323, "prepar": [0, 171, 202, 236, 279], "prepend": 252, "preprocess": [84, 90, 131, 197, 233, 251, 254, 267, 279, 284], "preprocess_batch_img": 254, "preprocess_video": [84, 197, 233], "prescrib": 339, "presenc": 0, "present": [0, 234, 267, 319, 323, 324, 329, 357], "preset": 319, "pretrain": [73, 120, 121, 123, 124, 125, 131, 144, 186, 222, 234, 276, 280], "previou": [0, 269], "primari": [234, 333, 334, 361], "primarili": 0, "primit": [5, 319], "print": [1, 2, 3, 4, 5, 6, 50, 65, 131, 178, 214, 284, 290, 311, 317, 319, 320, 321, 323, 324, 330, 337], "print_info": [1, 2, 3, 4, 6, 290, 317, 319, 320], "print_mod": 317, "print_output": 6, "print_r": [131, 284], "print_releas": 311, "prob": [136, 158], "probabl": [117, 284], "proc": [137, 159], "proce": 5, "procedure__": 202, "process": [1, 2, 3, 4, 6, 22, 25, 27, 47, 48, 56, 61, 88, 90, 174, 234, 249, 268, 290, 300, 302, 304, 306, 308, 311, 316, 317, 319, 321, 323, 350], "process_rang": 128, "processor": [4, 5, 9, 339], "procur": 344, "produc": [0, 3, 4, 5, 115, 269, 323, 331], "profit": 344, "progress": [0, 276, 323], "project": 268, "prompt": [200, 209, 245, 247, 249, 264, 265, 266, 267, 269, 272], "prompt_and_save_capt": 200, "prompt_encod": [261, 267], "prompt_str": 199, "promptencod": 266, "propag": 263, "proper": 319, "properli": 236, "properti": [15, 81, 88, 107, 115, 194, 230, 252, 256, 267, 269, 319, 320, 348], "proport": 330, "provid": [0, 1, 3, 4, 5, 25, 46, 50, 56, 59, 61, 86, 90, 115, 117, 131, 171, 174, 202, 203, 205, 207, 234, 236, 241, 243, 245, 267, 269, 273, 284, 290, 291, 293, 295, 298, 302, 306, 308, 310, 311, 313, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 334, 336, 337, 339, 342, 344, 345, 347, 348, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 363, 364], "proxim": [332, 334, 336, 361, 363], "pth": [61, 76, 129, 174, 189, 202, 205, 225, 234, 328], "public_school": 323, "publish": 342, "pure": 203, "purpos": [2, 3, 4, 6, 115, 234, 329, 344, 357], "put": [7, 8, 81, 107, 194, 230, 251], "py": [1, 2, 3, 4, 5, 6, 70, 137, 159, 183, 219, 263], "pycoco": 271, "pypi": [4, 6, 343], "pyramid_level": [70, 183, 219], "python": [0, 3, 4, 5, 150, 151], "python3": [1, 3, 4, 5, 6, 137, 159], "pytorch": [79, 80, 106, 121, 192, 193, 202, 205, 228, 229, 279, 284], "q": [263, 268], "q_h": 263, "q_size": 263, "q_w": 263, "qkv": 252, "qkv_bia": 263, "quadkei": 298, "qualit": [329, 357], "qualiti": [1, 258, 264, 265, 267, 269], "quatntati": 5, "queri": [263, 268, 306, 308, 317, 319, 321, 323, 347, 351], "query_area": [321, 324, 350], "query_p": 268, "queryarea": 314, "queue": [81, 107, 194, 230], "quick": [1, 2, 3, 150, 152], "quickgelu": 252, "quickli": 0, "r": [2, 3, 73, 133, 134, 145, 155, 156, 186, 222, 317], "r6q": 6, "radam": 92, "rais": [2, 3, 11, 70, 88, 90, 131, 183, 205, 219, 247, 249, 284, 290, 293, 295, 300, 304, 311, 313, 319, 321, 323, 324, 325, 326, 327, 328, 329, 333, 337, 350, 351, 353, 358, 364], "raises__": 202, "randn": [79, 106, 192, 228], "random": [1, 2, 3, 137, 159, 266, 317, 319, 329], "random_num_gener": [137, 159], "random_se": 329, "random_split": 115, "random_st": [137, 159], "randomcropnumpi": [137, 159], "randomgaussianblur": [137, 159], "randomli": [3, 115, 117, 137, 159, 234, 317, 319, 329], "randomrot": [137, 159], "randomsampl": 117, "rang": [65, 115, 117, 178, 214, 319], "range_max": [137, 159], "range_min": [137, 159], "rapid": [0, 322, 330, 358], "rapid_tool": 0, "rapid_util": [8, 322], "rapidutil": [8, 322, 330], "raster": [316, 330], "raster_test_data": 330, "rate": [61, 72, 174, 185, 221, 234, 290], "ratio": [323, 329], "raw": [3, 6, 302], "rb": 321, "rcc": 86, "re": [4, 6, 61, 80, 174, 193, 229, 234, 253, 269, 328, 339], "read": [3, 50, 302, 310, 317, 319, 330], "read_from_csv": [5, 319], "readabl": [73, 186, 222, 319, 321, 324, 328, 337], "readi": 0, "readlin": [2, 3], "real": [1, 74, 187, 223], "realiz": [19, 56, 319], "receiv": [81, 107, 194, 230], "receiving_point_inventori": [334, 361], "recip": [63, 68, 69, 70, 73, 74, 76, 80, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 193, 212, 217, 218, 219, 222, 223, 225, 229, 252, 262, 263, 264, 265, 268, 272, 276, 281], "recogn": 337, "recognit": [137, 159], "recommend": [267, 340], "record": [258, 323, 328], "rect": [323, 326], "rectangl": [323, 324, 326], "rectangular": [290, 306, 323, 324, 326, 351], "recurs": [79, 192, 228, 319, 323], "red": 319, "redistribut": 344, "reduc": [79, 106, 192, 228, 319], "reevalu": 93, "refer": [8, 84, 197, 233, 319, 337, 342, 364], "refin": 323, "reflect": [137, 159, 340], "reformat": 337, "regent": 344, "region": [0, 1, 2, 6, 7, 8, 22, 52, 137, 159, 258, 271, 291, 298, 300, 302, 304, 306, 308, 310, 313, 317, 321, 323, 324, 339, 342, 350, 351], "region_boundari": [4, 8, 318, 323], "region_boundary_class": [1, 2, 3, 4, 6, 310, 317, 321, 323, 350], "region_boundary_object": [1, 2, 3, 4, 6, 310, 317, 330], "region_data": [310, 317, 330], "regionboundari": [1, 2, 3, 4, 6, 8, 291, 298, 300, 302, 304, 306, 308, 310, 313, 317, 321, 323, 330, 339], "regioninput": 321, "regist": [63, 68, 69, 70, 73, 74, 76, 80, 81, 107, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 193, 194, 212, 217, 218, 219, 222, 223, 225, 229, 230, 252, 262, 263, 264, 265, 268, 272, 276, 281], "register_slav": [81, 107, 194, 230], "regress": [68, 70, 84, 181, 183, 197, 217, 219, 233], "regressbox": [84, 197, 233], "regressor": [69, 84, 182, 197, 218, 233], "reject": 326, "rel": [90, 263], "rel_po": 263, "rel_pos_h": 263, "rel_pos_w": 263, "rel_pos_zero_init": 263, "relat": [209, 247, 271, 320, 348], "relationship": [334, 335, 361, 362], "releas": [7, 8, 310, 311, 317], "relev": [46, 290, 298, 302], "reli": [2, 328, 356], "reliabl": 234, "relu": [122, 268, 281], "remov": [3, 137, 159, 258, 263, 267, 271, 319, 329, 339], "remove_asset": 319, "remove_featur": 319, "remove_small_region": 271, "renam": 319, "reorder": 311, "repaircost": [5, 6], "repeat": [73, 186, 222], "replac": [5, 79, 117, 192, 228, 302, 319, 324], "replace_stride_with_dil": 276, "replace_w_sync_bn": [84, 197, 233], "replacementcost": [22, 25, 47], "replacementcost_kei": [22, 25], "replic": [78, 81, 105, 107, 191, 194, 227, 230], "report": [61, 174, 234, 327, 355], "repositori": [73, 120, 121, 186, 222, 342], "repres": [0, 5, 17, 70, 73, 115, 133, 134, 155, 156, 183, 186, 209, 219, 222, 247, 253, 300, 304, 319, 320, 321, 323, 324, 326, 329, 331, 346, 347, 348, 354], "represent": [251, 319, 324, 331, 337], "reproduc": [19, 56, 317, 319, 329, 344], "request": [5, 290, 295, 317, 323, 351], "requested_attribut": 290, "requested_field": 323, "requestexcept": 323, "requir": [1, 2, 4, 6, 11, 61, 73, 88, 133, 134, 155, 156, 174, 186, 203, 222, 236, 241, 251, 258, 273, 274, 319, 325, 330, 345, 350, 353], "require_grad": 280, "rerun": 258, "res1": [5, 6], "res3_ab_to_res1": 52, "res3a": [5, 6], "research": [0, 7, 8], "reserv": 344, "reset": [139, 161, 269], "reset_imag": 269, "reset_paramet": [80, 193, 229], "reset_running_stat": [80, 193, 229], "residenti": [5, 236], "residu": [72, 185, 221, 263], "residual_attention_network": 140, "residualattentionblock": 252, "residualattentionmodel_92": 143, "residualattentionmodel_92_32input": 143, "residualattentionmodel_92_32input_upd": 143, "residualattentionmodel_92_smal": 143, "residualattentionmodel_92_small_1d": 143, "residualblock": 142, "residualblock1d": 142, "resiz": [67, 90, 137, 159, 180, 202, 216, 267, 273, 329], "resize_longest_image_s": 272, "resizelongestsid": [269, 273], "resnet": [119, 122, 124, 144, 162, 252, 275], "resnet101": [123, 144, 276], "resnet152": [144, 276], "resnet18": [79, 123, 144, 192, 228, 276], "resnet34": [144, 276], "resnet50": [123, 131, 144, 202, 276], "resnet50dil": [122, 129], "resnet_appli": 140, "resnet_cifar": 162, "resnetdil": 122, "resnext": 119, "resnext101": 124, "resnext101_32x8d": 276, "resnext50_32x4d": 276, "resolut": [267, 269, 295], "resolv": [3, 337], "resourc": 2, "respect": [202, 236], "respons": [302, 323, 351], "rest": 323, "result": [5, 50, 61, 81, 90, 107, 131, 174, 194, 230, 234, 251, 269, 300, 302, 304, 310, 316, 317, 323, 324, 331, 333, 336, 337, 363, 364], "retain": 344, "retrain": [61, 86, 174, 202, 205, 234, 236, 241], "retri": [323, 351], "retriev": [0, 1, 2, 3, 73, 115, 133, 134, 155, 156, 186, 205, 222, 290, 291, 293, 295, 296, 298, 300, 302, 304, 306, 308, 310, 313, 317, 319, 320, 321, 323, 325, 330, 337, 350, 351, 353], "return": [1, 2, 3, 4, 5, 13, 15, 17, 19, 22, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 56, 59, 65, 70, 72, 73, 81, 88, 90, 93, 94, 107, 117, 121, 123, 124, 131, 133, 134, 144, 150, 152, 155, 156, 178, 183, 185, 186, 194, 202, 203, 205, 207, 214, 219, 221, 222, 230, 236, 241, 243, 245, 247, 249, 251, 253, 258, 263, 264, 265, 266, 267, 268, 269, 271, 274, 276, 279, 284, 288, 290, 291, 293, 295, 296, 298, 300, 302, 304, 306, 308, 310, 311, 313, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 337, 351, 364], "return_count": 128, "return_extra_metr": 272, "return_feature_map": 122, "return_index": 128, "return_invers": 128, "return_logit": 269, "return_single_mask": 272, "returns_": 61, "returns__": [174, 202, 234, 241], "revers": [253, 311], "rgb": [128, 267, 269, 279, 331, 359], "rgb_mask": 331, "right": 344, "ring": 323, "risk": 3, "rle": [258, 271], "rle_to_mask": 271, "rm1": [5, 6], "rn101": 249, "rn50": 249, "rn50x16": 249, "rn50x4": 249, "rn50x64": 249, "roof": [0, 5, 88, 241, 245, 319, 328, 339], "roof_detail": 320, "roof_shape_classifi": [0, 57], "roof_shape_classification_gpt": 0, "roof_shape_classification_vlm": 0, "roof_shape_gpt": 57, "roof_shape_vlm": 57, "roof_typ": 319, "roofeaveheight": 88, "roofheight": 319, "roofpitch": 88, "roofshap": [1, 5, 6, 47], "roofshape_kei": 47, "roofshapeclassifi": 241, "roofshapegpt": 243, "roofshapevlm": 245, "roofslop": 47, "roofslope_kei": 47, "roofsystem": 47, "roofsystem_kei": 47, "rooftop": 0, "root": [150, 151, 152, 153, 205, 325, 353], "root_dataset": 100, "root_dir": [67, 76, 128, 180, 189, 216, 225], "rotat": [137, 159], "roughli": 323, "round": [73, 88, 186, 222, 254, 324, 337, 364], "round2nearest_multipl": [100, 129], "round_filt": [73, 186, 222], "round_repeat": [73, 186, 222], "row": [5, 94, 117, 234, 324, 329], "rtol": 109, "rule": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 326, 354], "ruleset": [22, 27, 47, 50, 52], "run": [0, 1, 2, 3, 4, 5, 6, 63, 68, 69, 70, 73, 74, 76, 79, 80, 106, 122, 123, 124, 131, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 192, 193, 212, 217, 218, 219, 222, 223, 225, 228, 229, 252, 262, 263, 264, 265, 268, 272, 276, 281, 284, 333], "run_mast": [81, 107, 194, 230], "run_on_one_imag": 256, "run_slav": [81, 107, 194, 230], "running_mean": [79, 106, 192, 228], "running_var": [79, 106, 192, 228], "runtest": [83, 109, 196, 232], "runtimeerror": 321, "s1": 5, "safe": [81, 107, 194, 230], "sai": 253, "sam": [0, 261, 269, 272], "sam_model": 269, "sam_predictor": 256, "samautomaticmaskgener": 258, "same": [3, 5, 61, 70, 74, 79, 106, 117, 174, 183, 187, 192, 203, 219, 223, 228, 234, 241, 268, 311, 316, 319, 324, 326, 337], "samonnxmodel": 272, "sampl": [1, 3, 5, 19, 56, 67, 79, 106, 115, 117, 136, 158, 180, 192, 202, 205, 216, 228, 234, 236, 241, 279, 316, 317, 319, 329], "sample_d": 19, "sample_inventori": 319, "sampler": 113, "sampleserver6": 323, "sampredictor": [267, 269], "san": 324, "sanjai": 342, "sascha": 342, "satellit": [1, 2, 293, 329], "satelliteimagesourc": 4, "satisfi": [65, 178, 214], "save": [5, 13, 15, 73, 133, 134, 155, 156, 186, 202, 222, 274, 284, 293, 295, 296, 310, 313, 317, 323, 324, 330, 331], "save_checkpoint": [76, 189, 225], "save_directori": [293, 295, 296, 330], "save_for_backward": [73, 133, 134, 155, 156, 186, 222], "save_for_forward": [73, 133, 134, 155, 156, 186, 222], "save_interv": [76, 189, 225], "save_masked_imag": 91, "save_respons": 199, "saved_path": 274, "scalar": 319, "scale": [0, 7, 8, 70, 115, 137, 159, 183, 219, 266, 339, 342], "scale_per_lay": 271, "scan": 4, "scatter": [84, 111, 197, 233], "scenario": 4, "schoettler": 342, "scienc": [5, 7, 8, 340], "scope": [325, 353], "score": [15, 84, 131, 197, 233, 256, 269, 271], "scrape": [288, 290, 300, 302, 304, 306, 308, 310, 311, 316, 317], "scraper": [0, 1, 2, 3, 4, 6, 9, 339], "scraper_class": [2, 3, 4, 6, 310], "scraper_inventori": [6, 330], "scraper_object": 310, "scraper_typ": 4, "scratch": 1, "script": [0, 1, 2, 3, 4, 5, 6, 272], "se_ratio": [73, 186, 222], "sea": [136, 158], "seamless": 0, "search": [4, 7, 8, 310, 317, 321, 323], "secb": 41, "secb_config": 41, "second": [5, 319, 323, 324], "secondari": 333, "see": [1, 72, 73, 80, 81, 107, 133, 134, 155, 156, 185, 186, 193, 194, 221, 222, 229, 230, 264, 265, 272], "seed": [3, 19, 22, 25, 27, 47, 56, 317, 319, 329], "seen": [79, 106, 192, 228], "segm": 100, "segm_transform": 100, "segment": [0, 120, 131, 171, 205, 256, 258, 322, 331, 339, 359], "segment_anyth": 255, "segmentation_util": [8, 322], "segmentationmodul": 122, "segmentationmodulebas": 122, "segmentationutil": [8, 322, 331], "segsiz": 122, "seismic": 0, "select": [2, 3, 6, 19, 269, 290, 302, 319, 324, 329, 336, 363], "select_mask": 272, "self": [61, 90, 115, 131, 133, 134, 155, 156, 174, 234, 236, 310, 319], "semant": 120, "send": [81, 84, 107, 194, 197, 202, 230, 233, 317, 323], "sens": 5, "sent": [81, 107, 194, 230], "separ": [73, 133, 134, 155, 156, 186, 222, 319], "separableconv": [84, 197, 233], "separableconvblock": [69, 182, 218], "seper": 1, "sequenc": [115, 263, 311, 321], "sequenti": [19, 117], "sequential_imput": 19, "sequentialsampl": 117, "serb": 42, "serb_config": 42, "seri": 0, "serial": 319, "serv": [1, 4, 241], "server": 323, "servic": [316, 317, 322, 323, 344, 351], "services1": 323, "services5": 323, "set": [1, 2, 5, 6, 13, 15, 50, 59, 61, 72, 73, 79, 90, 94, 106, 131, 133, 134, 155, 156, 174, 185, 186, 192, 202, 203, 207, 221, 222, 228, 234, 236, 241, 243, 245, 247, 253, 256, 266, 269, 274, 284, 302, 313, 317, 319, 320, 329, 339, 348, 357], "set_dir": [67, 76, 180, 189, 216, 225], "set_directori": 320, "set_fixed_param": [76, 174, 189, 225], "set_hyperparam": [76, 189, 225], "set_imag": 269, "set_model": [76, 189, 225], "set_swish": [72, 185, 221], "set_torch_imag": 269, "set_train_dataset": [76, 189, 225], "set_val_dataset": [76, 189, 225], "setup": [61, 174, 234], "setup_context": [73, 133, 134, 155, 156, 186, 222], "setup_logg": 128, "sever": [0, 137, 159, 284], "sfha_tf": 323, "sgd": 202, "shall": 344, "shape": [0, 5, 70, 79, 106, 137, 159, 183, 192, 219, 228, 241, 245, 251, 258, 263, 264, 265, 266, 267, 268, 269, 271, 273, 319, 321, 323, 324, 326, 331, 352], "share": [72, 82, 108, 185, 195, 221, 231, 334, 336, 361, 363], "sheathingthick": 47, "sheathingthickness_kei": 47, "short": [29, 337], "short_ton": [337, 364], "shortest": 324, "shot": [15, 19, 256], "should": [11, 63, 68, 69, 70, 73, 74, 76, 80, 81, 88, 93, 107, 115, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 193, 194, 202, 205, 212, 217, 218, 219, 222, 223, 225, 229, 230, 236, 252, 262, 263, 264, 265, 267, 268, 272, 276, 281, 324, 329], "show": [3, 4, 6, 329], "show_binary_mask": 256, "show_box": 256, "show_point": 256, "show_predict": 329, "shown": [1, 3, 5, 6], "shrink": [19, 22, 25, 27, 47, 56], "side": [273, 326], "sideffect": 94, "sigma": [137, 159], "sigmoid_output": [264, 265], "signal": 94, "signific": 253, "silenc": 47, "silent": [63, 68, 69, 70, 73, 74, 76, 80, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 193, 212, 217, 218, 219, 222, 223, 225, 229, 252, 262, 263, 264, 265, 268, 272, 276, 281], "simard": [137, 159], "simard2003": [137, 159], "simcent": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364], "simcenter_infer": 20, "simcenterinfer": 52, "similar": [252, 254], "simpl": [1, 4, 5, 324], "simple_token": 250, "simpletoken": 253, "simpli": 0, "simul": [7, 8, 339, 342], "sinc": [0, 1, 63, 68, 69, 70, 73, 74, 76, 80, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 193, 212, 217, 218, 219, 222, 223, 225, 229, 251, 252, 262, 263, 264, 265, 268, 272, 276, 281], "singl": [4, 5, 93, 203, 249, 264, 265, 267, 269, 290, 319, 323, 326, 351], "site": [137, 159], "size": [70, 73, 79, 86, 94, 100, 106, 115, 117, 137, 141, 159, 183, 186, 192, 202, 205, 219, 222, 228, 263, 266, 267, 268, 269, 271, 273], "size1": 141, "size2": 141, "size3": 141, "size4": 141, "skconv": 145, "skip": [65, 178, 214], "skip_first_layer_p": 268, "sknet": 140, "sknet101": 145, "sknet26": 145, "sknet50": 145, "skunit": 145, "slave": [81, 82, 107, 108, 194, 195, 230, 231], "slavepip": [81, 107, 194, 230], "slice": [79, 106, 137, 159, 192, 228], "slide": 94, "sliding_window": 94, "slightli": [150, 152], "small": [1, 6, 258, 271], "small_inventori": [1, 2, 3, 4, 329], "smaller": [1, 6, 300, 304, 313, 319, 323, 329, 351], "smallinv": 6, "so": [3, 323, 326], "soft": 279, "soft_label": 279, "softwar": 344, "softwaretest": [310, 330], "some": [1, 5, 52, 82, 108, 195, 231, 272, 339], "someth": 253, "sort": [205, 319], "sourc": [0, 1, 6, 7, 8, 317, 321, 337, 344], "source_cit": 323, "space": [0, 19, 271], "spacial_dim": 252, "spars": 266, "sparse_prompt_embed": [264, 265], "spatial": [19, 79, 106, 192, 228, 263, 266, 269, 291, 310, 319, 322, 332, 333, 334, 335, 336, 346, 360, 361, 362, 363], "spatial_join_method": [8, 322], "spatialjoinmethod": [8, 322, 333, 334, 335, 336, 361, 362, 363], "spatio": [79, 106, 192, 228], "special": [86, 344], "specif": [5, 11, 13, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 306, 310, 319, 321, 323, 326, 330, 335, 345, 351, 354, 358, 362], "specifi": [0, 1, 2, 6, 13, 15, 61, 65, 73, 86, 90, 93, 131, 171, 174, 178, 186, 202, 205, 214, 222, 234, 266, 279, 284, 290, 291, 293, 295, 298, 300, 302, 304, 310, 313, 317, 319, 320, 321, 323, 324, 325, 329, 337, 350, 351, 353], "speckl": [137, 159], "sphinx": [7, 8, 339], "spline_ord": [137, 159], "split": [4, 84, 115, 137, 159, 197, 202, 233, 300, 302, 304, 313, 323, 324, 351], "split_polygon_into_cel": 323, "splitlevel": [22, 25, 27], "splitlevel_kei": [22, 25, 27], "spmb": 43, "spmb_config": 43, "spolygon": 324, "spot": 0, "sqft": [6, 337], "sqrt": [79, 106, 192, 228], "squar": [137, 159, 267, 324, 337, 364], "square_centimet": [337, 364], "square_foot": [337, 364], "square_inch": [337, 364], "square_kilomet": [337, 364], "square_met": [337, 364], "square_mil": [337, 364], "square_millimet": [337, 364], "square_yard": [337, 364], "squeez": [72, 185, 221], "st_damcat": 6, "stabil": [79, 80, 106, 192, 193, 228, 229, 271], "stability_scor": 258, "stability_score_offset": 258, "stability_score_thresh": 258, "stack": [70, 183, 219, 234], "stage": [61, 174, 336, 363], "standard": [0, 29, 72, 79, 106, 128, 185, 192, 221, 228, 317, 326, 337, 354, 364], "standard_to_bgr": [84, 197, 233], "starea": 323, "start": [61, 174, 234, 320], "start_idx": 100, "start_train": [76, 189, 225], "state": [1, 4, 234, 247, 310, 317, 321, 323], "state_dict": [251, 252], "statement": [4, 328, 330, 331, 356, 358, 359], "static": [73, 115, 122, 133, 134, 155, 156, 186, 222, 258, 272, 273, 290, 311, 317, 322, 323, 324, 326, 327, 328, 329, 331, 333, 337, 352, 354, 355, 356, 357, 359, 364], "static_bf": [290, 323], "staticmethod": [73, 133, 134, 155, 156, 186, 222], "statist": [0, 5, 79, 106, 192, 228, 317], "statu": 323, "std": [67, 84, 137, 159, 180, 197, 216, 233], "stddev": 317, "stderr": 276, "steel": 319, "steinkrau": [137, 159], "stella": 342, "stem": 252, "step": [0, 3, 93, 330], "stepsiz": 94, "stl": 86, "stlength": 323, "stochast": 202, "stop": [202, 205], "store": [1, 4, 6, 61, 73, 88, 128, 131, 133, 134, 139, 155, 156, 161, 174, 186, 222, 234, 271, 284, 290, 291, 302, 310, 316, 317, 319, 321, 323], "stori": 306, "str": [1, 2, 3, 4, 6, 13, 15, 19, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 61, 65, 86, 88, 90, 128, 131, 174, 178, 202, 205, 209, 214, 234, 236, 241, 247, 249, 251, 256, 258, 269, 279, 284, 290, 291, 293, 295, 296, 298, 300, 304, 306, 308, 310, 311, 313, 317, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 333, 337, 346, 348, 349, 350, 351, 353, 358], "str_type": 319, "straight": [73, 186, 222], "strategi": [323, 334, 336, 351, 361, 363], "street": [0, 1, 2, 3, 88, 131, 209, 234, 236, 247, 274, 295], "street_im": 2, "street_imag": 88, "street_level_damage_detect": 57, "street_processor": 237, "street_view": 320, "streetfilt": 4, "streetimagesourc": 4, "streetprocessor": 239, "streetview": 3, "strict": 344, "strictli": 326, "stride": [70, 73, 74, 94, 122, 142, 145, 183, 186, 187, 219, 222, 223, 252, 263, 281], "strides_list": 145, "string": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 73, 90, 186, 222, 251, 253, 284, 302, 311, 314, 319, 321, 323, 324, 326, 329, 337, 350], "string_list": [73, 186, 222], "strip": [2, 3], "structur": [1, 6, 61, 174, 236, 271, 302, 313, 314, 319, 326, 329, 354, 357], "structure_typ": [22, 52], "structuretyp": [22, 25, 47], "structuretype_kei": [22, 25], "student": 6, "studi": 0, "study_typ": [290, 323], "stuff": 274, "sub": [82, 108, 195, 231], "subclass": [4, 13, 15, 48, 63, 68, 69, 70, 73, 74, 76, 80, 115, 117, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 150, 151, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 193, 212, 217, 218, 219, 222, 223, 225, 229, 252, 262, 263, 264, 265, 268, 272, 276, 281, 288, 291, 293, 296, 311, 333], "subdirectori": [205, 236, 325, 353], "submodul": 7, "subpackag": 7, "subplot": 329, "subsampl": [2, 3, 137, 159], "subsampled_inventori": 317, "subsequ": [2, 267, 269], "subset": [0, 1, 2, 3, 6, 115, 319, 329], "subset_nsi_processed_data": 6, "subsetrandomsampl": 117, "substat": 308, "substitut": [5, 344], "subtyp": 290, "suburban": 50, "success": [319, 326], "successfulli": [319, 328], "suffici": 236, "suggest": [3, 337, 364], "suitabl": [324, 352], "sum": [79, 106, 117, 192, 228, 323], "summari": [1, 317, 319], "summary_writ": 94, "supercategori": [65, 178, 214], "supnm": [65, 178, 214], "suppli": [1, 5, 90], "support": [0, 2, 90, 115, 171, 202, 205, 249, 263, 272, 295, 298, 302, 308, 317, 319, 323, 326, 329, 337, 340, 350, 351, 357, 364], "supported_asset_elevation_mod": 317, "suppos": 319, "surfac": 324, "survei": 1, "swish": [72, 73, 185, 186, 221, 222], "swishimplement": [73, 186, 222], "switch": 4, "sy": [4, 5, 6], "symbol": 253, "sync_batchnorm": [77, 190, 226], "sync_bn": [82, 108, 195, 231], "syncbn": [79, 192, 228], "synchron": [79, 80, 106, 192, 193, 228, 229], "synchronizedbatchnorm": [79, 192, 228], "synchronizedbatchnorm1d": [79, 82, 106, 108, 192, 195, 228, 231], "synchronizedbatchnorm2d": [79, 106, 192, 228], "synchronizedbatchnorm3d": [79, 106, 192, 228], "syncmast": [81, 107, 194, 230], "syntax": [320, 349], "system": [61, 174, 234, 319, 325, 353], "system_dict": [61, 174, 234], "t": [73, 133, 134, 155, 156, 186, 222, 280], "tabl": 253, "taciroglu": 342, "take": [2, 4, 5, 63, 68, 69, 70, 73, 74, 76, 80, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 193, 212, 217, 218, 219, 222, 223, 225, 229, 251, 252, 262, 263, 264, 265, 268, 272, 276, 281, 298, 339], "taken": 339, "taller": 234, "tar": [150, 151], "target": [115, 135, 137, 157, 159, 273, 317, 337, 364], "target_height": [137, 159], "target_kei": [22, 25], "target_length": 273, "target_tensor": 115, "target_transform": [150, 151, 152, 153], "target_width": [137, 159], "task": [61, 174, 300, 304, 323, 324, 334, 352, 361], "task_descript": 323, "techniqu": [0, 2, 5], "templat": 249, "tempor": [0, 79, 106, 192, 228], "tensor": [67, 72, 73, 79, 84, 106, 115, 133, 134, 155, 156, 180, 185, 186, 192, 197, 216, 221, 222, 228, 233, 251, 263, 264, 265, 266, 267, 268, 269, 271, 273, 279], "tensordataset": 115, "tensorflow": [73, 74, 186, 187, 222, 223], "term": 339, "termin": [3, 4, 5, 6], "terminologi": [79, 106, 192, 228], "test": [1, 2, 3, 4, 6, 80, 96, 146, 150, 151, 193, 229, 280, 284], "test_list": [150, 151], "test_softlabel": 280, "test_transform": [131, 284], "testcas": [83, 109, 196, 232], "testdataset": 100, "testload": [280, 284], "texa": 317, "text": [209, 247, 249, 251, 252, 253], "text_featur": 254, "text_input": 254, "text_prompt": [209, 245, 247, 249], "text_threshold": 256, "textual": [245, 249], "tgz_md5": [150, 151], "th": 112, "than": [117, 251, 269, 313, 319, 323, 324, 329], "thei": [0, 3, 4, 5, 7, 8, 73, 117, 133, 134, 155, 156, 186, 222, 284, 337], "them": [1, 63, 68, 69, 70, 73, 74, 76, 80, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 193, 212, 217, 218, 219, 222, 223, 225, 229, 252, 262, 263, 264, 265, 268, 272, 276, 281, 293, 295, 316, 317, 325, 328, 329, 337, 353, 356, 364], "theori": 344, "thi": [1, 2, 3, 4, 5, 6, 10, 11, 13, 15, 19, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 50, 61, 63, 68, 69, 70, 73, 74, 76, 79, 80, 81, 82, 86, 90, 93, 106, 107, 108, 120, 121, 122, 123, 124, 131, 133, 134, 135, 138, 141, 142, 143, 144, 145, 150, 151, 155, 156, 157, 160, 171, 174, 176, 181, 182, 183, 186, 187, 189, 192, 193, 194, 195, 202, 205, 209, 212, 217, 218, 219, 222, 223, 225, 228, 229, 230, 231, 234, 236, 241, 247, 249, 252, 253, 258, 262, 263, 264, 265, 267, 268, 269, 272, 273, 276, 281, 284, 290, 291, 293, 295, 296, 298, 300, 302, 304, 306, 308, 310, 311, 313, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340, 344, 347, 350, 351, 353, 354, 355, 356, 358, 359, 361, 362, 363], "this_inventori": [27, 47, 56], "those": [7, 8, 73, 186, 222, 323, 339, 340], "though": [73, 133, 134, 155, 156, 186, 222], "thread": [81, 107, 194, 230, 323], "three": [1, 269, 326, 337, 364], "thresh": [69, 182, 218], "threshold": [15, 61, 75, 84, 174, 188, 197, 224, 233, 234, 256, 269, 271, 323], "threshold_offset": 271, "through": [82, 108, 195, 231, 319, 325, 329, 339, 353, 357], "throw": 5, "tiburon": [1, 2, 6], "tif": 330, "tile": 316, "tilemap": 293, "time": [1, 2, 61, 73, 88, 174, 186, 222, 234, 319], "timestamp": 319, "titl": 329, "tmp": [2, 3, 5, 6, 61, 174, 202, 205, 234, 274, 284, 328, 329], "to_json": [27, 47, 56], "to_numpi": 271, "to_tensor": [137, 159], "to_unit": 337, "togeth": [7, 8, 137, 159, 339], "token": [251, 253, 263], "toler": 202, "ton": [337, 364], "ton_u": [337, 364], "ton_uk": [337, 364], "tonylin": 121, "took": 5, "tool": [271, 342], "top": [61, 174, 234, 313, 329], "top_onli": [61, 174, 234], "torch": [70, 73, 79, 106, 133, 134, 155, 156, 183, 186, 192, 202, 205, 219, 222, 228, 249, 251, 252, 262, 263, 264, 265, 266, 267, 268, 269, 273, 279, 284], "torchtestcas": [83, 109, 196, 232], "torchvis": [79, 192, 228, 251, 252, 284], "toronto": [150, 151], "tort": 344, "total": [4, 6, 279, 310, 317, 319, 320, 323, 330], "total_asset": 323, "totensor": [137, 159], "tower": 319, "trace": 272, "traci": 342, "train": [61, 72, 73, 76, 79, 86, 88, 90, 91, 96, 106, 121, 123, 124, 144, 150, 151, 152, 153, 174, 185, 186, 189, 192, 202, 205, 221, 222, 225, 228, 234, 236, 241, 275, 276, 279, 284, 328, 356], "train2017": [67, 180, 216], "train_data_dir": [202, 205], "train_detector": [62, 175, 211], "train_list": [150, 151], "train_weight": 279, "traindataset": 100, "trained_model": 202, "trained_model_rooftyp": 328, "trained_seg_model": 205, "trainer": 202, "trainy_g_list": 19, "transfer": [202, 205], "transform": [67, 131, 137, 150, 151, 152, 153, 159, 171, 180, 205, 216, 251, 252, 261, 263, 264, 265, 267, 269, 270, 279, 284, 308, 330], "transformed_imag": 269, "transformer_dim": [264, 265], "transformer_head": 252, "transformer_lay": 252, "transformer_width": 252, "transient": [323, 351], "transmission_lines_gdb": 323, "transpar": 331, "travers": [79, 192, 228, 319], "tree": 50, "triangular": 324, "trigger": [81, 107, 194, 230], "true": [5, 6, 19, 22, 25, 27, 47, 56, 61, 65, 69, 72, 73, 74, 75, 79, 84, 86, 93, 94, 106, 117, 121, 123, 124, 131, 133, 134, 144, 150, 151, 152, 153, 155, 156, 174, 178, 182, 185, 186, 187, 188, 192, 197, 199, 202, 205, 214, 218, 221, 222, 223, 224, 228, 233, 234, 236, 241, 252, 263, 269, 274, 276, 280, 281, 284, 311, 313, 317, 319, 320, 323, 326, 327, 328, 329, 330, 337], "truncat": 251, "truth": 284, "try": [2, 6], "tune": 202, "tunnel": 304, "tupl": [73, 88, 133, 134, 137, 155, 156, 159, 186, 222, 253, 263, 266, 267, 269, 279, 311, 314, 317, 319, 321, 323, 324, 326, 330, 350], "two": [1, 2, 3, 6, 73, 88, 133, 134, 155, 156, 186, 202, 222, 251, 317, 319, 323, 324, 326, 333, 336, 346, 363], "twowayattentionblock": 268, "twowaytransform": 268, "tx": 317, "txt": [2, 3, 128, 253], "type": [0, 1, 2, 3, 4, 5, 6, 8, 9, 13, 15, 17, 19, 22, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 50, 56, 61, 70, 72, 73, 86, 88, 94, 131, 133, 134, 137, 155, 156, 159, 171, 174, 183, 185, 186, 203, 205, 219, 221, 222, 234, 236, 241, 245, 247, 249, 258, 263, 264, 265, 266, 267, 268, 269, 276, 279, 284, 288, 290, 291, 293, 295, 296, 298, 300, 302, 304, 306, 308, 310, 311, 313, 316, 317, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 337, 339, 354, 358], "type_of_th": 11, "typeerror": [247, 249, 290, 300, 304, 313, 319, 324, 326, 327, 333, 350], "typic": [3, 4, 269, 291, 311, 319, 346], "u": [4, 6], "u65dis": 6, "uint8": [129, 258, 269, 273], "un": 269, "unavail": 317, "unchang": [319, 323, 337, 364], "uncompress": 271, "uncompressed_rl": 271, "uncrop_boxes_xyxi": 271, "uncrop_mask": 271, "uncrop_point": 271, "under": [6, 7, 8, 61, 174, 234, 317, 319, 323, 340, 343, 344], "understand": [0, 5, 7, 8, 339], "undesir": 94, "unexpectedli": 321, "unicod": 253, "uniform": [323, 351], "uniformli": 323, "union": [202, 251, 279, 320, 321, 349, 358], "uniqu": [128, 279, 319, 325, 329, 346, 353], "unit": [1, 4, 69, 182, 218, 234, 290, 298, 300, 302, 304, 306, 308, 310, 313, 317, 321, 322, 323, 337, 364], "unit_convert": [8, 322], "unit_default": 337, "unit_typ": 337, "unit_valid": 337, "unitconvert": [8, 322, 337], "unittest": [78, 105, 191, 227], "univers": 344, "unk": 253, "unknown": [4, 5, 50], "unless": [93, 319], "unload": 88, "unmap": 50, "unpartit": 263, "unrecogn": 337, "unsupport": [337, 350, 364], "unwant": 3, "up": [1, 2, 6, 61, 73, 117, 133, 134, 155, 156, 174, 186, 222, 236, 241, 253], "updat": [1, 4, 6, 22, 25, 27, 47, 48, 50, 56, 61, 93, 128, 139, 161, 174, 234, 236, 290, 316, 319, 320], "update_filenam": 320, "update_inventori": 19, "update_properti": 320, "update_tim": 317, "update_world_r": 319, "updated_asset": 290, "updated_inv": 50, "updated_inventori": [316, 317], "updates__": [174, 234], "upernet": 122, "upload": 3, "upon": 340, "upper": 234, "upscal": 267, "urban": [0, 1], "url": [125, 150, 151, 323, 328, 351], "urn": 319, "us": [0, 1, 2, 3, 4, 5, 6, 10, 11, 13, 15, 17, 19, 46, 50, 59, 61, 73, 79, 80, 81, 82, 86, 90, 106, 107, 108, 115, 131, 133, 134, 155, 156, 174, 186, 192, 193, 194, 195, 202, 203, 205, 207, 209, 222, 228, 229, 230, 231, 234, 236, 241, 243, 245, 247, 249, 251, 256, 258, 266, 267, 269, 272, 284, 288, 290, 291, 296, 298, 302, 306, 308, 310, 311, 313, 317, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 339, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 364], "usa": [1, 313, 314], "usa_class": 1, "usa_footprint_scrap": [4, 285], "usa_footprintscrap": [1, 2, 3, 4, 313], "usa_footprintsscrap": 1, "usa_inventori": 1, "usa_scrap": 1, "usag": [4, 73, 81, 107, 133, 134, 155, 156, 186, 194, 222, 230], "use_abs_po": 263, "use_default": [46, 47], "use_gpu": [75, 188, 224], "use_rel_po": 263, "use_softmax": 122, "use_stability_scor": 272, "user": [1, 3, 5, 56, 90, 128, 284, 314, 319, 320, 323, 337, 349, 351], "user_footprint": 285, "user_infer": 20, "user_path": 56, "user_scattered_col": 111, "userfootprint": 314, "userinfer": 56, "userscattereddataparallel": 111, "usg": [0, 50, 316, 317], "usgs_data_scrap": 285, "usgs_elev_scrap": 317, "usgs_elevation_scrap": [0, 315], "usgselevationscrap": 317, "usual": [81, 107, 194, 230], "utf": [2, 3, 253], "util": [1, 2, 4, 5, 8, 9, 62, 64, 71, 88, 91, 92, 96, 103, 119, 131, 132, 154, 175, 177, 184, 198, 211, 213, 220, 249, 250, 257, 278, 284, 321, 350], "utils_extra": [71, 184, 220], "uw": [322, 330, 358], "v": [109, 268, 337], "v2": 121, "v3": 342, "v_datum": 323, "vacanc": [80, 193, 229], "val": [128, 139, 161], "val_cont": 6, "val_interv": [76, 189, 225], "val_struct": 6, "val_veh": 6, "valdataset": 100, "valid": [47, 61, 88, 90, 131, 174, 202, 205, 234, 319, 320, 321, 322, 323, 324, 326, 327, 330, 331, 333, 337, 350, 354, 355, 358, 364], "validate_coordin": 326, "validate_inventori": 327, "validationcondit": 321, "valu": [0, 1, 3, 5, 50, 70, 73, 79, 94, 106, 128, 131, 133, 134, 139, 155, 156, 161, 183, 186, 192, 202, 203, 205, 219, 222, 228, 234, 236, 241, 267, 268, 269, 271, 284, 310, 311, 316, 317, 319, 320, 323, 324, 326, 329, 337, 350, 364], "valueerror": [2, 70, 88, 183, 202, 205, 219, 247, 249, 293, 295, 311, 319, 323, 324, 328, 329, 333, 337, 350, 351, 358], "vanishingpoint": 4, "var": [79, 106, 192, 228], "vari": [1, 330], "variabl": [19, 25, 59, 79, 106, 192, 207, 228, 236, 243, 253], "varianc": [79, 106, 192, 228], "variance_scaling_": [84, 197, 233], "variancesc": [84, 197, 233], "variat": 337, "variou": [61, 174, 295, 324, 326, 352, 354], "vector": [79, 106, 192, 228], "vel_unit": 323, "veloc": 323, "verbos": [75, 76, 188, 189, 224, 225], "verif": 1, "verifi": [1, 326], "verify_and_download_model": 256, "version": [79, 106, 192, 228, 251, 311, 317, 319, 342, 343], "versu": 202, "vert1": 302, "vertic": [234, 302], "vertlast": 302, "via": [319, 337, 364], "view": [2, 3, 295, 340], "virtual": 203, "vision": [0, 322, 328, 330, 356], "vision_lay": 252, "vision_patch_s": 252, "vision_width": 252, "visiondataset": 205, "visiontransform": 252, "visit": 317, "visual": [137, 159, 256, 274, 284, 291, 322, 323, 324, 329, 331, 352, 357, 359], "vit": [249, 265], "vit_dim": 265, "vjp": [73, 133, 134, 155, 156, 186, 222], "vlm": 0, "vlm_image_classifi": 57, "vlm_segment": [0, 57], "vlmsegment": 274, "vocab": 253, "vocab_s": 252, "volumetr": [79, 106, 192, 228], "volunt": 1, "w": [6, 73, 79, 106, 133, 134, 137, 155, 156, 159, 186, 192, 222, 228, 263, 267, 268, 269, 273, 331], "w1": [5, 6], "wa": [7, 8, 90, 319, 320, 339], "wael": 342, "wai": [0, 3, 6, 73, 117, 133, 134, 150, 152, 155, 156, 186, 222, 344], "wait": 205, "wang": 342, "want": [1, 81, 107, 194, 230, 253, 302], "wari": 94, "warmup": 93, "warn": 320, "warranti": 344, "wc4": 6, "we": [1, 3, 82, 108, 195, 231, 251, 253, 339], "weight": [22, 47, 52, 73, 117, 122, 128, 186, 222, 275, 279, 290, 310, 317, 322, 328, 337, 356, 364], "weight_decai": 93, "weightedrandomsampl": 117, "weights_init": 122, "weights_path": [84, 197, 233], "well": [150, 152, 273], "were": [73, 81, 107, 133, 134, 155, 156, 186, 194, 222, 230, 284, 319], "wgs84": [317, 330], "what": [1, 272, 339], "when": [1, 4, 5, 6, 11, 79, 81, 82, 94, 106, 107, 108, 117, 192, 194, 195, 228, 230, 231, 251, 253, 311, 319, 321, 323, 325, 351, 353], "where": [1, 11, 79, 88, 94, 106, 192, 202, 205, 228, 252, 266, 267, 269, 284, 296, 311, 319, 324, 326, 329, 330, 331, 334, 361], "wherea": 1, "whether": [72, 73, 86, 131, 133, 134, 155, 156, 171, 185, 186, 202, 205, 221, 222, 241, 247, 251, 264, 265, 267, 279, 319, 326, 327, 344, 354, 355], "which": [1, 2, 3, 4, 5, 6, 70, 79, 81, 106, 107, 117, 137, 150, 152, 159, 183, 192, 194, 202, 203, 219, 228, 230, 236, 241, 269, 274, 284, 293, 295, 296, 300, 304, 313, 317, 319, 323, 329, 335, 337, 339, 351, 362], "while": [0, 5, 63, 68, 69, 70, 73, 74, 76, 80, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 193, 212, 217, 218, 219, 222, 223, 225, 229, 252, 262, 263, 264, 265, 268, 272, 276, 281, 329], "whitespac": [3, 253], "whitespace_clean": 253, "whose": [320, 339], "width": [70, 79, 84, 106, 183, 192, 197, 219, 228, 233, 252, 263, 320, 348], "width_coeffici": [73, 186, 222], "width_per_group": 276, "wil": 339, "windcecbruleset": 28, "windcerbruleset": 28, "windefruleset": 28, "windmecbruleset": 28, "windmerbruleset": 28, "windmetavarruleset": 28, "windmhruleset": 28, "windmlriruleset": 28, "windmlrmruleset": 28, "windmmuhruleset": 28, "windmsfruleset": 28, "window": [0, 3, 4, 5, 6, 94, 234, 263, 339], "window_partit": 263, "window_s": 263, "window_unpartit": 263, "windowarea": 47, "windowarea_kei": 47, "windsecbruleset": 28, "windserbruleset": 28, "windspmbruleset": 28, "windwmuhruleset": 28, "windwsfruleset": 28, "windzon": 47, "windzone_kei": 47, "within": [4, 6, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 63, 68, 69, 70, 73, 74, 76, 80, 122, 123, 124, 133, 134, 135, 138, 141, 142, 143, 144, 145, 155, 156, 157, 160, 176, 181, 182, 183, 186, 187, 189, 193, 212, 217, 218, 219, 222, 223, 225, 229, 252, 262, 263, 264, 265, 268, 272, 276, 281, 291, 298, 300, 302, 304, 310, 313, 317, 319, 323, 324, 325, 332, 335, 351, 353, 362], "withing": 310, "without": [1, 4, 5, 79, 106, 117, 192, 202, 228, 317, 319, 326, 329, 336, 344, 354, 363], "wkt": 323, "wm": 316, "wmuh": 44, "wmuh_config": 44, "wod": 86, "word": 253, "work": [0, 3, 4, 253, 311, 317, 331, 339, 340], "work_dir": [131, 284], "workflow": [2, 4, 5, 234, 339], "world": [5, 19, 56, 319, 339], "world_real": 319, "would": [3, 4, 5, 117], "wp": 263, "wrap": [79, 106, 115, 117, 192, 228, 319], "wrapper": [236, 241], "write": [6, 50, 302, 310, 319, 324, 347], "write_dict": 274, "write_polygon_to_geojson": 324, "write_to_geojson": [5, 6, 310, 317, 319], "written": [1, 2, 4, 5, 6, 319, 324], "wrong": 327, "wrote": [310, 317, 319], "wsf": [35, 45], "wsf_config": 45, "www": [150, 151, 317, 339], "x": [6, 69, 73, 74, 79, 83, 84, 100, 106, 122, 123, 124, 129, 133, 134, 135, 137, 138, 141, 142, 143, 144, 145, 155, 156, 157, 159, 160, 182, 186, 187, 192, 196, 197, 218, 222, 223, 228, 232, 233, 252, 262, 263, 264, 265, 266, 267, 268, 269, 271, 276, 281, 290, 317, 319, 342, 346], "x1": [70, 183, 219], "x2": [70, 183, 219], "x4": 271, "xhxw": 271, "xmax": [15, 256], "xmin": [15, 256], "xpu": 128, "xywh": 258, "xyxi": [15, 256, 269, 271], "y": [6, 79, 83, 106, 133, 134, 155, 156, 192, 196, 228, 232, 269, 317, 319, 346], "y1": [70, 183, 219], "y2": [70, 183, 219], "y_gt": 94, "y_pred": 94, "yaml": [129, 311], "yard": [337, 364], "yd": [337, 364], "yd2": [337, 364], "year": [0, 279, 284, 302], "year_built_classifi": [0, 57], "year_class": [22, 52], "yearbuilt": [22, 25, 27, 47], "yearbuilt_kei": [22, 25, 27, 47], "yearbuiltclassifi": 284, "yearbuiltfold": 279, "yet": 1, "yield": 117, "ymax": [15, 256], "ymin": [15, 256], "you": [0, 2, 3, 4, 73, 82, 108, 133, 134, 155, 156, 186, 195, 222, 231, 234, 253, 302, 321, 343, 350], "your": [0, 3, 4, 50, 253, 290, 328, 356], "yourself": 311, "yu": 342, "yunhui": 342, "z": [134, 156], "z0": 47, "z0_kei": 47, "z999": 319, "zenodo": [328, 342], "zero": [15, 256, 319, 331], "zero_init_residu": 276, "zh": [84, 197, 233], "zhao": 342, "zone": 290, "zone_subti": [290, 323], "zoom": [137, 159], "zsarn\u00f3czai": 342, "zylo117": [69, 70, 74, 182, 183, 187, 218, 219, 223]}, "titles": ["Examples", "Building Footprints", "Downloading Images", "Image Filters", "Importer", "Imputation Algorithms", "NSI Integration", "Indices and tables", "Indices and tables", "brails package", "brails.constants module", "brails.exceptions module", "brails.filters package", "brails.filters.filter module", "brails.filters.house_view package", "brails.filters.house_view.house_view module", "brails.imputers package", "brails.imputers.imputation module", "brails.imputers.knn_imputer package", "brails.imputers.knn_imputer.knn_imputer module", "brails.inferers package", "brails.inferers.hazus_inferer package", "brails.inferers.hazus_inferer.hazus_inferer module", "brails.inferers.hazus_inferer.hazus_rulesets module", "brails.inferers.hazus_inferer_earthquake package", "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake module", "brails.inferers.hazus_inferer_flood package", "brails.inferers.hazus_inferer_flood.hazus_inferer_flood module", "brails.inferers.hazus_inferer_wind package", "brails.inferers.hazus_inferer_wind.BuildingClassRulesets module", "brails.inferers.hazus_inferer_wind.WindCECBRulesets module", "brails.inferers.hazus_inferer_wind.WindCERBRulesets module", "brails.inferers.hazus_inferer_wind.WindEFRulesets module", "brails.inferers.hazus_inferer_wind.WindMECBRulesets module", "brails.inferers.hazus_inferer_wind.WindMERBRulesets module", "brails.inferers.hazus_inferer_wind.WindMHRulesets module", "brails.inferers.hazus_inferer_wind.WindMLRIRulesets module", "brails.inferers.hazus_inferer_wind.WindMLRMRulesets module", "brails.inferers.hazus_inferer_wind.WindMMUHRulesets module", "brails.inferers.hazus_inferer_wind.WindMSFRulesets module", "brails.inferers.hazus_inferer_wind.WindMetaVarRulesets module", "brails.inferers.hazus_inferer_wind.WindSECBRulesets module", "brails.inferers.hazus_inferer_wind.WindSERBRulesets module", "brails.inferers.hazus_inferer_wind.WindSPMBRulesets module", "brails.inferers.hazus_inferer_wind.WindWMUHRulesets module", "brails.inferers.hazus_inferer_wind.WindWSFRulesets module", "brails.inferers.hazus_inferer_wind.auto_HU_NJ module", "brails.inferers.hazus_inferer_wind.hazus_inferer_wind module", "brails.inferers.inference_engine module", "brails.inferers.nlcd_inferer package", "brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover module", "brails.inferers.simcenter_inferer package", "brails.inferers.simcenter_inferer.simCenter_inferer module", "brails.inferers.user_inferer package", "brails.inferers.user_inferer.content_value_inferer module", "brails.inferers.user_inferer.floor_area_inferer module", "brails.inferers.user_inferer.user_inferer module", "brails.processors package", "brails.processors.building_material_llm package", "brails.processors.building_material_llm.building_material_llm module", "brails.processors.chimney_detector package", "brails.processors.chimney_detector.chimney_detector module", "brails.processors.chimney_detector.lib package", "brails.processors.chimney_detector.lib.backbone module", "brails.processors.chimney_detector.lib.efficientdet package", "brails.processors.chimney_detector.lib.efficientdet.coco module", "brails.processors.chimney_detector.lib.efficientdet.config module", "brails.processors.chimney_detector.lib.efficientdet.dataset module", "brails.processors.chimney_detector.lib.efficientdet.loss module", "brails.processors.chimney_detector.lib.efficientdet.model module", "brails.processors.chimney_detector.lib.efficientdet.utils module", "brails.processors.chimney_detector.lib.efficientnet package", "brails.processors.chimney_detector.lib.efficientnet.model module", "brails.processors.chimney_detector.lib.efficientnet.utils module", "brails.processors.chimney_detector.lib.efficientnet.utils_extra module", "brails.processors.chimney_detector.lib.infer_detector module", "brails.processors.chimney_detector.lib.train_detector module", "brails.processors.chimney_detector.lib.utils package", "brails.processors.chimney_detector.lib.utils.sync_batchnorm package", "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm module", "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl module", "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm module", "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate module", "brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest module", "brails.processors.chimney_detector.lib.utils.utils module", "brails.processors.cons_type_classifier package", "brails.processors.cons_type_classifier.ConstructionTypeClassifier module", "brails.processors.facade_parser package", "brails.processors.facade_parser.facade_parser module", "brails.processors.ffh_predictor_klepac package", "brails.processors.ffh_predictor_klepac.ffh_predictor_klepac module", "brails.processors.foundation_classifier package", "brails.processors.foundation_classifier.attention_utils package", "brails.processors.foundation_classifier.attention_utils.radam module", "brails.processors.foundation_classifier.attention_utils.utils module", "brails.processors.foundation_classifier.csail_segmentation_tool package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval_multipro module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataloader module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.distributed module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.test module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.train module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation module", "brails.processors.foundation_classifier.detect module", "brails.processors.foundation_classifier.foundation_classifier module", "brails.processors.foundation_classifier.lib package", "brails.processors.foundation_classifier.lib.LinearAverage module", "brails.processors.foundation_classifier.lib.NCEAverage module", "brails.processors.foundation_classifier.lib.NCECriterion module", "brails.processors.foundation_classifier.lib.alias_multinomial module", "brails.processors.foundation_classifier.lib.custom_transforms module", "brails.processors.foundation_classifier.lib.normalize module", "brails.processors.foundation_classifier.lib.utils module", "brails.processors.foundation_classifier.models package", "brails.processors.foundation_classifier.models.attention_module module", "brails.processors.foundation_classifier.models.basic_layer module", "brails.processors.foundation_classifier.models.residual_attention_network module", "brails.processors.foundation_classifier.models.resnet_applied module", "brails.processors.foundation_classifier.models.sknet module", "brails.processors.foundation_classifier.npid package", "brails.processors.foundation_classifier.npid.MDistance module", "brails.processors.foundation_classifier.npid.cifar module", "brails.processors.foundation_classifier.npid.main module", "brails.processors.foundation_classifier.npid.npid_datasets package", "brails.processors.foundation_classifier.npid.npid_datasets.cifar module", "brails.processors.foundation_classifier.npid.npid_datasets.folder module", "brails.processors.foundation_classifier.npid.npid_datasets.mnist module", "brails.processors.foundation_classifier.npid.npid_lib package", "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage module", "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage module", "brails.processors.foundation_classifier.npid.npid_lib.NCECriterion module", "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial module", "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms module", "brails.processors.foundation_classifier.npid.npid_lib.normalize module", "brails.processors.foundation_classifier.npid.npid_lib.utils module", "brails.processors.foundation_classifier.npid.npid_models package", "brails.processors.foundation_classifier.npid.npid_models.resnet module", "brails.processors.foundation_classifier.npid.npid_models.resnet_cifar module", "brails.processors.foundation_classifier.npid.npid_toolbox package", "brails.processors.foundation_classifier.npid.npid_toolbox.calculate_all_distances module", "brails.processors.foundation_classifier.npid.test module", "brails.processors.foundation_classifier.save_masked_images module", "brails.processors.foundation_classifier.train module", "brails.processors.foundation_classifier.utils package", "brails.processors.foundation_classifier.utils.Datasets module", "brails.processors.foundation_classifier.utils.generate_csv module", "brails.processors.garage_detector package", "brails.processors.garage_detector.garage_detector module", "brails.processors.garage_detector.lib package", "brails.processors.garage_detector.lib.backbone module", "brails.processors.garage_detector.lib.efficientdet package", "brails.processors.garage_detector.lib.efficientdet.coco module", "brails.processors.garage_detector.lib.efficientdet.config module", "brails.processors.garage_detector.lib.efficientdet.dataset module", "brails.processors.garage_detector.lib.efficientdet.loss module", "brails.processors.garage_detector.lib.efficientdet.model module", "brails.processors.garage_detector.lib.efficientdet.utils module", "brails.processors.garage_detector.lib.efficientnet package", "brails.processors.garage_detector.lib.efficientnet.model module", "brails.processors.garage_detector.lib.efficientnet.utils module", "brails.processors.garage_detector.lib.efficientnet.utils_extra module", "brails.processors.garage_detector.lib.infer_detector module", "brails.processors.garage_detector.lib.train_detector module", "brails.processors.garage_detector.lib.utils package", "brails.processors.garage_detector.lib.utils.sync_batchnorm package", "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm module", "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl module", "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm module", "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate module", "brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest module", "brails.processors.garage_detector.lib.utils.utils module", "brails.processors.gpt_base_model package", "brails.processors.gpt_base_model.GPT module", "brails.processors.gpt_base_model.utils module", "brails.processors.image_classifier package", "brails.processors.image_classifier.image_classifier module", "brails.processors.image_processor module", "brails.processors.image_segmenter package", "brails.processors.image_segmenter.image_segmenter module", "brails.processors.nFloor_gpt package", "brails.processors.nFloor_gpt.nFloor_gpt module", "brails.processors.nFloor_vlm package", "brails.processors.nFloor_vlm.nFloor_vlm module", "brails.processors.nfloors_detector package", "brails.processors.nfloors_detector.lib package", "brails.processors.nfloors_detector.lib.backbone module", "brails.processors.nfloors_detector.lib.efficientdet package", "brails.processors.nfloors_detector.lib.efficientdet.coco module", "brails.processors.nfloors_detector.lib.efficientdet.config module", "brails.processors.nfloors_detector.lib.efficientdet.dataset module", "brails.processors.nfloors_detector.lib.efficientdet.loss module", "brails.processors.nfloors_detector.lib.efficientdet.model module", "brails.processors.nfloors_detector.lib.efficientdet.utils module", "brails.processors.nfloors_detector.lib.efficientnet package", "brails.processors.nfloors_detector.lib.efficientnet.model module", "brails.processors.nfloors_detector.lib.efficientnet.utils module", "brails.processors.nfloors_detector.lib.efficientnet.utils_extra module", "brails.processors.nfloors_detector.lib.infer_detector module", "brails.processors.nfloors_detector.lib.train_detector module", "brails.processors.nfloors_detector.lib.utils package", "brails.processors.nfloors_detector.lib.utils.sync_batchnorm package", "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm module", "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl module", "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm module", "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate module", "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest module", "brails.processors.nfloors_detector.lib.utils.utils module", "brails.processors.nfloors_detector.nfloor_detector module", "brails.processors.occupancy_classifier package", "brails.processors.occupancy_classifier.occupancy_classifier module", "brails.processors.other_idea package", "brails.processors.other_idea.arial_processing module", "brails.processors.other_idea.street_processor module", "brails.processors.roof_shape_classifier package", "brails.processors.roof_shape_classifier.roof_shape_classifier module", "brails.processors.roof_shape_gpt package", "brails.processors.roof_shape_gpt.roof_shape_gpt module", "brails.processors.roof_shape_vlm package", "brails.processors.roof_shape_vlm.roof_shape_vlm module", "brails.processors.street_level_damage_detection package", "brails.processors.street_level_damage_detection.street_level_damage_detection module", "brails.processors.vlm_image_classifier package", "brails.processors.vlm_image_classifier.CLIPClassifier module", "brails.processors.vlm_image_classifier.clip package", "brails.processors.vlm_image_classifier.clip.clip module", "brails.processors.vlm_image_classifier.clip.model module", "brails.processors.vlm_image_classifier.clip.simple_tokenizer module", "brails.processors.vlm_image_classifier.clip.utils module", "brails.processors.vlm_segmenter package", "brails.processors.vlm_segmenter.grounded_sam_utils module", "brails.processors.vlm_segmenter.segment_anything package", "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator module", "brails.processors.vlm_segmenter.segment_anything.build_sam module", "brails.processors.vlm_segmenter.segment_anything.build_sam_hq module", "brails.processors.vlm_segmenter.segment_anything.modeling package", "brails.processors.vlm_segmenter.segment_anything.modeling.common module", "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder module", "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder module", "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq module", "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder module", "brails.processors.vlm_segmenter.segment_anything.modeling.sam module", "brails.processors.vlm_segmenter.segment_anything.modeling.transformer module", "brails.processors.vlm_segmenter.segment_anything.predictor module", "brails.processors.vlm_segmenter.segment_anything.utils package", "brails.processors.vlm_segmenter.segment_anything.utils.amg module", "brails.processors.vlm_segmenter.segment_anything.utils.onnx module", "brails.processors.vlm_segmenter.segment_anything.utils.transforms module", "brails.processors.vlm_segmenter.vlm_segmenter module", "brails.processors.year_built_classifier package", "brails.processors.year_built_classifier.Resnet module", "brails.processors.year_built_classifier.detect module", "brails.processors.year_built_classifier.lib package", "brails.processors.year_built_classifier.lib.datasets module", "brails.processors.year_built_classifier.lib.utils module", "brails.processors.year_built_classifier.model module", "brails.processors.year_built_classifier.train module", "brails.processors.year_built_classifier.weights package", "brails.processors.year_built_classifier.year_built_classifier module", "brails.scrapers package", "brails.scrapers.asce_hazard_data_scraper package", "brails.scrapers.asce_hazard_data_scraper.asce_hazard_data_scraper module", "brails.scrapers.asset_data_augmenter module", "brails.scrapers.fema_firm_scraper package", "brails.scrapers.fema_firm_scraper.fema_firm_scraper module", "brails.scrapers.footprint_scraper module", "brails.scrapers.google_satellite package", "brails.scrapers.google_satellite.google_satellite module", "brails.scrapers.google_streetview package", "brails.scrapers.google_streetview.google_streetview module", "brails.scrapers.image_scraper module", "brails.scrapers.ms_footprint_scraper package", "brails.scrapers.ms_footprint_scraper.ms_footprint_handler module", "brails.scrapers.nbi_scraper package", "brails.scrapers.nbi_scraper.nbi_scraper module", "brails.scrapers.nsi_parser package", "brails.scrapers.nsi_parser.nsi_parser module", "brails.scrapers.nti_scraper package", "brails.scrapers.nti_scraper.nti_scraper module", "brails.scrapers.osm_footprint_scraper package", "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper module", "brails.scrapers.osm_power_network_scraper package", "brails.scrapers.osm_power_network_scraper.osm_power_network_scraper module", "brails.scrapers.overture_maps_scraper package", "brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper module", "brails.scrapers.overture_maps_scraper.overture_maps_scraper module", "brails.scrapers.usa_footprint_scraper package", "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper module", "brails.scrapers.user_footprints module", "brails.scrapers.usgs_data_scrapers package", "brails.scrapers.usgs_data_scrapers.nlcd_scraper module", "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper module", "brails.types package", "brails.types.asset_inventory module", "brails.types.image_set module", "brails.types.region_boundary module", "brails.utils package", "brails.utils.arcgisapi_service_helper module", "brails.utils.geo_tools module", "brails.utils.importer module", "brails.utils.input_validator module", "brails.utils.inventory_validator module", "brails.utils.model_utils module", "brails.utils.plot_tools module", "brails.utils.rapid_utils module", "brails.utils.segmentation_utils module", "brails.utils.spatial_join_methods package", "brails.utils.spatial_join_methods.base module", "brails.utils.spatial_join_methods.distance_based_point_matcher module", "brails.utils.spatial_join_methods.get_points_in_polygons module", "brails.utils.spatial_join_methods.get_points_near_polygons module", "brails.utils.unit_converter module", "brails", "About", "Acknowledgements", "API Reference", "How to Cite", "Installation", "Copyright and License", "brails.filters.filter.Filter", "brails.types.asset_inventory.Asset", "brails.types.asset_inventory.AssetInventory", "brails.types.image_set.Image", "brails.types.image_set.ImageSet", "brails.types.region_boundary.RegionBoundary", "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper", "brails.utils.geo_tools.GeoTools", "brails.utils.importer.Importer", "brails.utils.input_validator.InputValidator", "brails.utils.inventory_validator.InventoryValidator", "brails.utils.model_utils.ModelUtils", "brails.utils.plot_tools.PlotTools", "brails.utils.rapid_utils.RAPIDUtils", "brails.utils.segmentation_utils.SegmentationUtils", "brails.utils.spatial_join_methods.base.SpatialJoinMethods", "brails.utils.spatial_join_methods.distance_based_point_matcher.DistanceBasedPointMatcher", "brails.utils.spatial_join_methods.get_points_in_polygons.GetPointsInPolygons", "brails.utils.spatial_join_methods.get_points_near_polygons.GetPointsNearPolygons", "brails.utils.unit_converter.UnitConverter"], "titleterms": {"about": 339, "acknowledg": 340, "algorithm": 5, "alias_multinomi": [136, 158], "amg": 271, "api": 341, "arcgisapi_service_help": [323, 351], "arcgisapiservicehelp": 351, "arial_process": 238, "asce_hazard_data_scrap": [286, 287], "asset": 346, "asset_data_augment": 288, "asset_inventori": [319, 346, 347], "assetinventori": 347, "attention_modul": 141, "attention_util": [92, 93, 94], "auto_hu_nj": 46, "automatic_mask_gener": 258, "backbon": [63, 176, 212], "base": [333, 360], "basic_lay": 142, "batchnorm": [79, 106, 192, 228], "batchnorm_reimpl": [80, 193, 229], "brail": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364], "build": 1, "build_sam": 259, "build_sam_hq": 260, "building_material_llm": [58, 59], "buildingclassruleset": 29, "calculate_all_dist": 166, "chimney_detector": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "cifar": [148, 151], "cite": 342, "clip": [250, 251, 252, 253, 254], "clipclassifi": 249, "coco": [65, 178, 214], "comm": [81, 107, 194, 230], "common": 262, "config": [66, 97, 98, 179, 215], "cons_type_classifi": [85, 86], "constant": 10, "constructiontypeclassifi": 86, "content": [7, 8], "content_value_infer": 54, "copyright": 344, "csail_seg": [96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "csail_segment": 129, "csail_segmentation_tool": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "custom_transform": [137, 159], "data": [99, 113, 114, 115, 116, 117], "data_parallel": 111, "dataload": 114, "dataset": [67, 100, 115, 171, 180, 216, 279], "default": 98, "detect": [130, 277], "distance_based_point_match": [334, 361], "distancebasedpointmatch": 361, "distribut": 116, "download": 2, "efficientdet": [64, 65, 66, 67, 68, 69, 70, 177, 178, 179, 180, 181, 182, 183, 213, 214, 215, 216, 217, 218, 219], "efficientnet": [71, 72, 73, 74, 184, 185, 186, 187, 220, 221, 222, 223], "eval": 101, "eval_multipro": 102, "exampl": [0, 236], "except": 11, "facade_pars": [87, 88], "fema_firm_scrap": [289, 290], "ffh_predictor_klepac": [89, 90], "filter": [3, 12, 13, 14, 15, 345], "floor_area_infer": 55, "folder": 152, "footprint": 1, "footprint_scrap": 291, "foundation_classifi": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "galleri": 0, "garage_detector": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197], "generate_csv": 172, "geo_tool": [324, 352], "geotool": 352, "get_points_in_polygon": [335, 362], "get_points_near_polygon": [336, 363], "getpointsinpolygon": 362, "getpointsnearpolygon": 363, "google_satellit": [292, 293], "google_streetview": [294, 295], "gpt": 199, "gpt_base_model": [198, 199, 200], "grounded_sam_util": 256, "hazus_infer": [21, 22, 23], "hazus_inferer_earthquak": [24, 25], "hazus_inferer_flood": [26, 27], "hazus_inferer_wind": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "hazus_ruleset": 23, "house_view": [14, 15], "how": 342, "hrnet": 120, "imag": [2, 3, 348], "image_classifi": [201, 202], "image_encod": 263, "image_processor": 203, "image_scrap": 296, "image_segment": [204, 205], "image_set": [320, 348, 349], "imageset": 349, "import": [4, 325, 353], "imput": [5, 16, 17, 18, 19], "indic": [7, 8], "infer": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "infer_detector": [75, 188, 224], "inference_engin": 48, "input_valid": [326, 354], "inputvalid": 354, "instal": 343, "integr": 6, "inventory_valid": [327, 355], "inventoryvalid": 355, "knn_imput": [18, 19], "lib": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 132, 133, 134, 135, 136, 137, 138, 139, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 278, 279, 280], "licens": 344, "linearaverag": [133, 155], "loss": [68, 181, 217], "main": 149, "mask_decod": 264, "mask_decoder_hq": 265, "mdistanc": 147, "mnist": 153, "mobilenet": 121, "model": [69, 72, 119, 120, 121, 122, 123, 124, 125, 140, 141, 142, 143, 144, 145, 182, 185, 218, 221, 252, 261, 262, 263, 264, 265, 266, 267, 268, 281], "model_util": [328, 356], "modelutil": 356, "modul": [10, 11, 13, 15, 17, 19, 22, 23, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 54, 55, 56, 59, 61, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 86, 88, 90, 93, 94, 98, 100, 101, 102, 105, 106, 107, 108, 109, 111, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 169, 171, 172, 174, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 199, 200, 202, 203, 205, 207, 209, 212, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 241, 243, 245, 247, 249, 251, 252, 253, 254, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 284, 287, 288, 290, 291, 293, 295, 296, 298, 300, 302, 304, 306, 308, 310, 311, 313, 314, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337], "ms_footprint_handl": 298, "ms_footprint_scrap": [297, 298], "nbi_scrap": [299, 300], "nceaverag": [134, 156], "ncecriterion": [135, 157], "nfloor_detector": 234, "nfloor_gpt": [206, 207], "nfloor_vlm": [208, 209], "nfloors_detector": [210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "nlcd_infer": [49, 50], "nlcd_scraper": 316, "nlcd_to_coarse_land_cov": 50, "nn": [104, 105, 106, 107, 108, 109, 110, 111], "normal": [138, 160], "note": 236, "notebook": [1, 5, 6], "npid": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "npid_dataset": [150, 151, 152, 153], "npid_lib": [154, 155, 156, 157, 158, 159, 160, 161], "npid_model": [162, 163, 164], "npid_toolbox": [165, 166], "nsi": 6, "nsi_pars": [301, 302], "nti_scrap": [303, 304], "occupancy_classifi": [235, 236], "onnx": 272, "osm_footprint_scrap": [305, 306], "osm_power_network_scrap": [307, 308], "other_idea": [237, 238, 239], "overture_maps_footprint_scrap": 310, "overture_maps_scrap": [309, 310, 311], "packag": [9, 12, 14, 16, 18, 20, 21, 24, 26, 28, 49, 51, 53, 57, 58, 60, 62, 64, 71, 77, 78, 85, 87, 89, 91, 92, 95, 96, 97, 99, 103, 104, 105, 110, 112, 113, 119, 132, 140, 146, 150, 154, 162, 165, 170, 173, 175, 177, 184, 190, 191, 198, 201, 204, 206, 208, 210, 211, 213, 220, 226, 227, 235, 237, 240, 242, 244, 246, 248, 250, 255, 257, 261, 270, 275, 278, 283, 285, 286, 289, 292, 294, 297, 299, 301, 303, 305, 307, 309, 312, 315, 318, 322, 332], "parallel": [110, 111], "plot_tool": [329, 357], "plottool": 357, "predictor": 269, "processor": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284], "prompt_encod": 266, "radam": 93, "rapid_util": [330, 358], "rapidutil": 358, "refer": 341, "region_boundari": [321, 350], "regionboundari": 350, "replic": [82, 108, 195, 231], "residual_attention_network": 143, "resnet": [123, 163, 276], "resnet_appli": 144, "resnet_cifar": 164, "resnext": 124, "roof_shape_classifi": [240, 241], "roof_shape_gpt": [242, 243], "roof_shape_vlm": [244, 245], "sam": 267, "sampler": 117, "save_masked_imag": 168, "scraper": [285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "segment_anyth": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "segmentation_util": [331, 359], "segmentationutil": 359, "simcenter_infer": [51, 52], "simple_token": 253, "sknet": 145, "spatial_join_method": [332, 333, 334, 335, 336, 360, 361, 362, 363], "spatialjoinmethod": 360, "street_level_damage_detect": [246, 247], "street_processor": 239, "submodul": [9, 12, 14, 16, 18, 20, 21, 24, 26, 28, 49, 51, 53, 57, 58, 60, 62, 64, 71, 77, 78, 85, 87, 89, 91, 92, 95, 96, 97, 105, 110, 112, 113, 119, 132, 140, 146, 150, 154, 162, 165, 170, 173, 175, 177, 184, 190, 191, 198, 201, 204, 206, 208, 210, 211, 213, 220, 226, 227, 235, 237, 240, 242, 244, 246, 248, 250, 255, 257, 261, 270, 275, 278, 285, 286, 289, 292, 294, 297, 299, 301, 303, 305, 307, 309, 312, 315, 318, 322, 332], "subpackag": [9, 12, 14, 16, 20, 57, 60, 62, 77, 91, 95, 96, 103, 104, 112, 146, 173, 175, 190, 210, 211, 226, 248, 255, 257, 275, 285, 322], "sync_batchnorm": [78, 79, 80, 81, 82, 83, 191, 192, 193, 194, 195, 196, 227, 228, 229, 230, 231, 232], "tabl": [7, 8], "test": [126, 167], "th": 118, "train": [127, 169, 282], "train_detector": [76, 189, 225], "transform": [268, 273], "type": [318, 319, 320, 321, 346, 347, 348, 349, 350], "unit_convert": [337, 364], "unitconvert": 364, "unittest": [83, 109, 196, 232], "usa_footprint_scrap": [312, 313], "user_footprint": 314, "user_infer": [53, 54, 55, 56], "usgs_data_scrap": [315, 316, 317], "usgs_elevation_scrap": 317, "util": [70, 73, 77, 78, 79, 80, 81, 82, 83, 84, 94, 112, 113, 114, 115, 116, 117, 118, 125, 128, 139, 161, 170, 171, 172, 183, 186, 190, 191, 192, 193, 194, 195, 196, 197, 200, 219, 222, 226, 227, 228, 229, 230, 231, 232, 233, 254, 270, 271, 272, 273, 280, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364], "utils_extra": [74, 187, 223], "vlm_image_classifi": [248, 249, 250, 251, 252, 253, 254], "vlm_segment": [255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "weight": 283, "windcecbruleset": 30, "windcerbruleset": 31, "windefruleset": 32, "windmecbruleset": 33, "windmerbruleset": 34, "windmetavarruleset": 40, "windmhruleset": 35, "windmlriruleset": 36, "windmlrmruleset": 37, "windmmuhruleset": 38, "windmsfruleset": 39, "windsecbruleset": 41, "windserbruleset": 42, "windspmbruleset": 43, "windwmuhruleset": 44, "windwsfruleset": 45, "year_built_classifi": [275, 276, 277, 278, 279, 280, 281, 282, 283, 284]}})