Search.setIndex({"alltitles": {"About": [[342, "about"]], "Acknowledgements": [[343, "acknowledgements"]], "BSD 3-Caluse license": [[1, "bsd-3-caluse-license"]], "BSD 3-Clause license": [[0, "bsd-3-clause-license"]], "BrailsPlusPlus": [[340, "brailsplusplus"]], "Building Footprints": [[3, "building-footprints"]], "Cleaning the Dataset": [[0, "cleaning-the-dataset"], [1, "cleaning-the-dataset"]], "Contents:": [[9, null]], "Copyright": [[0, "copyright"], [1, "copyright"]], "Copyright and License": [[346, "copyright-and-license"]], "Downloading Images": [[4, "downloading-images"]], "Example:": [[237, "example"]], "Examples": [[2, "examples"]], "Examples Gallery": [[2, "examples-gallery"]], "Execute with pretrained model": [[1, "execute-with-pretrained-model"]], "Execute with the pretrained model": [[0, "execute-with-the-pretrained-model"]], "Footprint Notebook": [[3, "footprint-notebook"]], "Foundation Classification Model Training": [[0, "foundation-classification-model-training"], [1, "foundation-classification-model-training"]], "How to Cite": [[344, "how-to-cite"]], "How to use": [[0, "how-to-use"], [1, "how-to-use"]], "Image Filters": [[5, "image-filters"]], "Importer": [[6, "importer"]], "Imputation Algorithms": [[7, "imputation-algorithms"]], "Imputation Notebook": [[7, "imputation-notebook"]], "Indices and tables": [[9, "indices-and-tables"]], "Input Data Format for Training": [[0, "input-data-format-for-training"], [1, "input-data-format-for-training"]], "Installation": [[0, "installation"], [1, "installation"], [345, "installation"]], "NSI Integration": [[8, "nsi-integration"]], "NSI Integration Notebook": [[8, "nsi-integration-notebook"]], "Notes:": [[237, "notes"]], "Optional Improvements": [[0, "optional-improvements"]], "Pre-Saving Masked Images": [[0, "pre-saving-masked-images"]], "Raised Foundation Classification": [[0, "raised-foundation-classification"]], "Submodules": [[10, "submodules"], [13, "submodules"], [15, "submodules"], [17, "submodules"], [19, "submodules"], [21, "submodules"], [22, "submodules"], [25, "submodules"], [27, "submodules"], [29, "submodules"], [50, "submodules"], [52, "submodules"], [54, "submodules"], [58, "submodules"], [59, "submodules"], [61, "submodules"], [63, "submodules"], [65, "submodules"], [72, "submodules"], [78, "submodules"], [79, "submodules"], [86, "submodules"], [88, "submodules"], [90, "submodules"], [92, "submodules"], [93, "submodules"], [96, "submodules"], [97, "submodules"], [98, "submodules"], [106, "submodules"], [111, "submodules"], [113, "submodules"], [114, "submodules"], [120, "submodules"], [133, "submodules"], [141, "submodules"], [147, "submodules"], [151, "submodules"], [155, "submodules"], [163, "submodules"], [166, "submodules"], [171, "submodules"], [174, "submodules"], [176, "submodules"], [178, "submodules"], [185, "submodules"], [191, "submodules"], [192, "submodules"], [199, "submodules"], [202, "submodules"], [205, "submodules"], [207, "submodules"], [209, "submodules"], [211, "submodules"], [212, "submodules"], [214, "submodules"], [221, "submodules"], [227, "submodules"], [228, "submodules"], [236, "submodules"], [238, "submodules"], [241, "submodules"], [243, "submodules"], [245, "submodules"], [247, "submodules"], [249, "submodules"], [251, "submodules"], [256, "submodules"], [258, "submodules"], [262, "submodules"], [271, "submodules"], [276, "submodules"], [279, "submodules"], [286, "submodules"], [287, "submodules"], [290, "submodules"], [293, "submodules"], [295, "submodules"], [298, "submodules"], [300, "submodules"], [302, "submodules"], [304, "submodules"], [306, "submodules"], [308, "submodules"], [310, "submodules"], [313, "submodules"], [316, "submodules"], [319, "submodules"], [323, "submodules"], [333, "submodules"]], "Subpackages": [[10, "subpackages"], [13, "subpackages"], [15, "subpackages"], [17, "subpackages"], [21, "subpackages"], [58, "subpackages"], [61, "subpackages"], [63, "subpackages"], [78, "subpackages"], [92, "subpackages"], [96, "subpackages"], [97, "subpackages"], [104, "subpackages"], [105, "subpackages"], [113, "subpackages"], [147, "subpackages"], [174, "subpackages"], [176, "subpackages"], [191, "subpackages"], [211, "subpackages"], [212, "subpackages"], [227, "subpackages"], [249, "subpackages"], [256, "subpackages"], [258, "subpackages"], [276, "subpackages"], [286, "subpackages"], [323, "subpackages"]], "Table of Contents": [[1, "table-of-contents"]], "Training the Model": [[0, "training-the-model"], [1, "training-the-model"]], "Unsupervised Pretraining": [[0, "unsupervised-pretraining"]], "What is Raised Foundation Classification": [[0, "what-is-raised-foundation-classification"]], "What is Year Built Classification": [[1, "what-is-year-built-classification"]], "Year Built Classification": [[1, "year-built-classification"]], "brails package": [[10, "module-brails"]], "brails.constants module": [[11, "module-brails.constants"]], "brails.exceptions module": [[12, "module-brails.exceptions"]], "brails.filters package": [[13, "module-brails.filters"]], "brails.filters.filter module": [[14, "module-brails.filters.filter"]], "brails.filters.house_view package": [[15, "module-brails.filters.house_view"]], "brails.filters.house_view.house_view module": [[16, "module-brails.filters.house_view.house_view"]], "brails.imputers package": [[17, "module-brails.imputers"]], "brails.imputers.imputation module": [[18, "module-brails.imputers.imputation"]], "brails.imputers.knn_imputer package": [[19, "module-brails.imputers.knn_imputer"]], "brails.imputers.knn_imputer.knn_imputer module": [[20, "module-brails.imputers.knn_imputer.knn_imputer"]], "brails.inferers package": [[21, "module-brails.inferers"]], "brails.inferers.hazus_inferer package": [[22, "module-brails.inferers.hazus_inferer"]], "brails.inferers.hazus_inferer.hazus_inferer module": [[23, "module-brails.inferers.hazus_inferer.hazus_inferer"]], "brails.inferers.hazus_inferer.hazus_rulesets module": [[24, "module-brails.inferers.hazus_inferer.hazus_rulesets"]], "brails.inferers.hazus_inferer_earthquake package": [[25, "module-brails.inferers.hazus_inferer_earthquake"]], "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake module": [[26, "module-brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake"]], "brails.inferers.hazus_inferer_flood package": [[27, "module-brails.inferers.hazus_inferer_flood"]], "brails.inferers.hazus_inferer_flood.hazus_inferer_flood module": [[28, "module-brails.inferers.hazus_inferer_flood.hazus_inferer_flood"]], "brails.inferers.hazus_inferer_wind package": [[29, "module-brails.inferers.hazus_inferer_wind"]], "brails.inferers.hazus_inferer_wind.BuildingClassRulesets module": [[30, "module-brails.inferers.hazus_inferer_wind.BuildingClassRulesets"]], "brails.inferers.hazus_inferer_wind.WindCECBRulesets module": [[31, "module-brails.inferers.hazus_inferer_wind.WindCECBRulesets"]], "brails.inferers.hazus_inferer_wind.WindCERBRulesets module": [[32, "module-brails.inferers.hazus_inferer_wind.WindCERBRulesets"]], "brails.inferers.hazus_inferer_wind.WindEFRulesets module": [[33, "module-brails.inferers.hazus_inferer_wind.WindEFRulesets"]], "brails.inferers.hazus_inferer_wind.WindMECBRulesets module": [[34, "module-brails.inferers.hazus_inferer_wind.WindMECBRulesets"]], "brails.inferers.hazus_inferer_wind.WindMERBRulesets module": [[35, "module-brails.inferers.hazus_inferer_wind.WindMERBRulesets"]], "brails.inferers.hazus_inferer_wind.WindMHRulesets module": [[36, "module-brails.inferers.hazus_inferer_wind.WindMHRulesets"]], "brails.inferers.hazus_inferer_wind.WindMLRIRulesets module": [[37, "module-brails.inferers.hazus_inferer_wind.WindMLRIRulesets"]], "brails.inferers.hazus_inferer_wind.WindMLRMRulesets module": [[38, "module-brails.inferers.hazus_inferer_wind.WindMLRMRulesets"]], "brails.inferers.hazus_inferer_wind.WindMMUHRulesets module": [[39, "module-brails.inferers.hazus_inferer_wind.WindMMUHRulesets"]], "brails.inferers.hazus_inferer_wind.WindMSFRulesets module": [[40, "module-brails.inferers.hazus_inferer_wind.WindMSFRulesets"]], "brails.inferers.hazus_inferer_wind.WindMetaVarRulesets module": [[41, "module-brails.inferers.hazus_inferer_wind.WindMetaVarRulesets"]], "brails.inferers.hazus_inferer_wind.WindSECBRulesets module": [[42, "module-brails.inferers.hazus_inferer_wind.WindSECBRulesets"]], "brails.inferers.hazus_inferer_wind.WindSERBRulesets module": [[43, "module-brails.inferers.hazus_inferer_wind.WindSERBRulesets"]], "brails.inferers.hazus_inferer_wind.WindSPMBRulesets module": [[44, "module-brails.inferers.hazus_inferer_wind.WindSPMBRulesets"]], "brails.inferers.hazus_inferer_wind.WindWMUHRulesets module": [[45, "module-brails.inferers.hazus_inferer_wind.WindWMUHRulesets"]], "brails.inferers.hazus_inferer_wind.WindWSFRulesets module": [[46, "module-brails.inferers.hazus_inferer_wind.WindWSFRulesets"]], "brails.inferers.hazus_inferer_wind.auto_HU_NJ module": [[47, "module-brails.inferers.hazus_inferer_wind.auto_HU_NJ"]], "brails.inferers.hazus_inferer_wind.hazus_inferer_wind module": [[48, "module-brails.inferers.hazus_inferer_wind.hazus_inferer_wind"]], "brails.inferers.inference_engine module": [[49, "module-brails.inferers.inference_engine"]], "brails.inferers.nlcd_inferer package": [[50, "module-brails.inferers.nlcd_inferer"]], "brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover module": [[51, "module-brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover"]], "brails.inferers.simcenter_inferer package": [[52, "module-brails.inferers.simcenter_inferer"]], "brails.inferers.simcenter_inferer.simCenter_inferer module": [[53, "module-brails.inferers.simcenter_inferer.simCenter_inferer"]], "brails.inferers.user_inferer package": [[54, "module-brails.inferers.user_inferer"]], "brails.inferers.user_inferer.content_value_inferer module": [[55, "module-brails.inferers.user_inferer.content_value_inferer"]], "brails.inferers.user_inferer.floor_area_inferer module": [[56, "module-brails.inferers.user_inferer.floor_area_inferer"]], "brails.inferers.user_inferer.user_inferer module": [[57, "module-brails.inferers.user_inferer.user_inferer"]], "brails.processors package": [[58, "module-brails.processors"]], "brails.processors.building_material_llm package": [[59, "module-brails.processors.building_material_llm"]], "brails.processors.building_material_llm.building_material_llm module": [[60, "module-brails.processors.building_material_llm.building_material_llm"]], "brails.processors.chimney_detector package": [[61, "module-brails.processors.chimney_detector"]], "brails.processors.chimney_detector.chimney_detector module": [[62, "brails-processors-chimney-detector-chimney-detector-module"]], "brails.processors.chimney_detector.lib package": [[63, "module-brails.processors.chimney_detector.lib"]], "brails.processors.chimney_detector.lib.backbone module": [[64, "brails-processors-chimney-detector-lib-backbone-module"]], "brails.processors.chimney_detector.lib.efficientdet package": [[65, "module-brails.processors.chimney_detector.lib.efficientdet"]], "brails.processors.chimney_detector.lib.efficientdet.coco module": [[66, "module-brails.processors.chimney_detector.lib.efficientdet.coco"]], "brails.processors.chimney_detector.lib.efficientdet.config module": [[67, "module-brails.processors.chimney_detector.lib.efficientdet.config"]], "brails.processors.chimney_detector.lib.efficientdet.dataset module": [[68, "brails-processors-chimney-detector-lib-efficientdet-dataset-module"]], "brails.processors.chimney_detector.lib.efficientdet.loss module": [[69, "brails-processors-chimney-detector-lib-efficientdet-loss-module"]], "brails.processors.chimney_detector.lib.efficientdet.model module": [[70, "brails-processors-chimney-detector-lib-efficientdet-model-module"]], "brails.processors.chimney_detector.lib.efficientdet.utils module": [[71, "module-brails.processors.chimney_detector.lib.efficientdet.utils"]], "brails.processors.chimney_detector.lib.efficientnet package": [[72, "module-brails.processors.chimney_detector.lib.efficientnet"]], "brails.processors.chimney_detector.lib.efficientnet.model module": [[73, "module-brails.processors.chimney_detector.lib.efficientnet.model"]], "brails.processors.chimney_detector.lib.efficientnet.utils module": [[74, "module-brails.processors.chimney_detector.lib.efficientnet.utils"]], "brails.processors.chimney_detector.lib.efficientnet.utils_extra module": [[75, "module-brails.processors.chimney_detector.lib.efficientnet.utils_extra"]], "brails.processors.chimney_detector.lib.infer_detector module": [[76, "brails-processors-chimney-detector-lib-infer-detector-module"]], "brails.processors.chimney_detector.lib.train_detector module": [[77, "brails-processors-chimney-detector-lib-train-detector-module"]], "brails.processors.chimney_detector.lib.utils package": [[78, "module-brails.processors.chimney_detector.lib.utils"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm package": [[79, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm module": [[80, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl module": [[81, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm module": [[82, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate module": [[83, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest module": [[84, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest"]], "brails.processors.chimney_detector.lib.utils.utils module": [[85, "brails-processors-chimney-detector-lib-utils-utils-module"]], "brails.processors.cons_type_classifier package": [[86, "module-brails.processors.cons_type_classifier"]], "brails.processors.cons_type_classifier.ConstructionTypeClassifier module": [[87, "module-brails.processors.cons_type_classifier.ConstructionTypeClassifier"]], "brails.processors.facade_parser package": [[88, "module-brails.processors.facade_parser"]], "brails.processors.facade_parser.facade_parser module": [[89, "module-brails.processors.facade_parser.facade_parser"]], "brails.processors.ffh_predictor_klepac package": [[90, "module-brails.processors.ffh_predictor_klepac"]], "brails.processors.ffh_predictor_klepac.ffh_predictor_klepac module": [[91, "module-brails.processors.ffh_predictor_klepac.ffh_predictor_klepac"]], "brails.processors.foundation_classifier package": [[92, "module-brails.processors.foundation_classifier"]], "brails.processors.foundation_classifier.attention_utils package": [[93, "module-brails.processors.foundation_classifier.attention_utils"]], "brails.processors.foundation_classifier.attention_utils.radam module": [[94, "module-brails.processors.foundation_classifier.attention_utils.radam"]], "brails.processors.foundation_classifier.attention_utils.utils module": [[95, "module-brails.processors.foundation_classifier.attention_utils.utils"]], "brails.processors.foundation_classifier.csail_segmentation_tool package": [[96, "module-brails.processors.foundation_classifier.csail_segmentation_tool"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg package": [[97, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config package": [[98, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults module": [[99, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data package": [[100, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset module": [[101, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval module": [[102, "brails-processors-foundation-classifier-csail-segmentation-tool-csail-seg-eval-module"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval_multipro module": [[103, "brails-processors-foundation-classifier-csail-segmentation-tool-csail-seg-eval-multipro-module"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib package": [[104, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn package": [[105, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules package": [[106, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm module": [[107, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm module": [[108, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate module": [[109, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest module": [[110, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel package": [[111, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel module": [[112, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils package": [[113, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data package": [[114, "brails-processors-foundation-classifier-csail-segmentation-tool-csail-seg-lib-utils-data-package"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataloader module": [[115, "brails-processors-foundation-classifier-csail-segmentation-tool-csail-seg-lib-utils-data-dataloader-module"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset module": [[116, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.distributed module": [[117, "brails-processors-foundation-classifier-csail-segmentation-tool-csail-seg-lib-utils-data-distributed-module"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler module": [[118, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th module": [[119, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models package": [[120, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet module": [[121, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet module": [[122, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models module": [[123, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet module": [[124, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext module": [[125, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils module": [[126, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.test module": [[127, "brails-processors-foundation-classifier-csail-segmentation-tool-csail-seg-test-module"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.train module": [[128, "brails-processors-foundation-classifier-csail-segmentation-tool-csail-seg-train-module"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils module": [[129, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation module": [[130, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation"]], "brails.processors.foundation_classifier.detect module": [[131, "brails-processors-foundation-classifier-detect-module"]], "brails.processors.foundation_classifier.foundation_classifier module": [[132, "module-brails.processors.foundation_classifier.foundation_classifier"]], "brails.processors.foundation_classifier.lib package": [[133, "module-brails.processors.foundation_classifier.lib"]], "brails.processors.foundation_classifier.lib.LinearAverage module": [[134, "module-brails.processors.foundation_classifier.lib.LinearAverage"]], "brails.processors.foundation_classifier.lib.NCEAverage module": [[135, "module-brails.processors.foundation_classifier.lib.NCEAverage"]], "brails.processors.foundation_classifier.lib.NCECriterion module": [[136, "module-brails.processors.foundation_classifier.lib.NCECriterion"]], "brails.processors.foundation_classifier.lib.alias_multinomial module": [[137, "module-brails.processors.foundation_classifier.lib.alias_multinomial"]], "brails.processors.foundation_classifier.lib.custom_transforms module": [[138, "module-brails.processors.foundation_classifier.lib.custom_transforms"]], "brails.processors.foundation_classifier.lib.normalize module": [[139, "module-brails.processors.foundation_classifier.lib.normalize"]], "brails.processors.foundation_classifier.lib.utils module": [[140, "module-brails.processors.foundation_classifier.lib.utils"]], "brails.processors.foundation_classifier.models package": [[141, "module-brails.processors.foundation_classifier.models"]], "brails.processors.foundation_classifier.models.attention_module module": [[142, "module-brails.processors.foundation_classifier.models.attention_module"]], "brails.processors.foundation_classifier.models.basic_layer module": [[143, "module-brails.processors.foundation_classifier.models.basic_layer"]], "brails.processors.foundation_classifier.models.residual_attention_network module": [[144, "module-brails.processors.foundation_classifier.models.residual_attention_network"]], "brails.processors.foundation_classifier.models.resnet_applied module": [[145, "module-brails.processors.foundation_classifier.models.resnet_applied"]], "brails.processors.foundation_classifier.models.sknet module": [[146, "module-brails.processors.foundation_classifier.models.sknet"]], "brails.processors.foundation_classifier.npid package": [[147, "module-brails.processors.foundation_classifier.npid"]], "brails.processors.foundation_classifier.npid.MDistance module": [[148, "brails-processors-foundation-classifier-npid-mdistance-module"]], "brails.processors.foundation_classifier.npid.cifar module": [[149, "brails-processors-foundation-classifier-npid-cifar-module"]], "brails.processors.foundation_classifier.npid.main module": [[150, "brails-processors-foundation-classifier-npid-main-module"]], "brails.processors.foundation_classifier.npid.npid_datasets package": [[151, "module-brails.processors.foundation_classifier.npid.npid_datasets"]], "brails.processors.foundation_classifier.npid.npid_datasets.cifar module": [[152, "module-brails.processors.foundation_classifier.npid.npid_datasets.cifar"]], "brails.processors.foundation_classifier.npid.npid_datasets.folder module": [[153, "module-brails.processors.foundation_classifier.npid.npid_datasets.folder"]], "brails.processors.foundation_classifier.npid.npid_datasets.mnist module": [[154, "module-brails.processors.foundation_classifier.npid.npid_datasets.mnist"]], "brails.processors.foundation_classifier.npid.npid_lib package": [[155, "module-brails.processors.foundation_classifier.npid.npid_lib"]], "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage module": [[156, "module-brails.processors.foundation_classifier.npid.npid_lib.LinearAverage"]], "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage module": [[157, "module-brails.processors.foundation_classifier.npid.npid_lib.NCEAverage"]], "brails.processors.foundation_classifier.npid.npid_lib.NCECriterion module": [[158, "module-brails.processors.foundation_classifier.npid.npid_lib.NCECriterion"]], "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial module": [[159, "module-brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial"]], "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms module": [[160, "module-brails.processors.foundation_classifier.npid.npid_lib.custom_transforms"]], "brails.processors.foundation_classifier.npid.npid_lib.normalize module": [[161, "module-brails.processors.foundation_classifier.npid.npid_lib.normalize"]], "brails.processors.foundation_classifier.npid.npid_lib.utils module": [[162, "module-brails.processors.foundation_classifier.npid.npid_lib.utils"]], "brails.processors.foundation_classifier.npid.npid_models package": [[163, "brails-processors-foundation-classifier-npid-npid-models-package"]], "brails.processors.foundation_classifier.npid.npid_models.resnet module": [[164, "brails-processors-foundation-classifier-npid-npid-models-resnet-module"]], "brails.processors.foundation_classifier.npid.npid_models.resnet_cifar module": [[165, "brails-processors-foundation-classifier-npid-npid-models-resnet-cifar-module"]], "brails.processors.foundation_classifier.npid.npid_toolbox package": [[166, "module-brails.processors.foundation_classifier.npid.npid_toolbox"]], "brails.processors.foundation_classifier.npid.npid_toolbox.calculate_all_distances module": [[167, "brails-processors-foundation-classifier-npid-npid-toolbox-calculate-all-distances-module"]], "brails.processors.foundation_classifier.npid.test module": [[168, "brails-processors-foundation-classifier-npid-test-module"]], "brails.processors.foundation_classifier.save_masked_images module": [[169, "brails-processors-foundation-classifier-save-masked-images-module"]], "brails.processors.foundation_classifier.train module": [[170, "brails-processors-foundation-classifier-train-module"]], "brails.processors.foundation_classifier.utils package": [[171, "module-brails.processors.foundation_classifier.utils"]], "brails.processors.foundation_classifier.utils.Datasets module": [[172, "module-brails.processors.foundation_classifier.utils.Datasets"]], "brails.processors.foundation_classifier.utils.generate_csv module": [[173, "brails-processors-foundation-classifier-utils-generate-csv-module"]], "brails.processors.garage_detector package": [[174, "module-brails.processors.garage_detector"]], "brails.processors.garage_detector.garage_detector module": [[175, "brails-processors-garage-detector-garage-detector-module"]], "brails.processors.garage_detector.lib package": [[176, "module-brails.processors.garage_detector.lib"]], "brails.processors.garage_detector.lib.backbone module": [[177, "brails-processors-garage-detector-lib-backbone-module"]], "brails.processors.garage_detector.lib.efficientdet package": [[178, "module-brails.processors.garage_detector.lib.efficientdet"]], "brails.processors.garage_detector.lib.efficientdet.coco module": [[179, "module-brails.processors.garage_detector.lib.efficientdet.coco"]], "brails.processors.garage_detector.lib.efficientdet.config module": [[180, "module-brails.processors.garage_detector.lib.efficientdet.config"]], "brails.processors.garage_detector.lib.efficientdet.dataset module": [[181, "brails-processors-garage-detector-lib-efficientdet-dataset-module"]], "brails.processors.garage_detector.lib.efficientdet.loss module": [[182, "brails-processors-garage-detector-lib-efficientdet-loss-module"]], "brails.processors.garage_detector.lib.efficientdet.model module": [[183, "brails-processors-garage-detector-lib-efficientdet-model-module"]], "brails.processors.garage_detector.lib.efficientdet.utils module": [[184, "module-brails.processors.garage_detector.lib.efficientdet.utils"]], "brails.processors.garage_detector.lib.efficientnet package": [[185, "module-brails.processors.garage_detector.lib.efficientnet"]], "brails.processors.garage_detector.lib.efficientnet.model module": [[186, "module-brails.processors.garage_detector.lib.efficientnet.model"]], "brails.processors.garage_detector.lib.efficientnet.utils module": [[187, "module-brails.processors.garage_detector.lib.efficientnet.utils"]], "brails.processors.garage_detector.lib.efficientnet.utils_extra module": [[188, "module-brails.processors.garage_detector.lib.efficientnet.utils_extra"]], "brails.processors.garage_detector.lib.infer_detector module": [[189, "brails-processors-garage-detector-lib-infer-detector-module"]], "brails.processors.garage_detector.lib.train_detector module": [[190, "brails-processors-garage-detector-lib-train-detector-module"]], "brails.processors.garage_detector.lib.utils package": [[191, "module-brails.processors.garage_detector.lib.utils"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm package": [[192, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm module": [[193, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl module": [[194, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm module": [[195, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.comm"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate module": [[196, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest module": [[197, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest"]], "brails.processors.garage_detector.lib.utils.utils module": [[198, "brails-processors-garage-detector-lib-utils-utils-module"]], "brails.processors.gpt_base_model package": [[199, "module-brails.processors.gpt_base_model"]], "brails.processors.gpt_base_model.GPT module": [[200, "module-brails.processors.gpt_base_model.GPT"]], "brails.processors.gpt_base_model.utils module": [[201, "module-brails.processors.gpt_base_model.utils"]], "brails.processors.image_classifier package": [[202, "module-brails.processors.image_classifier"]], "brails.processors.image_classifier.image_classifier module": [[203, "module-brails.processors.image_classifier.image_classifier"]], "brails.processors.image_processor module": [[204, "module-brails.processors.image_processor"]], "brails.processors.image_segmenter package": [[205, "module-brails.processors.image_segmenter"]], "brails.processors.image_segmenter.image_segmenter module": [[206, "module-brails.processors.image_segmenter.image_segmenter"]], "brails.processors.nFloor_gpt package": [[207, "module-brails.processors.nFloor_gpt"]], "brails.processors.nFloor_gpt.nFloor_gpt module": [[208, "module-brails.processors.nFloor_gpt.nFloor_gpt"]], "brails.processors.nFloor_vlm package": [[209, "module-brails.processors.nFloor_vlm"]], "brails.processors.nFloor_vlm.nFloor_vlm module": [[210, "module-brails.processors.nFloor_vlm.nFloor_vlm"]], "brails.processors.nfloors_detector package": [[211, "module-brails.processors.nfloors_detector"]], "brails.processors.nfloors_detector.lib package": [[212, "module-brails.processors.nfloors_detector.lib"]], "brails.processors.nfloors_detector.lib.backbone module": [[213, "brails-processors-nfloors-detector-lib-backbone-module"]], "brails.processors.nfloors_detector.lib.efficientdet package": [[214, "module-brails.processors.nfloors_detector.lib.efficientdet"]], "brails.processors.nfloors_detector.lib.efficientdet.coco module": [[215, "module-brails.processors.nfloors_detector.lib.efficientdet.coco"]], "brails.processors.nfloors_detector.lib.efficientdet.config module": [[216, "module-brails.processors.nfloors_detector.lib.efficientdet.config"]], "brails.processors.nfloors_detector.lib.efficientdet.dataset module": [[217, "brails-processors-nfloors-detector-lib-efficientdet-dataset-module"]], "brails.processors.nfloors_detector.lib.efficientdet.loss module": [[218, "brails-processors-nfloors-detector-lib-efficientdet-loss-module"]], "brails.processors.nfloors_detector.lib.efficientdet.model module": [[219, "brails-processors-nfloors-detector-lib-efficientdet-model-module"]], "brails.processors.nfloors_detector.lib.efficientdet.utils module": [[220, "module-brails.processors.nfloors_detector.lib.efficientdet.utils"]], "brails.processors.nfloors_detector.lib.efficientnet package": [[221, "module-brails.processors.nfloors_detector.lib.efficientnet"]], "brails.processors.nfloors_detector.lib.efficientnet.model module": [[222, "module-brails.processors.nfloors_detector.lib.efficientnet.model"]], "brails.processors.nfloors_detector.lib.efficientnet.utils module": [[223, "module-brails.processors.nfloors_detector.lib.efficientnet.utils"]], "brails.processors.nfloors_detector.lib.efficientnet.utils_extra module": [[224, "module-brails.processors.nfloors_detector.lib.efficientnet.utils_extra"]], "brails.processors.nfloors_detector.lib.infer_detector module": [[225, "brails-processors-nfloors-detector-lib-infer-detector-module"]], "brails.processors.nfloors_detector.lib.train_detector module": [[226, "brails-processors-nfloors-detector-lib-train-detector-module"]], "brails.processors.nfloors_detector.lib.utils package": [[227, "module-brails.processors.nfloors_detector.lib.utils"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm package": [[228, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm module": [[229, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl module": [[230, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm module": [[231, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate module": [[232, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest module": [[233, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest"]], "brails.processors.nfloors_detector.lib.utils.utils module": [[234, "brails-processors-nfloors-detector-lib-utils-utils-module"]], "brails.processors.nfloors_detector.nfloor_detector module": [[235, "brails-processors-nfloors-detector-nfloor-detector-module"]], "brails.processors.occupancy_classifier package": [[236, "module-brails.processors.occupancy_classifier"]], "brails.processors.occupancy_classifier.occupancy_classifier module": [[237, "module-brails.processors.occupancy_classifier.occupancy_classifier"]], "brails.processors.other_idea package": [[238, "module-brails.processors.other_idea"]], "brails.processors.other_idea.arial_processing module": [[239, "module-brails.processors.other_idea.arial_processing"]], "brails.processors.other_idea.street_processor module": [[240, "module-brails.processors.other_idea.street_processor"]], "brails.processors.roof_shape_classifier package": [[241, "module-brails.processors.roof_shape_classifier"]], "brails.processors.roof_shape_classifier.roof_shape_classifier module": [[242, "module-brails.processors.roof_shape_classifier.roof_shape_classifier"]], "brails.processors.roof_shape_gpt package": [[243, "module-brails.processors.roof_shape_gpt"]], "brails.processors.roof_shape_gpt.roof_shape_gpt module": [[244, "module-brails.processors.roof_shape_gpt.roof_shape_gpt"]], "brails.processors.roof_shape_vlm package": [[245, "module-brails.processors.roof_shape_vlm"]], "brails.processors.roof_shape_vlm.roof_shape_vlm module": [[246, "module-brails.processors.roof_shape_vlm.roof_shape_vlm"]], "brails.processors.street_level_damage_detection package": [[247, "module-brails.processors.street_level_damage_detection"]], "brails.processors.street_level_damage_detection.street_level_damage_detection module": [[248, "module-brails.processors.street_level_damage_detection.street_level_damage_detection"]], "brails.processors.vlm_image_classifier package": [[249, "module-brails.processors.vlm_image_classifier"]], "brails.processors.vlm_image_classifier.CLIPClassifier module": [[250, "module-brails.processors.vlm_image_classifier.CLIPClassifier"]], "brails.processors.vlm_image_classifier.clip package": [[251, "module-brails.processors.vlm_image_classifier.clip"]], "brails.processors.vlm_image_classifier.clip.clip module": [[252, "module-brails.processors.vlm_image_classifier.clip.clip"]], "brails.processors.vlm_image_classifier.clip.model module": [[253, "module-brails.processors.vlm_image_classifier.clip.model"]], "brails.processors.vlm_image_classifier.clip.simple_tokenizer module": [[254, "module-brails.processors.vlm_image_classifier.clip.simple_tokenizer"]], "brails.processors.vlm_image_classifier.clip.utils module": [[255, "module-brails.processors.vlm_image_classifier.clip.utils"]], "brails.processors.vlm_segmenter package": [[256, "module-brails.processors.vlm_segmenter"]], "brails.processors.vlm_segmenter.grounded_sam_utils module": [[257, "module-brails.processors.vlm_segmenter.grounded_sam_utils"]], "brails.processors.vlm_segmenter.segment_anything package": [[258, "module-brails.processors.vlm_segmenter.segment_anything"]], "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator module": [[259, "module-brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator"]], "brails.processors.vlm_segmenter.segment_anything.build_sam module": [[260, "module-brails.processors.vlm_segmenter.segment_anything.build_sam"]], "brails.processors.vlm_segmenter.segment_anything.build_sam_hq module": [[261, "module-brails.processors.vlm_segmenter.segment_anything.build_sam_hq"]], "brails.processors.vlm_segmenter.segment_anything.modeling package": [[262, "module-brails.processors.vlm_segmenter.segment_anything.modeling"]], "brails.processors.vlm_segmenter.segment_anything.modeling.common module": [[263, "module-brails.processors.vlm_segmenter.segment_anything.modeling.common"]], "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder module": [[264, "module-brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder module": [[265, "module-brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq module": [[266, "module-brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq"]], "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder module": [[267, "module-brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder"]], "brails.processors.vlm_segmenter.segment_anything.modeling.sam module": [[268, "module-brails.processors.vlm_segmenter.segment_anything.modeling.sam"]], "brails.processors.vlm_segmenter.segment_anything.modeling.transformer module": [[269, "module-brails.processors.vlm_segmenter.segment_anything.modeling.transformer"]], "brails.processors.vlm_segmenter.segment_anything.predictor module": [[270, "module-brails.processors.vlm_segmenter.segment_anything.predictor"]], "brails.processors.vlm_segmenter.segment_anything.utils package": [[271, "module-brails.processors.vlm_segmenter.segment_anything.utils"]], "brails.processors.vlm_segmenter.segment_anything.utils.amg module": [[272, "module-brails.processors.vlm_segmenter.segment_anything.utils.amg"]], "brails.processors.vlm_segmenter.segment_anything.utils.onnx module": [[273, "module-brails.processors.vlm_segmenter.segment_anything.utils.onnx"]], "brails.processors.vlm_segmenter.segment_anything.utils.transforms module": [[274, "module-brails.processors.vlm_segmenter.segment_anything.utils.transforms"]], "brails.processors.vlm_segmenter.vlm_segmenter module": [[275, "module-brails.processors.vlm_segmenter.vlm_segmenter"]], "brails.processors.year_built_classifier package": [[276, "module-brails.processors.year_built_classifier"]], "brails.processors.year_built_classifier.Resnet module": [[277, "module-brails.processors.year_built_classifier.Resnet"]], "brails.processors.year_built_classifier.detect module": [[278, "brails-processors-year-built-classifier-detect-module"]], "brails.processors.year_built_classifier.lib package": [[279, "module-brails.processors.year_built_classifier.lib"]], "brails.processors.year_built_classifier.lib.datasets module": [[280, "module-brails.processors.year_built_classifier.lib.datasets"]], "brails.processors.year_built_classifier.lib.utils module": [[281, "module-brails.processors.year_built_classifier.lib.utils"]], "brails.processors.year_built_classifier.model module": [[282, "module-brails.processors.year_built_classifier.model"]], "brails.processors.year_built_classifier.train module": [[283, "brails-processors-year-built-classifier-train-module"]], "brails.processors.year_built_classifier.weights package": [[284, "module-brails.processors.year_built_classifier.weights"]], "brails.processors.year_built_classifier.year_built_classifier module": [[285, "module-brails.processors.year_built_classifier.year_built_classifier"]], "brails.scrapers package": [[286, "module-brails.scrapers"]], "brails.scrapers.asce_hazard_data_scraper package": [[287, "module-brails.scrapers.asce_hazard_data_scraper"]], "brails.scrapers.asce_hazard_data_scraper.asce_hazard_data_scraper module": [[288, "brails-scrapers-asce-hazard-data-scraper-asce-hazard-data-scraper-module"]], "brails.scrapers.asset_data_augmenter module": [[289, "module-brails.scrapers.asset_data_augmenter"]], "brails.scrapers.fema_firm_scraper package": [[290, "module-brails.scrapers.fema_firm_scraper"]], "brails.scrapers.fema_firm_scraper.fema_firm_scraper module": [[291, "module-brails.scrapers.fema_firm_scraper.fema_firm_scraper"]], "brails.scrapers.footprint_scraper module": [[292, "module-brails.scrapers.footprint_scraper"]], "brails.scrapers.google_satellite package": [[293, "module-brails.scrapers.google_satellite"]], "brails.scrapers.google_satellite.google_satellite module": [[294, "module-brails.scrapers.google_satellite.google_satellite"]], "brails.scrapers.google_streetview package": [[295, "module-brails.scrapers.google_streetview"]], "brails.scrapers.google_streetview.google_streetview module": [[296, "module-brails.scrapers.google_streetview.google_streetview"]], "brails.scrapers.image_scraper module": [[297, "module-brails.scrapers.image_scraper"]], "brails.scrapers.ms_footprint_scraper package": [[298, "module-brails.scrapers.ms_footprint_scraper"]], "brails.scrapers.ms_footprint_scraper.ms_footprint_handler module": [[299, "module-brails.scrapers.ms_footprint_scraper.ms_footprint_handler"]], "brails.scrapers.nbi_scraper package": [[300, "module-brails.scrapers.nbi_scraper"]], "brails.scrapers.nbi_scraper.nbi_scraper module": [[301, "module-brails.scrapers.nbi_scraper.nbi_scraper"]], "brails.scrapers.nsi_parser package": [[302, "module-brails.scrapers.nsi_parser"]], "brails.scrapers.nsi_parser.nsi_parser module": [[303, "module-brails.scrapers.nsi_parser.nsi_parser"]], "brails.scrapers.nti_scraper package": [[304, "module-brails.scrapers.nti_scraper"]], "brails.scrapers.nti_scraper.nti_scraper module": [[305, "module-brails.scrapers.nti_scraper.nti_scraper"]], "brails.scrapers.osm_footprint_scraper package": [[306, "module-brails.scrapers.osm_footprint_scraper"]], "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper module": [[307, "module-brails.scrapers.osm_footprint_scraper.osm_footprint_scraper"]], "brails.scrapers.osm_power_network_scraper package": [[308, "module-brails.scrapers.osm_power_network_scraper"]], "brails.scrapers.osm_power_network_scraper.osm_power_network_scraper module": [[309, "module-brails.scrapers.osm_power_network_scraper.osm_power_network_scraper"]], "brails.scrapers.overture_maps_scraper package": [[310, "module-brails.scrapers.overture_maps_scraper"]], "brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper module": [[311, "module-brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper"]], "brails.scrapers.overture_maps_scraper.overture_maps_scraper module": [[312, "module-brails.scrapers.overture_maps_scraper.overture_maps_scraper"]], "brails.scrapers.usa_footprint_scraper package": [[313, "module-brails.scrapers.usa_footprint_scraper"]], "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper module": [[314, "module-brails.scrapers.usa_footprint_scraper.usa_footprint_scraper"]], "brails.scrapers.user_footprints module": [[315, "module-brails.scrapers.user_footprints"]], "brails.scrapers.usgs_data_scrapers package": [[316, "module-brails.scrapers.usgs_data_scrapers"]], "brails.scrapers.usgs_data_scrapers.nlcd_scraper module": [[317, "module-brails.scrapers.usgs_data_scrapers.nlcd_scraper"]], "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper module": [[318, "module-brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper"]], "brails.types package": [[319, "module-brails.types"]], "brails.types.asset_inventory module": [[320, "module-brails.types.asset_inventory"]], "brails.types.image_set module": [[321, "module-brails.types.image_set"]], "brails.types.region_boundary module": [[322, "module-brails.types.region_boundary"]], "brails.utils package": [[323, "module-brails.utils"]], "brails.utils.arcgisapi_service_helper module": [[324, "module-brails.utils.arcgisapi_service_helper"]], "brails.utils.geo_tools module": [[325, "module-brails.utils.geo_tools"]], "brails.utils.importer module": [[326, "module-brails.utils.importer"]], "brails.utils.input_validator module": [[327, "module-brails.utils.input_validator"]], "brails.utils.inventory_validator module": [[328, "module-brails.utils.inventory_validator"]], "brails.utils.model_utils module": [[329, "module-brails.utils.model_utils"]], "brails.utils.plot_tools module": [[330, "module-brails.utils.plot_tools"]], "brails.utils.rapid_utils module": [[331, "module-brails.utils.rapid_utils"]], "brails.utils.segmentation_utils module": [[332, "module-brails.utils.segmentation_utils"]], "brails.utils.spatial_join_methods package": [[333, "module-brails.utils.spatial_join_methods"]], "brails.utils.spatial_join_methods.base module": [[334, "module-brails.utils.spatial_join_methods.base"]], "brails.utils.spatial_join_methods.distance_based_point_matcher module": [[335, "module-brails.utils.spatial_join_methods.distance_based_point_matcher"]], "brails.utils.spatial_join_methods.get_points_in_polygons module": [[336, "module-brails.utils.spatial_join_methods.get_points_in_polygons"]], "brails.utils.spatial_join_methods.get_points_near_polygons module": [[337, "module-brails.utils.spatial_join_methods.get_points_near_polygons"]], "brails.utils.unit_converter module": [[338, "module-brails.utils.unit_converter"]], "conf module": [[339, "conf-module"]], "setup module": [[341, "setup-module"]]}, "docnames": ["brails/processors/foundation_classifier/README", "brails/processors/year_built_classifier/README", "examples/examples", "examples/footprint/footprint", "examples/image_downloads/image_downloads", "examples/image_filters/image_filters", "examples/importer/importer", "examples/imputation/imputation", "examples/nsi_integration/nsi_integration", "index", "rst-code/brails", "rst-code/brails.constants", "rst-code/brails.exceptions", "rst-code/brails.filters", "rst-code/brails.filters.filter", "rst-code/brails.filters.house_view", "rst-code/brails.filters.house_view.house_view", "rst-code/brails.imputers", "rst-code/brails.imputers.imputation", "rst-code/brails.imputers.knn_imputer", "rst-code/brails.imputers.knn_imputer.knn_imputer", "rst-code/brails.inferers", "rst-code/brails.inferers.hazus_inferer", "rst-code/brails.inferers.hazus_inferer.hazus_inferer", "rst-code/brails.inferers.hazus_inferer.hazus_rulesets", "rst-code/brails.inferers.hazus_inferer_earthquake", "rst-code/brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake", "rst-code/brails.inferers.hazus_inferer_flood", "rst-code/brails.inferers.hazus_inferer_flood.hazus_inferer_flood", "rst-code/brails.inferers.hazus_inferer_wind", "rst-code/brails.inferers.hazus_inferer_wind.BuildingClassRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindCECBRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindCERBRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindEFRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindMECBRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindMERBRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindMHRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindMLRIRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindMLRMRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindMMUHRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindMSFRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindMetaVarRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindSECBRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindSERBRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindSPMBRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindWMUHRulesets", "rst-code/brails.inferers.hazus_inferer_wind.WindWSFRulesets", "rst-code/brails.inferers.hazus_inferer_wind.auto_HU_NJ", "rst-code/brails.inferers.hazus_inferer_wind.hazus_inferer_wind", "rst-code/brails.inferers.inference_engine", "rst-code/brails.inferers.nlcd_inferer", "rst-code/brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover", "rst-code/brails.inferers.simcenter_inferer", "rst-code/brails.inferers.simcenter_inferer.simCenter_inferer", "rst-code/brails.inferers.user_inferer", "rst-code/brails.inferers.user_inferer.content_value_inferer", "rst-code/brails.inferers.user_inferer.floor_area_inferer", "rst-code/brails.inferers.user_inferer.user_inferer", "rst-code/brails.processors", "rst-code/brails.processors.building_material_llm", "rst-code/brails.processors.building_material_llm.building_material_llm", "rst-code/brails.processors.chimney_detector", "rst-code/brails.processors.chimney_detector.chimney_detector", "rst-code/brails.processors.chimney_detector.lib", "rst-code/brails.processors.chimney_detector.lib.backbone", "rst-code/brails.processors.chimney_detector.lib.efficientdet", "rst-code/brails.processors.chimney_detector.lib.efficientdet.coco", "rst-code/brails.processors.chimney_detector.lib.efficientdet.config", "rst-code/brails.processors.chimney_detector.lib.efficientdet.dataset", "rst-code/brails.processors.chimney_detector.lib.efficientdet.loss", "rst-code/brails.processors.chimney_detector.lib.efficientdet.model", "rst-code/brails.processors.chimney_detector.lib.efficientdet.utils", "rst-code/brails.processors.chimney_detector.lib.efficientnet", "rst-code/brails.processors.chimney_detector.lib.efficientnet.model", "rst-code/brails.processors.chimney_detector.lib.efficientnet.utils", "rst-code/brails.processors.chimney_detector.lib.efficientnet.utils_extra", "rst-code/brails.processors.chimney_detector.lib.infer_detector", "rst-code/brails.processors.chimney_detector.lib.train_detector", "rst-code/brails.processors.chimney_detector.lib.utils", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest", "rst-code/brails.processors.chimney_detector.lib.utils.utils", "rst-code/brails.processors.cons_type_classifier", "rst-code/brails.processors.cons_type_classifier.ConstructionTypeClassifier", "rst-code/brails.processors.facade_parser", "rst-code/brails.processors.facade_parser.facade_parser", "rst-code/brails.processors.ffh_predictor_klepac", "rst-code/brails.processors.ffh_predictor_klepac.ffh_predictor_klepac", "rst-code/brails.processors.foundation_classifier", "rst-code/brails.processors.foundation_classifier.attention_utils", "rst-code/brails.processors.foundation_classifier.attention_utils.radam", "rst-code/brails.processors.foundation_classifier.attention_utils.utils", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval_multipro", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataloader", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.distributed", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.test", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.train", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation", "rst-code/brails.processors.foundation_classifier.detect", "rst-code/brails.processors.foundation_classifier.foundation_classifier", "rst-code/brails.processors.foundation_classifier.lib", "rst-code/brails.processors.foundation_classifier.lib.LinearAverage", "rst-code/brails.processors.foundation_classifier.lib.NCEAverage", "rst-code/brails.processors.foundation_classifier.lib.NCECriterion", "rst-code/brails.processors.foundation_classifier.lib.alias_multinomial", "rst-code/brails.processors.foundation_classifier.lib.custom_transforms", "rst-code/brails.processors.foundation_classifier.lib.normalize", "rst-code/brails.processors.foundation_classifier.lib.utils", "rst-code/brails.processors.foundation_classifier.models", "rst-code/brails.processors.foundation_classifier.models.attention_module", "rst-code/brails.processors.foundation_classifier.models.basic_layer", "rst-code/brails.processors.foundation_classifier.models.residual_attention_network", "rst-code/brails.processors.foundation_classifier.models.resnet_applied", "rst-code/brails.processors.foundation_classifier.models.sknet", "rst-code/brails.processors.foundation_classifier.npid", "rst-code/brails.processors.foundation_classifier.npid.MDistance", "rst-code/brails.processors.foundation_classifier.npid.cifar", "rst-code/brails.processors.foundation_classifier.npid.main", "rst-code/brails.processors.foundation_classifier.npid.npid_datasets", "rst-code/brails.processors.foundation_classifier.npid.npid_datasets.cifar", "rst-code/brails.processors.foundation_classifier.npid.npid_datasets.folder", "rst-code/brails.processors.foundation_classifier.npid.npid_datasets.mnist", "rst-code/brails.processors.foundation_classifier.npid.npid_lib", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.LinearAverage", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.NCEAverage", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.NCECriterion", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.custom_transforms", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.normalize", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.utils", "rst-code/brails.processors.foundation_classifier.npid.npid_models", "rst-code/brails.processors.foundation_classifier.npid.npid_models.resnet", "rst-code/brails.processors.foundation_classifier.npid.npid_models.resnet_cifar", "rst-code/brails.processors.foundation_classifier.npid.npid_toolbox", "rst-code/brails.processors.foundation_classifier.npid.npid_toolbox.calculate_all_distances", "rst-code/brails.processors.foundation_classifier.npid.test", "rst-code/brails.processors.foundation_classifier.save_masked_images", "rst-code/brails.processors.foundation_classifier.train", "rst-code/brails.processors.foundation_classifier.utils", "rst-code/brails.processors.foundation_classifier.utils.Datasets", "rst-code/brails.processors.foundation_classifier.utils.generate_csv", "rst-code/brails.processors.garage_detector", "rst-code/brails.processors.garage_detector.garage_detector", "rst-code/brails.processors.garage_detector.lib", "rst-code/brails.processors.garage_detector.lib.backbone", "rst-code/brails.processors.garage_detector.lib.efficientdet", "rst-code/brails.processors.garage_detector.lib.efficientdet.coco", "rst-code/brails.processors.garage_detector.lib.efficientdet.config", "rst-code/brails.processors.garage_detector.lib.efficientdet.dataset", "rst-code/brails.processors.garage_detector.lib.efficientdet.loss", "rst-code/brails.processors.garage_detector.lib.efficientdet.model", "rst-code/brails.processors.garage_detector.lib.efficientdet.utils", "rst-code/brails.processors.garage_detector.lib.efficientnet", "rst-code/brails.processors.garage_detector.lib.efficientnet.model", "rst-code/brails.processors.garage_detector.lib.efficientnet.utils", "rst-code/brails.processors.garage_detector.lib.efficientnet.utils_extra", "rst-code/brails.processors.garage_detector.lib.infer_detector", "rst-code/brails.processors.garage_detector.lib.train_detector", "rst-code/brails.processors.garage_detector.lib.utils", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.comm", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest", "rst-code/brails.processors.garage_detector.lib.utils.utils", "rst-code/brails.processors.gpt_base_model", "rst-code/brails.processors.gpt_base_model.GPT", "rst-code/brails.processors.gpt_base_model.utils", "rst-code/brails.processors.image_classifier", "rst-code/brails.processors.image_classifier.image_classifier", "rst-code/brails.processors.image_processor", "rst-code/brails.processors.image_segmenter", "rst-code/brails.processors.image_segmenter.image_segmenter", "rst-code/brails.processors.nFloor_gpt", "rst-code/brails.processors.nFloor_gpt.nFloor_gpt", "rst-code/brails.processors.nFloor_vlm", "rst-code/brails.processors.nFloor_vlm.nFloor_vlm", "rst-code/brails.processors.nfloors_detector", "rst-code/brails.processors.nfloors_detector.lib", "rst-code/brails.processors.nfloors_detector.lib.backbone", "rst-code/brails.processors.nfloors_detector.lib.efficientdet", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.coco", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.config", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.dataset", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.loss", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.model", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.utils", "rst-code/brails.processors.nfloors_detector.lib.efficientnet", "rst-code/brails.processors.nfloors_detector.lib.efficientnet.model", "rst-code/brails.processors.nfloors_detector.lib.efficientnet.utils", "rst-code/brails.processors.nfloors_detector.lib.efficientnet.utils_extra", "rst-code/brails.processors.nfloors_detector.lib.infer_detector", "rst-code/brails.processors.nfloors_detector.lib.train_detector", "rst-code/brails.processors.nfloors_detector.lib.utils", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest", "rst-code/brails.processors.nfloors_detector.lib.utils.utils", "rst-code/brails.processors.nfloors_detector.nfloor_detector", "rst-code/brails.processors.occupancy_classifier", "rst-code/brails.processors.occupancy_classifier.occupancy_classifier", "rst-code/brails.processors.other_idea", "rst-code/brails.processors.other_idea.arial_processing", "rst-code/brails.processors.other_idea.street_processor", "rst-code/brails.processors.roof_shape_classifier", "rst-code/brails.processors.roof_shape_classifier.roof_shape_classifier", "rst-code/brails.processors.roof_shape_gpt", "rst-code/brails.processors.roof_shape_gpt.roof_shape_gpt", "rst-code/brails.processors.roof_shape_vlm", "rst-code/brails.processors.roof_shape_vlm.roof_shape_vlm", "rst-code/brails.processors.street_level_damage_detection", "rst-code/brails.processors.street_level_damage_detection.street_level_damage_detection", "rst-code/brails.processors.vlm_image_classifier", "rst-code/brails.processors.vlm_image_classifier.CLIPClassifier", "rst-code/brails.processors.vlm_image_classifier.clip", "rst-code/brails.processors.vlm_image_classifier.clip.clip", "rst-code/brails.processors.vlm_image_classifier.clip.model", "rst-code/brails.processors.vlm_image_classifier.clip.simple_tokenizer", "rst-code/brails.processors.vlm_image_classifier.clip.utils", "rst-code/brails.processors.vlm_segmenter", "rst-code/brails.processors.vlm_segmenter.grounded_sam_utils", "rst-code/brails.processors.vlm_segmenter.segment_anything", "rst-code/brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator", "rst-code/brails.processors.vlm_segmenter.segment_anything.build_sam", "rst-code/brails.processors.vlm_segmenter.segment_anything.build_sam_hq", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.common", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.sam", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.transformer", "rst-code/brails.processors.vlm_segmenter.segment_anything.predictor", "rst-code/brails.processors.vlm_segmenter.segment_anything.utils", "rst-code/brails.processors.vlm_segmenter.segment_anything.utils.amg", "rst-code/brails.processors.vlm_segmenter.segment_anything.utils.onnx", "rst-code/brails.processors.vlm_segmenter.segment_anything.utils.transforms", "rst-code/brails.processors.vlm_segmenter.vlm_segmenter", "rst-code/brails.processors.year_built_classifier", "rst-code/brails.processors.year_built_classifier.Resnet", "rst-code/brails.processors.year_built_classifier.detect", "rst-code/brails.processors.year_built_classifier.lib", "rst-code/brails.processors.year_built_classifier.lib.datasets", "rst-code/brails.processors.year_built_classifier.lib.utils", "rst-code/brails.processors.year_built_classifier.model", "rst-code/brails.processors.year_built_classifier.train", "rst-code/brails.processors.year_built_classifier.weights", "rst-code/brails.processors.year_built_classifier.year_built_classifier", "rst-code/brails.scrapers", "rst-code/brails.scrapers.asce_hazard_data_scraper", "rst-code/brails.scrapers.asce_hazard_data_scraper.asce_hazard_data_scraper", "rst-code/brails.scrapers.asset_data_augmenter", "rst-code/brails.scrapers.fema_firm_scraper", "rst-code/brails.scrapers.fema_firm_scraper.fema_firm_scraper", "rst-code/brails.scrapers.footprint_scraper", "rst-code/brails.scrapers.google_satellite", "rst-code/brails.scrapers.google_satellite.google_satellite", "rst-code/brails.scrapers.google_streetview", "rst-code/brails.scrapers.google_streetview.google_streetview", "rst-code/brails.scrapers.image_scraper", "rst-code/brails.scrapers.ms_footprint_scraper", "rst-code/brails.scrapers.ms_footprint_scraper.ms_footprint_handler", "rst-code/brails.scrapers.nbi_scraper", "rst-code/brails.scrapers.nbi_scraper.nbi_scraper", "rst-code/brails.scrapers.nsi_parser", "rst-code/brails.scrapers.nsi_parser.nsi_parser", "rst-code/brails.scrapers.nti_scraper", "rst-code/brails.scrapers.nti_scraper.nti_scraper", "rst-code/brails.scrapers.osm_footprint_scraper", "rst-code/brails.scrapers.osm_footprint_scraper.osm_footprint_scraper", "rst-code/brails.scrapers.osm_power_network_scraper", "rst-code/brails.scrapers.osm_power_network_scraper.osm_power_network_scraper", "rst-code/brails.scrapers.overture_maps_scraper", "rst-code/brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper", "rst-code/brails.scrapers.overture_maps_scraper.overture_maps_scraper", "rst-code/brails.scrapers.usa_footprint_scraper", "rst-code/brails.scrapers.usa_footprint_scraper.usa_footprint_scraper", "rst-code/brails.scrapers.user_footprints", "rst-code/brails.scrapers.usgs_data_scrapers", "rst-code/brails.scrapers.usgs_data_scrapers.nlcd_scraper", "rst-code/brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper", "rst-code/brails.types", "rst-code/brails.types.asset_inventory", "rst-code/brails.types.image_set", "rst-code/brails.types.region_boundary", "rst-code/brails.utils", "rst-code/brails.utils.arcgisapi_service_helper", "rst-code/brails.utils.geo_tools", "rst-code/brails.utils.importer", "rst-code/brails.utils.input_validator", "rst-code/brails.utils.inventory_validator", "rst-code/brails.utils.model_utils", "rst-code/brails.utils.plot_tools", "rst-code/brails.utils.rapid_utils", "rst-code/brails.utils.segmentation_utils", "rst-code/brails.utils.spatial_join_methods", "rst-code/brails.utils.spatial_join_methods.base", "rst-code/brails.utils.spatial_join_methods.distance_based_point_matcher", "rst-code/brails.utils.spatial_join_methods.get_points_in_polygons", "rst-code/brails.utils.spatial_join_methods.get_points_near_polygons", "rst-code/brails.utils.unit_converter", "rst-code/conf", "rst-code/modules", "rst-code/setup", "rst-doc/about", "rst-doc/acknowledgements", "rst-doc/cite", "rst-doc/install", "rst-doc/license"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["brails/processors/foundation_classifier/README.rst", "brails/processors/year_built_classifier/README.rst", "examples/examples.rst", "examples/footprint/footprint.rst", "examples/image_downloads/image_downloads.rst", "examples/image_filters/image_filters.rst", "examples/importer/importer.rst", "examples/imputation/imputation.rst", "examples/nsi_integration/nsi_integration.rst", "index.rst", "rst-code/brails.rst", "rst-code/brails.constants.rst", "rst-code/brails.exceptions.rst", "rst-code/brails.filters.rst", "rst-code/brails.filters.filter.rst", "rst-code/brails.filters.house_view.rst", "rst-code/brails.filters.house_view.house_view.rst", "rst-code/brails.imputers.rst", "rst-code/brails.imputers.imputation.rst", "rst-code/brails.imputers.knn_imputer.rst", "rst-code/brails.imputers.knn_imputer.knn_imputer.rst", "rst-code/brails.inferers.rst", "rst-code/brails.inferers.hazus_inferer.rst", "rst-code/brails.inferers.hazus_inferer.hazus_inferer.rst", "rst-code/brails.inferers.hazus_inferer.hazus_rulesets.rst", "rst-code/brails.inferers.hazus_inferer_earthquake.rst", "rst-code/brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.rst", "rst-code/brails.inferers.hazus_inferer_flood.rst", "rst-code/brails.inferers.hazus_inferer_flood.hazus_inferer_flood.rst", "rst-code/brails.inferers.hazus_inferer_wind.rst", "rst-code/brails.inferers.hazus_inferer_wind.BuildingClassRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindCECBRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindCERBRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindEFRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindMECBRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindMERBRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindMHRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindMLRIRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindMLRMRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindMMUHRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindMSFRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindMetaVarRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindSECBRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindSERBRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindSPMBRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindWMUHRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.WindWSFRulesets.rst", "rst-code/brails.inferers.hazus_inferer_wind.auto_HU_NJ.rst", "rst-code/brails.inferers.hazus_inferer_wind.hazus_inferer_wind.rst", "rst-code/brails.inferers.inference_engine.rst", "rst-code/brails.inferers.nlcd_inferer.rst", "rst-code/brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover.rst", "rst-code/brails.inferers.simcenter_inferer.rst", "rst-code/brails.inferers.simcenter_inferer.simCenter_inferer.rst", "rst-code/brails.inferers.user_inferer.rst", "rst-code/brails.inferers.user_inferer.content_value_inferer.rst", "rst-code/brails.inferers.user_inferer.floor_area_inferer.rst", "rst-code/brails.inferers.user_inferer.user_inferer.rst", "rst-code/brails.processors.rst", "rst-code/brails.processors.building_material_llm.rst", "rst-code/brails.processors.building_material_llm.building_material_llm.rst", "rst-code/brails.processors.chimney_detector.rst", "rst-code/brails.processors.chimney_detector.chimney_detector.rst", "rst-code/brails.processors.chimney_detector.lib.rst", "rst-code/brails.processors.chimney_detector.lib.backbone.rst", "rst-code/brails.processors.chimney_detector.lib.efficientdet.rst", "rst-code/brails.processors.chimney_detector.lib.efficientdet.coco.rst", "rst-code/brails.processors.chimney_detector.lib.efficientdet.config.rst", "rst-code/brails.processors.chimney_detector.lib.efficientdet.dataset.rst", "rst-code/brails.processors.chimney_detector.lib.efficientdet.loss.rst", "rst-code/brails.processors.chimney_detector.lib.efficientdet.model.rst", "rst-code/brails.processors.chimney_detector.lib.efficientdet.utils.rst", "rst-code/brails.processors.chimney_detector.lib.efficientnet.rst", "rst-code/brails.processors.chimney_detector.lib.efficientnet.model.rst", "rst-code/brails.processors.chimney_detector.lib.efficientnet.utils.rst", "rst-code/brails.processors.chimney_detector.lib.efficientnet.utils_extra.rst", "rst-code/brails.processors.chimney_detector.lib.infer_detector.rst", "rst-code/brails.processors.chimney_detector.lib.train_detector.rst", "rst-code/brails.processors.chimney_detector.lib.utils.rst", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.rst", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm.rst", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.rst", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.rst", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.rst", "rst-code/brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest.rst", "rst-code/brails.processors.chimney_detector.lib.utils.utils.rst", "rst-code/brails.processors.cons_type_classifier.rst", "rst-code/brails.processors.cons_type_classifier.ConstructionTypeClassifier.rst", "rst-code/brails.processors.facade_parser.rst", "rst-code/brails.processors.facade_parser.facade_parser.rst", "rst-code/brails.processors.ffh_predictor_klepac.rst", "rst-code/brails.processors.ffh_predictor_klepac.ffh_predictor_klepac.rst", "rst-code/brails.processors.foundation_classifier.rst", "rst-code/brails.processors.foundation_classifier.attention_utils.rst", "rst-code/brails.processors.foundation_classifier.attention_utils.radam.rst", "rst-code/brails.processors.foundation_classifier.attention_utils.utils.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval_multipro.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataloader.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.distributed.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.test.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.train.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.rst", "rst-code/brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.rst", "rst-code/brails.processors.foundation_classifier.detect.rst", "rst-code/brails.processors.foundation_classifier.foundation_classifier.rst", "rst-code/brails.processors.foundation_classifier.lib.rst", "rst-code/brails.processors.foundation_classifier.lib.LinearAverage.rst", "rst-code/brails.processors.foundation_classifier.lib.NCEAverage.rst", "rst-code/brails.processors.foundation_classifier.lib.NCECriterion.rst", "rst-code/brails.processors.foundation_classifier.lib.alias_multinomial.rst", "rst-code/brails.processors.foundation_classifier.lib.custom_transforms.rst", "rst-code/brails.processors.foundation_classifier.lib.normalize.rst", "rst-code/brails.processors.foundation_classifier.lib.utils.rst", "rst-code/brails.processors.foundation_classifier.models.rst", "rst-code/brails.processors.foundation_classifier.models.attention_module.rst", "rst-code/brails.processors.foundation_classifier.models.basic_layer.rst", "rst-code/brails.processors.foundation_classifier.models.residual_attention_network.rst", "rst-code/brails.processors.foundation_classifier.models.resnet_applied.rst", "rst-code/brails.processors.foundation_classifier.models.sknet.rst", "rst-code/brails.processors.foundation_classifier.npid.rst", "rst-code/brails.processors.foundation_classifier.npid.MDistance.rst", "rst-code/brails.processors.foundation_classifier.npid.cifar.rst", "rst-code/brails.processors.foundation_classifier.npid.main.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_datasets.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_datasets.cifar.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_datasets.folder.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_datasets.mnist.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.NCECriterion.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.normalize.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_lib.utils.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_models.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_models.resnet.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_models.resnet_cifar.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_toolbox.rst", "rst-code/brails.processors.foundation_classifier.npid.npid_toolbox.calculate_all_distances.rst", "rst-code/brails.processors.foundation_classifier.npid.test.rst", "rst-code/brails.processors.foundation_classifier.save_masked_images.rst", "rst-code/brails.processors.foundation_classifier.train.rst", "rst-code/brails.processors.foundation_classifier.utils.rst", "rst-code/brails.processors.foundation_classifier.utils.Datasets.rst", "rst-code/brails.processors.foundation_classifier.utils.generate_csv.rst", "rst-code/brails.processors.garage_detector.rst", "rst-code/brails.processors.garage_detector.garage_detector.rst", "rst-code/brails.processors.garage_detector.lib.rst", "rst-code/brails.processors.garage_detector.lib.backbone.rst", "rst-code/brails.processors.garage_detector.lib.efficientdet.rst", "rst-code/brails.processors.garage_detector.lib.efficientdet.coco.rst", "rst-code/brails.processors.garage_detector.lib.efficientdet.config.rst", "rst-code/brails.processors.garage_detector.lib.efficientdet.dataset.rst", "rst-code/brails.processors.garage_detector.lib.efficientdet.loss.rst", "rst-code/brails.processors.garage_detector.lib.efficientdet.model.rst", "rst-code/brails.processors.garage_detector.lib.efficientdet.utils.rst", "rst-code/brails.processors.garage_detector.lib.efficientnet.rst", "rst-code/brails.processors.garage_detector.lib.efficientnet.model.rst", "rst-code/brails.processors.garage_detector.lib.efficientnet.utils.rst", "rst-code/brails.processors.garage_detector.lib.efficientnet.utils_extra.rst", "rst-code/brails.processors.garage_detector.lib.infer_detector.rst", "rst-code/brails.processors.garage_detector.lib.train_detector.rst", "rst-code/brails.processors.garage_detector.lib.utils.rst", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.rst", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm.rst", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.rst", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.rst", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.rst", "rst-code/brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest.rst", "rst-code/brails.processors.garage_detector.lib.utils.utils.rst", "rst-code/brails.processors.gpt_base_model.rst", "rst-code/brails.processors.gpt_base_model.GPT.rst", "rst-code/brails.processors.gpt_base_model.utils.rst", "rst-code/brails.processors.image_classifier.rst", "rst-code/brails.processors.image_classifier.image_classifier.rst", "rst-code/brails.processors.image_processor.rst", "rst-code/brails.processors.image_segmenter.rst", "rst-code/brails.processors.image_segmenter.image_segmenter.rst", "rst-code/brails.processors.nFloor_gpt.rst", "rst-code/brails.processors.nFloor_gpt.nFloor_gpt.rst", "rst-code/brails.processors.nFloor_vlm.rst", "rst-code/brails.processors.nFloor_vlm.nFloor_vlm.rst", "rst-code/brails.processors.nfloors_detector.rst", "rst-code/brails.processors.nfloors_detector.lib.rst", "rst-code/brails.processors.nfloors_detector.lib.backbone.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.coco.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.config.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.dataset.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.loss.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.model.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientdet.utils.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientnet.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientnet.model.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientnet.utils.rst", "rst-code/brails.processors.nfloors_detector.lib.efficientnet.utils_extra.rst", "rst-code/brails.processors.nfloors_detector.lib.infer_detector.rst", "rst-code/brails.processors.nfloors_detector.lib.train_detector.rst", "rst-code/brails.processors.nfloors_detector.lib.utils.rst", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.rst", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm.rst", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.rst", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.rst", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.rst", "rst-code/brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest.rst", "rst-code/brails.processors.nfloors_detector.lib.utils.utils.rst", "rst-code/brails.processors.nfloors_detector.nfloor_detector.rst", "rst-code/brails.processors.occupancy_classifier.rst", "rst-code/brails.processors.occupancy_classifier.occupancy_classifier.rst", "rst-code/brails.processors.other_idea.rst", "rst-code/brails.processors.other_idea.arial_processing.rst", "rst-code/brails.processors.other_idea.street_processor.rst", "rst-code/brails.processors.roof_shape_classifier.rst", "rst-code/brails.processors.roof_shape_classifier.roof_shape_classifier.rst", "rst-code/brails.processors.roof_shape_gpt.rst", "rst-code/brails.processors.roof_shape_gpt.roof_shape_gpt.rst", "rst-code/brails.processors.roof_shape_vlm.rst", "rst-code/brails.processors.roof_shape_vlm.roof_shape_vlm.rst", "rst-code/brails.processors.street_level_damage_detection.rst", "rst-code/brails.processors.street_level_damage_detection.street_level_damage_detection.rst", "rst-code/brails.processors.vlm_image_classifier.rst", "rst-code/brails.processors.vlm_image_classifier.CLIPClassifier.rst", "rst-code/brails.processors.vlm_image_classifier.clip.rst", "rst-code/brails.processors.vlm_image_classifier.clip.clip.rst", "rst-code/brails.processors.vlm_image_classifier.clip.model.rst", "rst-code/brails.processors.vlm_image_classifier.clip.simple_tokenizer.rst", "rst-code/brails.processors.vlm_image_classifier.clip.utils.rst", "rst-code/brails.processors.vlm_segmenter.rst", "rst-code/brails.processors.vlm_segmenter.grounded_sam_utils.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.build_sam.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.build_sam_hq.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.common.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.sam.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.modeling.transformer.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.predictor.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.utils.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.utils.amg.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.utils.onnx.rst", "rst-code/brails.processors.vlm_segmenter.segment_anything.utils.transforms.rst", "rst-code/brails.processors.vlm_segmenter.vlm_segmenter.rst", "rst-code/brails.processors.year_built_classifier.rst", "rst-code/brails.processors.year_built_classifier.Resnet.rst", "rst-code/brails.processors.year_built_classifier.detect.rst", "rst-code/brails.processors.year_built_classifier.lib.rst", "rst-code/brails.processors.year_built_classifier.lib.datasets.rst", "rst-code/brails.processors.year_built_classifier.lib.utils.rst", "rst-code/brails.processors.year_built_classifier.model.rst", "rst-code/brails.processors.year_built_classifier.train.rst", "rst-code/brails.processors.year_built_classifier.weights.rst", "rst-code/brails.processors.year_built_classifier.year_built_classifier.rst", "rst-code/brails.scrapers.rst", "rst-code/brails.scrapers.asce_hazard_data_scraper.rst", "rst-code/brails.scrapers.asce_hazard_data_scraper.asce_hazard_data_scraper.rst", "rst-code/brails.scrapers.asset_data_augmenter.rst", "rst-code/brails.scrapers.fema_firm_scraper.rst", "rst-code/brails.scrapers.fema_firm_scraper.fema_firm_scraper.rst", "rst-code/brails.scrapers.footprint_scraper.rst", "rst-code/brails.scrapers.google_satellite.rst", "rst-code/brails.scrapers.google_satellite.google_satellite.rst", "rst-code/brails.scrapers.google_streetview.rst", "rst-code/brails.scrapers.google_streetview.google_streetview.rst", "rst-code/brails.scrapers.image_scraper.rst", "rst-code/brails.scrapers.ms_footprint_scraper.rst", "rst-code/brails.scrapers.ms_footprint_scraper.ms_footprint_handler.rst", "rst-code/brails.scrapers.nbi_scraper.rst", "rst-code/brails.scrapers.nbi_scraper.nbi_scraper.rst", "rst-code/brails.scrapers.nsi_parser.rst", "rst-code/brails.scrapers.nsi_parser.nsi_parser.rst", "rst-code/brails.scrapers.nti_scraper.rst", "rst-code/brails.scrapers.nti_scraper.nti_scraper.rst", "rst-code/brails.scrapers.osm_footprint_scraper.rst", "rst-code/brails.scrapers.osm_footprint_scraper.osm_footprint_scraper.rst", "rst-code/brails.scrapers.osm_power_network_scraper.rst", "rst-code/brails.scrapers.osm_power_network_scraper.osm_power_network_scraper.rst", "rst-code/brails.scrapers.overture_maps_scraper.rst", "rst-code/brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper.rst", "rst-code/brails.scrapers.overture_maps_scraper.overture_maps_scraper.rst", "rst-code/brails.scrapers.usa_footprint_scraper.rst", "rst-code/brails.scrapers.usa_footprint_scraper.usa_footprint_scraper.rst", "rst-code/brails.scrapers.user_footprints.rst", "rst-code/brails.scrapers.usgs_data_scrapers.rst", "rst-code/brails.scrapers.usgs_data_scrapers.nlcd_scraper.rst", "rst-code/brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.rst", "rst-code/brails.types.rst", "rst-code/brails.types.asset_inventory.rst", "rst-code/brails.types.image_set.rst", "rst-code/brails.types.region_boundary.rst", "rst-code/brails.utils.rst", "rst-code/brails.utils.arcgisapi_service_helper.rst", "rst-code/brails.utils.geo_tools.rst", "rst-code/brails.utils.importer.rst", "rst-code/brails.utils.input_validator.rst", "rst-code/brails.utils.inventory_validator.rst", "rst-code/brails.utils.model_utils.rst", "rst-code/brails.utils.plot_tools.rst", "rst-code/brails.utils.rapid_utils.rst", "rst-code/brails.utils.segmentation_utils.rst", "rst-code/brails.utils.spatial_join_methods.rst", "rst-code/brails.utils.spatial_join_methods.base.rst", "rst-code/brails.utils.spatial_join_methods.distance_based_point_matcher.rst", "rst-code/brails.utils.spatial_join_methods.get_points_in_polygons.rst", "rst-code/brails.utils.spatial_join_methods.get_points_near_polygons.rst", "rst-code/brails.utils.unit_converter.rst", "rst-code/conf.rst", "rst-code/modules.rst", "rst-code/setup.rst", "rst-doc/about.rst", "rst-doc/acknowledgements.rst", "rst-doc/cite.rst", "rst-doc/install.rst", "rst-doc/license.rst"], "indexentries": {"__len__() (brails.processors.image_segmenter.image_segmenter.datasetbinary method)": [[206, "brails.processors.image_segmenter.image_segmenter.DatasetBinary.__len__", false]], "__len__() (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder method)": [[280, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.__len__", false]], "_join_implementation() (brails.utils.spatial_join_methods.get_points_in_polygons.getpointsinpolygons method)": [[336, "brails.utils.spatial_join_methods.get_points_in_polygons.GetPointsInPolygons._join_implementation", false]], "_join_implementation() (brails.utils.spatial_join_methods.get_points_near_polygons.getpointsnearpolygons method)": [[337, "brails.utils.spatial_join_methods.get_points_near_polygons.GetPointsNearPolygons._join_implementation", false]], "accuracy() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.accuracy", false]], "adamw (class in brails.processors.foundation_classifier.attention_utils.radam)": [[94, "brails.processors.foundation_classifier.attention_utils.radam.AdamW", false]], "add() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.averagemeter method)": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.AverageMeter.add", false]], "add_asset() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.add_asset", false]], "add_asset_coordinates() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.add_asset_coordinates", false]], "add_asset_features() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.add_asset_features", false]], "add_asset_features_from_csv() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.add_asset_features_from_csv", false]], "add_decomposed_rel_pos() (in module brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[264, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.add_decomposed_rel_pos", false]], "add_default() (in module brails.inferers.hazus_inferer_wind.windmetavarrulesets)": [[41, "brails.inferers.hazus_inferer_wind.WindMetaVarRulesets.add_default", false]], "add_features() (brails.types.asset_inventory.asset method)": [[320, "brails.types.asset_inventory.Asset.add_features", false]], "add_features_to_asset() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[23, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.add_features_to_asset", false]], "add_image() (brails.types.image_set.imageset method)": [[321, "brails.types.image_set.ImageSet.add_image", false]], "add_model_predictions() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.add_model_predictions", false]], "addgaussiannoise (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.AddGaussianNoise", false]], "addgaussiannoise (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.AddGaussianNoise", false]], "addgaussianpoissonnoise (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.AddGaussianPoissonNoise", false]], "addgaussianpoissonnoise (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.AddGaussianPoissonNoise", false]], "addspecklenoise (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.AddSpeckleNoise", false]], "addspecklenoise (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.AddSpeckleNoise", false]], "aggregate_predictions() (in module brails.processors.vlm_image_classifier.clip.utils)": [[255, "brails.processors.vlm_image_classifier.clip.utils.aggregate_predictions", false]], "aliasmethod (class in brails.processors.foundation_classifier.lib.alias_multinomial)": [[137, "brails.processors.foundation_classifier.lib.alias_multinomial.AliasMethod", false]], "aliasmethod (class in brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial.AliasMethod", false]], "anchors (class in brails.processors.chimney_detector.lib.efficientdet.utils)": [[71, "brails.processors.chimney_detector.lib.efficientdet.utils.Anchors", false]], "anchors (class in brails.processors.garage_detector.lib.efficientdet.utils)": [[184, "brails.processors.garage_detector.lib.efficientdet.utils.Anchors", false]], "anchors (class in brails.processors.nfloors_detector.lib.efficientdet.utils)": [[220, "brails.processors.nfloors_detector.lib.efficientdet.utils.Anchors", false]], "api_key (brails.scrapers.google_streetview.google_streetview.googlestreetview attribute)": [[296, "brails.scrapers.google_streetview.google_streetview.GoogleStreetview.api_key", false]], "apply_boxes() (brails.processors.vlm_segmenter.segment_anything.utils.transforms.resizelongestside method)": [[274, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide.apply_boxes", false]], "apply_boxes_torch() (brails.processors.vlm_segmenter.segment_anything.utils.transforms.resizelongestside method)": [[274, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide.apply_boxes_torch", false]], "apply_coords() (brails.processors.vlm_segmenter.segment_anything.utils.transforms.resizelongestside method)": [[274, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide.apply_coords", false]], "apply_coords_torch() (brails.processors.vlm_segmenter.segment_anything.utils.transforms.resizelongestside method)": [[274, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide.apply_coords_torch", false]], "apply_image() (brails.processors.vlm_segmenter.segment_anything.utils.transforms.resizelongestside method)": [[274, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide.apply_image", false]], "apply_image_torch() (brails.processors.vlm_segmenter.segment_anything.utils.transforms.resizelongestside method)": [[274, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide.apply_image_torch", false]], "arcgisapiservicehelper (class in brails.utils.arcgisapi_service_helper)": [[324, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper", false]], "area_from_rle() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.amg.area_from_rle", false]], "arialprocessing (class in brails.processors.other_idea.arial_processing)": [[239, "brails.processors.other_idea.arial_processing.ArialProcessing", false]], "as_numpy() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest)": [[110, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest.as_numpy", false]], "as_numpy() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th)": [[119, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th.as_numpy", false]], "as_variable() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th)": [[119, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th.as_variable", false]], "asserttensorclose() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest.torchtestcase method)": [[84, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase.assertTensorClose", false]], "asserttensorclose() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest.torchtestcase method)": [[110, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest.TorchTestCase.assertTensorClose", false]], "asserttensorclose() (brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest.torchtestcase method)": [[197, "brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase.assertTensorClose", false]], "asserttensorclose() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest.torchtestcase method)": [[233, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase.assertTensorClose", false]], "asset (class in brails.types.asset_inventory)": [[320, "brails.types.asset_inventory.Asset", false]], "assetdataaugmenter (class in brails.scrapers.asset_data_augmenter)": [[289, "brails.scrapers.asset_data_augmenter.AssetDataAugmenter", false]], "assetinventory (class in brails.types.asset_inventory)": [[320, "brails.types.asset_inventory.AssetInventory", false]], "async_copy_to() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel.async_copy_to", false]], "attention (class in brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[264, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.Attention", false]], "attention (class in brails.processors.vlm_segmenter.segment_anything.modeling.transformer)": [[269, "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.Attention", false]], "attention() (brails.processors.vlm_image_classifier.clip.model.residualattentionblock method)": [[253, "brails.processors.vlm_image_classifier.clip.model.ResidualAttentionBlock.attention", false]], "attentionmodule_pre (class in brails.processors.foundation_classifier.models.attention_module)": [[142, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_pre", false]], "attentionmodule_stage0 (class in brails.processors.foundation_classifier.models.attention_module)": [[142, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage0", false]], "attentionmodule_stage1 (class in brails.processors.foundation_classifier.models.attention_module)": [[142, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage1", false]], "attentionmodule_stage1_cifar (class in brails.processors.foundation_classifier.models.attention_module)": [[142, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage1_cifar", false]], "attentionmodule_stage2 (class in brails.processors.foundation_classifier.models.attention_module)": [[142, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage2", false]], "attentionmodule_stage2_cifar (class in brails.processors.foundation_classifier.models.attention_module)": [[142, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage2_cifar", false]], "attentionmodule_stage3 (class in brails.processors.foundation_classifier.models.attention_module)": [[142, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage3", false]], "attentionmodule_stage3_cifar (class in brails.processors.foundation_classifier.models.attention_module)": [[142, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage3_cifar", false]], "attentionpool2d (class in brails.processors.vlm_image_classifier.clip.model)": [[253, "brails.processors.vlm_image_classifier.clip.model.AttentionPool2d", false]], "attributes (brails.scrapers.nsi_parser.nsi_parser.nsi_parser attribute)": [[303, "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser.attributes", false]], "auto_populate() (brails.inferers.hazus_inferer_flood.hazus_inferer_flood.hazusinfererflood method)": [[28, "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood.auto_populate", false]], "auto_populate() (in module brails.inferers.hazus_inferer_wind.auto_hu_nj)": [[47, "brails.inferers.hazus_inferer_wind.auto_HU_NJ.auto_populate", false]], "available_models() (in module brails.processors.vlm_image_classifier.clip.clip)": [[252, "brails.processors.vlm_image_classifier.clip.clip.available_models", false]], "average() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.averagemeter method)": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.AverageMeter.average", false]], "averagemeter (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.AverageMeter", false]], "averagemeter (class in brails.processors.foundation_classifier.lib.utils)": [[140, "brails.processors.foundation_classifier.lib.utils.AverageMeter", false]], "averagemeter (class in brails.processors.foundation_classifier.npid.npid_lib.utils)": [[162, "brails.processors.foundation_classifier.npid.npid_lib.utils.AverageMeter", false]], "backward() (brails.processors.chimney_detector.lib.efficientnet.utils.swishimplementation static method)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.SwishImplementation.backward", false]], "backward() (brails.processors.foundation_classifier.lib.linearaverage.linearaverageop static method)": [[134, "brails.processors.foundation_classifier.lib.LinearAverage.LinearAverageOp.backward", false]], "backward() (brails.processors.foundation_classifier.lib.nceaverage.ncefunction static method)": [[135, "brails.processors.foundation_classifier.lib.NCEAverage.NCEFunction.backward", false]], "backward() (brails.processors.foundation_classifier.npid.npid_lib.linearaverage.linearaverageop static method)": [[156, "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.LinearAverageOp.backward", false]], "backward() (brails.processors.foundation_classifier.npid.npid_lib.nceaverage.ncefunction static method)": [[157, "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.NCEFunction.backward", false]], "backward() (brails.processors.garage_detector.lib.efficientnet.utils.swishimplementation static method)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.SwishImplementation.backward", false]], "backward() (brails.processors.nfloors_detector.lib.efficientnet.utils.swishimplementation static method)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.SwishImplementation.backward", false]], "base_folder (brails.processors.foundation_classifier.npid.npid_datasets.cifar.cifar100instance attribute)": [[152, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance.base_folder", false]], "base_folder (brails.processors.foundation_classifier.npid.npid_datasets.cifar100instance attribute)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance.base_folder", false]], "basedataset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset)": [[101, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.BaseDataset", false]], "basic_clean() (in module brails.processors.vlm_image_classifier.clip.simple_tokenizer)": [[254, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.basic_clean", false]], "basicconv (class in brails.processors.year_built_classifier.model)": [[282, "brails.processors.year_built_classifier.model.BasicConv", false]], "batch_iterator() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.amg.batch_iterator", false]], "batch_norm_epsilon (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.batch_norm_epsilon", false]], "batch_norm_epsilon (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.batch_norm_epsilon", false]], "batch_norm_epsilon (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.batch_norm_epsilon", false]], "batch_norm_momentum (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.batch_norm_momentum", false]], "batch_norm_momentum (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.batch_norm_momentum", false]], "batch_norm_momentum (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.batch_norm_momentum", false]], "batch_size (brails.processors.image_segmenter.image_segmenter.imagesegmenter attribute)": [[206, "brails.processors.image_segmenter.image_segmenter.ImageSegmenter.batch_size", false]], "batch_size (brails.processors.vlm_image_classifier.clipclassifier.clipclassifier attribute)": [[250, "brails.processors.vlm_image_classifier.CLIPClassifier.CLIPClassifier.batch_size", false]], "batched_mask_to_box() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.amg.batched_mask_to_box", false]], "batchnorm2dreimpl (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl)": [[81, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl", false]], "batchnorm2dreimpl (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl)": [[194, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl", false]], "batchnorm2dreimpl (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl)": [[230, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl", false]], "batchsampler (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler.BatchSampler", false]], "bbox2poly() (brails.utils.geo_tools.geotools static method)": [[325, "brails.utils.geo_tools.GeoTools.bbox2poly", false]], "bboxtransform (class in brails.processors.chimney_detector.lib.efficientdet.utils)": [[71, "brails.processors.chimney_detector.lib.efficientdet.utils.BBoxTransform", false]], "bboxtransform (class in brails.processors.garage_detector.lib.efficientdet.utils)": [[184, "brails.processors.garage_detector.lib.efficientdet.utils.BBoxTransform", false]], "bboxtransform (class in brails.processors.nfloors_detector.lib.efficientdet.utils)": [[220, "brails.processors.nfloors_detector.lib.efficientdet.utils.BBoxTransform", false]], "bilinearresize (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.BilinearResize", false]], "bilinearresize (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.BilinearResize", false]], "block (class in brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[264, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.Block", false]], "blockargs (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs", false]], "blockargs (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs", false]], "blockargs (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs", false]], "blockdecoder (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockDecoder", false]], "blockdecoder (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.BlockDecoder", false]], "blockdecoder (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockDecoder", false]], "bottleneck (class in brails.processors.vlm_image_classifier.clip.model)": [[253, "brails.processors.vlm_image_classifier.clip.model.Bottleneck", false]], "boundingbox (class in brails.processors.vlm_segmenter.grounded_sam_utils)": [[257, "brails.processors.vlm_segmenter.grounded_sam_utils.BoundingBox", false]], "box (brails.filters.house_view.house_view.filterdetectionresult attribute)": [[16, "brails.filters.house_view.house_view.FilterDetectionResult.box", false]], "box (brails.processors.vlm_segmenter.grounded_sam_utils.detectionresult attribute)": [[257, "brails.processors.vlm_segmenter.grounded_sam_utils.DetectionResult.box", false]], "box_xyxy_to_xywh() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.amg.box_xyxy_to_xywh", false]], "bpe() (brails.processors.vlm_image_classifier.clip.simple_tokenizer.simpletokenizer method)": [[254, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.SimpleTokenizer.bpe", false]], "brails": [[10, "module-brails", false]], "brails.constants": [[11, "module-brails.constants", false]], "brails.exceptions": [[12, "module-brails.exceptions", false]], "brails.filters": [[13, "module-brails.filters", false]], "brails.filters.filter": [[14, "module-brails.filters.filter", false]], "brails.filters.house_view": [[15, "module-brails.filters.house_view", false]], "brails.filters.house_view.house_view": [[16, "module-brails.filters.house_view.house_view", false]], "brails.imputers": [[17, "module-brails.imputers", false]], "brails.imputers.imputation": [[18, "module-brails.imputers.imputation", false]], "brails.imputers.knn_imputer": [[19, "module-brails.imputers.knn_imputer", false]], "brails.imputers.knn_imputer.knn_imputer": [[20, "module-brails.imputers.knn_imputer.knn_imputer", false]], "brails.inferers": [[21, "module-brails.inferers", false]], "brails.inferers.hazus_inferer": [[22, "module-brails.inferers.hazus_inferer", false]], "brails.inferers.hazus_inferer.hazus_inferer": [[23, "module-brails.inferers.hazus_inferer.hazus_inferer", false]], "brails.inferers.hazus_inferer.hazus_rulesets": [[24, "module-brails.inferers.hazus_inferer.hazus_rulesets", false]], "brails.inferers.hazus_inferer_earthquake": [[25, "module-brails.inferers.hazus_inferer_earthquake", false]], "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake": [[26, "module-brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake", false]], "brails.inferers.hazus_inferer_flood": [[27, "module-brails.inferers.hazus_inferer_flood", false]], "brails.inferers.hazus_inferer_flood.hazus_inferer_flood": [[28, "module-brails.inferers.hazus_inferer_flood.hazus_inferer_flood", false]], "brails.inferers.hazus_inferer_wind": [[29, "module-brails.inferers.hazus_inferer_wind", false]], "brails.inferers.hazus_inferer_wind.auto_hu_nj": [[47, "module-brails.inferers.hazus_inferer_wind.auto_HU_NJ", false]], "brails.inferers.hazus_inferer_wind.buildingclassrulesets": [[30, "module-brails.inferers.hazus_inferer_wind.BuildingClassRulesets", false]], "brails.inferers.hazus_inferer_wind.hazus_inferer_wind": [[48, "module-brails.inferers.hazus_inferer_wind.hazus_inferer_wind", false]], "brails.inferers.hazus_inferer_wind.windcecbrulesets": [[31, "module-brails.inferers.hazus_inferer_wind.WindCECBRulesets", false]], "brails.inferers.hazus_inferer_wind.windcerbrulesets": [[32, "module-brails.inferers.hazus_inferer_wind.WindCERBRulesets", false]], "brails.inferers.hazus_inferer_wind.windefrulesets": [[33, "module-brails.inferers.hazus_inferer_wind.WindEFRulesets", false]], "brails.inferers.hazus_inferer_wind.windmecbrulesets": [[34, "module-brails.inferers.hazus_inferer_wind.WindMECBRulesets", false]], "brails.inferers.hazus_inferer_wind.windmerbrulesets": [[35, "module-brails.inferers.hazus_inferer_wind.WindMERBRulesets", false]], "brails.inferers.hazus_inferer_wind.windmetavarrulesets": [[41, "module-brails.inferers.hazus_inferer_wind.WindMetaVarRulesets", false]], "brails.inferers.hazus_inferer_wind.windmhrulesets": [[36, "module-brails.inferers.hazus_inferer_wind.WindMHRulesets", false]], "brails.inferers.hazus_inferer_wind.windmlrirulesets": [[37, "module-brails.inferers.hazus_inferer_wind.WindMLRIRulesets", false]], "brails.inferers.hazus_inferer_wind.windmlrmrulesets": [[38, "module-brails.inferers.hazus_inferer_wind.WindMLRMRulesets", false]], "brails.inferers.hazus_inferer_wind.windmmuhrulesets": [[39, "module-brails.inferers.hazus_inferer_wind.WindMMUHRulesets", false]], "brails.inferers.hazus_inferer_wind.windmsfrulesets": [[40, "module-brails.inferers.hazus_inferer_wind.WindMSFRulesets", false]], "brails.inferers.hazus_inferer_wind.windsecbrulesets": [[42, "module-brails.inferers.hazus_inferer_wind.WindSECBRulesets", false]], "brails.inferers.hazus_inferer_wind.windserbrulesets": [[43, "module-brails.inferers.hazus_inferer_wind.WindSERBRulesets", false]], "brails.inferers.hazus_inferer_wind.windspmbrulesets": [[44, "module-brails.inferers.hazus_inferer_wind.WindSPMBRulesets", false]], "brails.inferers.hazus_inferer_wind.windwmuhrulesets": [[45, "module-brails.inferers.hazus_inferer_wind.WindWMUHRulesets", false]], "brails.inferers.hazus_inferer_wind.windwsfrulesets": [[46, "module-brails.inferers.hazus_inferer_wind.WindWSFRulesets", false]], "brails.inferers.inference_engine": [[49, "module-brails.inferers.inference_engine", false]], "brails.inferers.nlcd_inferer": [[50, "module-brails.inferers.nlcd_inferer", false]], "brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover": [[51, "module-brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover", false]], "brails.inferers.simcenter_inferer": [[52, "module-brails.inferers.simcenter_inferer", false]], "brails.inferers.simcenter_inferer.simcenter_inferer": [[53, "module-brails.inferers.simcenter_inferer.simCenter_inferer", false]], "brails.inferers.user_inferer": [[54, "module-brails.inferers.user_inferer", false]], "brails.inferers.user_inferer.content_value_inferer": [[55, "module-brails.inferers.user_inferer.content_value_inferer", false]], "brails.inferers.user_inferer.floor_area_inferer": [[56, "module-brails.inferers.user_inferer.floor_area_inferer", false]], "brails.inferers.user_inferer.user_inferer": [[57, "module-brails.inferers.user_inferer.user_inferer", false]], "brails.processors": [[58, "module-brails.processors", false]], "brails.processors.building_material_llm": [[59, "module-brails.processors.building_material_llm", false]], "brails.processors.building_material_llm.building_material_llm": [[60, "module-brails.processors.building_material_llm.building_material_llm", false]], "brails.processors.chimney_detector": [[61, "module-brails.processors.chimney_detector", false]], "brails.processors.chimney_detector.lib": [[63, "module-brails.processors.chimney_detector.lib", false]], "brails.processors.chimney_detector.lib.efficientdet": [[65, "module-brails.processors.chimney_detector.lib.efficientdet", false]], "brails.processors.chimney_detector.lib.efficientdet.coco": [[66, "module-brails.processors.chimney_detector.lib.efficientdet.coco", false]], "brails.processors.chimney_detector.lib.efficientdet.config": [[67, "module-brails.processors.chimney_detector.lib.efficientdet.config", false]], "brails.processors.chimney_detector.lib.efficientdet.utils": [[71, "module-brails.processors.chimney_detector.lib.efficientdet.utils", false]], "brails.processors.chimney_detector.lib.efficientnet": [[72, "module-brails.processors.chimney_detector.lib.efficientnet", false]], "brails.processors.chimney_detector.lib.efficientnet.model": [[73, "module-brails.processors.chimney_detector.lib.efficientnet.model", false]], "brails.processors.chimney_detector.lib.efficientnet.utils": [[74, "module-brails.processors.chimney_detector.lib.efficientnet.utils", false]], "brails.processors.chimney_detector.lib.efficientnet.utils_extra": [[75, "module-brails.processors.chimney_detector.lib.efficientnet.utils_extra", false]], "brails.processors.chimney_detector.lib.utils": [[78, "module-brails.processors.chimney_detector.lib.utils", false]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm": [[79, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm", false]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm": [[80, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm", false]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl": [[81, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", false]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm": [[82, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm", false]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate": [[83, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate", false]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest": [[84, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest", false]], "brails.processors.cons_type_classifier": [[86, "module-brails.processors.cons_type_classifier", false]], "brails.processors.cons_type_classifier.constructiontypeclassifier": [[87, "module-brails.processors.cons_type_classifier.ConstructionTypeClassifier", false]], "brails.processors.facade_parser": [[88, "module-brails.processors.facade_parser", false]], "brails.processors.facade_parser.facade_parser": [[89, "module-brails.processors.facade_parser.facade_parser", false]], "brails.processors.ffh_predictor_klepac": [[90, "module-brails.processors.ffh_predictor_klepac", false]], "brails.processors.ffh_predictor_klepac.ffh_predictor_klepac": [[91, "module-brails.processors.ffh_predictor_klepac.ffh_predictor_klepac", false]], "brails.processors.foundation_classifier": [[92, "module-brails.processors.foundation_classifier", false]], "brails.processors.foundation_classifier.attention_utils": [[93, "module-brails.processors.foundation_classifier.attention_utils", false]], "brails.processors.foundation_classifier.attention_utils.radam": [[94, "module-brails.processors.foundation_classifier.attention_utils.radam", false]], "brails.processors.foundation_classifier.attention_utils.utils": [[95, "module-brails.processors.foundation_classifier.attention_utils.utils", false]], "brails.processors.foundation_classifier.csail_segmentation_tool": [[96, "module-brails.processors.foundation_classifier.csail_segmentation_tool", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg": [[97, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config": [[98, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults": [[99, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data": [[100, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset": [[101, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib": [[104, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn": [[105, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules": [[106, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm": [[107, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm": [[108, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate": [[109, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest": [[110, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel": [[111, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel": [[112, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils": [[113, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset": [[116, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler": [[118, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th": [[119, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models": [[120, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet": [[121, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet": [[122, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models": [[123, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet": [[124, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext": [[125, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils": [[126, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils": [[129, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils", false]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation": [[130, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation", false]], "brails.processors.foundation_classifier.foundation_classifier": [[132, "module-brails.processors.foundation_classifier.foundation_classifier", false]], "brails.processors.foundation_classifier.lib": [[133, "module-brails.processors.foundation_classifier.lib", false]], "brails.processors.foundation_classifier.lib.alias_multinomial": [[137, "module-brails.processors.foundation_classifier.lib.alias_multinomial", false]], "brails.processors.foundation_classifier.lib.custom_transforms": [[138, "module-brails.processors.foundation_classifier.lib.custom_transforms", false]], "brails.processors.foundation_classifier.lib.linearaverage": [[134, "module-brails.processors.foundation_classifier.lib.LinearAverage", false]], "brails.processors.foundation_classifier.lib.nceaverage": [[135, "module-brails.processors.foundation_classifier.lib.NCEAverage", false]], "brails.processors.foundation_classifier.lib.ncecriterion": [[136, "module-brails.processors.foundation_classifier.lib.NCECriterion", false]], "brails.processors.foundation_classifier.lib.normalize": [[139, "module-brails.processors.foundation_classifier.lib.normalize", false]], "brails.processors.foundation_classifier.lib.utils": [[140, "module-brails.processors.foundation_classifier.lib.utils", false]], "brails.processors.foundation_classifier.models": [[141, "module-brails.processors.foundation_classifier.models", false]], "brails.processors.foundation_classifier.models.attention_module": [[142, "module-brails.processors.foundation_classifier.models.attention_module", false]], "brails.processors.foundation_classifier.models.basic_layer": [[143, "module-brails.processors.foundation_classifier.models.basic_layer", false]], "brails.processors.foundation_classifier.models.residual_attention_network": [[144, "module-brails.processors.foundation_classifier.models.residual_attention_network", false]], "brails.processors.foundation_classifier.models.resnet_applied": [[145, "module-brails.processors.foundation_classifier.models.resnet_applied", false]], "brails.processors.foundation_classifier.models.sknet": [[146, "module-brails.processors.foundation_classifier.models.sknet", false]], "brails.processors.foundation_classifier.npid": [[147, "module-brails.processors.foundation_classifier.npid", false]], "brails.processors.foundation_classifier.npid.npid_datasets": [[151, "module-brails.processors.foundation_classifier.npid.npid_datasets", false]], "brails.processors.foundation_classifier.npid.npid_datasets.cifar": [[152, "module-brails.processors.foundation_classifier.npid.npid_datasets.cifar", false]], "brails.processors.foundation_classifier.npid.npid_datasets.folder": [[153, "module-brails.processors.foundation_classifier.npid.npid_datasets.folder", false]], "brails.processors.foundation_classifier.npid.npid_datasets.mnist": [[154, "module-brails.processors.foundation_classifier.npid.npid_datasets.mnist", false]], "brails.processors.foundation_classifier.npid.npid_lib": [[155, "module-brails.processors.foundation_classifier.npid.npid_lib", false]], "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial": [[159, "module-brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial", false]], "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms": [[160, "module-brails.processors.foundation_classifier.npid.npid_lib.custom_transforms", false]], "brails.processors.foundation_classifier.npid.npid_lib.linearaverage": [[156, "module-brails.processors.foundation_classifier.npid.npid_lib.LinearAverage", false]], "brails.processors.foundation_classifier.npid.npid_lib.nceaverage": [[157, "module-brails.processors.foundation_classifier.npid.npid_lib.NCEAverage", false]], "brails.processors.foundation_classifier.npid.npid_lib.ncecriterion": [[158, "module-brails.processors.foundation_classifier.npid.npid_lib.NCECriterion", false]], "brails.processors.foundation_classifier.npid.npid_lib.normalize": [[161, "module-brails.processors.foundation_classifier.npid.npid_lib.normalize", false]], "brails.processors.foundation_classifier.npid.npid_lib.utils": [[162, "module-brails.processors.foundation_classifier.npid.npid_lib.utils", false]], "brails.processors.foundation_classifier.npid.npid_toolbox": [[166, "module-brails.processors.foundation_classifier.npid.npid_toolbox", false]], "brails.processors.foundation_classifier.utils": [[171, "module-brails.processors.foundation_classifier.utils", false]], "brails.processors.foundation_classifier.utils.datasets": [[172, "module-brails.processors.foundation_classifier.utils.Datasets", false]], "brails.processors.garage_detector": [[174, "module-brails.processors.garage_detector", false]], "brails.processors.garage_detector.lib": [[176, "module-brails.processors.garage_detector.lib", false]], "brails.processors.garage_detector.lib.efficientdet": [[178, "module-brails.processors.garage_detector.lib.efficientdet", false]], "brails.processors.garage_detector.lib.efficientdet.coco": [[179, "module-brails.processors.garage_detector.lib.efficientdet.coco", false]], "brails.processors.garage_detector.lib.efficientdet.config": [[180, "module-brails.processors.garage_detector.lib.efficientdet.config", false]], "brails.processors.garage_detector.lib.efficientdet.utils": [[184, "module-brails.processors.garage_detector.lib.efficientdet.utils", false]], "brails.processors.garage_detector.lib.efficientnet": [[185, "module-brails.processors.garage_detector.lib.efficientnet", false]], "brails.processors.garage_detector.lib.efficientnet.model": [[186, "module-brails.processors.garage_detector.lib.efficientnet.model", false]], "brails.processors.garage_detector.lib.efficientnet.utils": [[187, "module-brails.processors.garage_detector.lib.efficientnet.utils", false]], "brails.processors.garage_detector.lib.efficientnet.utils_extra": [[188, "module-brails.processors.garage_detector.lib.efficientnet.utils_extra", false]], "brails.processors.garage_detector.lib.utils": [[191, "module-brails.processors.garage_detector.lib.utils", false]], "brails.processors.garage_detector.lib.utils.sync_batchnorm": [[192, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm", false]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm": [[193, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm", false]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl": [[194, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", false]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm": [[195, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.comm", false]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate": [[196, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate", false]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest": [[197, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest", false]], "brails.processors.gpt_base_model": [[199, "module-brails.processors.gpt_base_model", false]], "brails.processors.gpt_base_model.gpt": [[200, "module-brails.processors.gpt_base_model.GPT", false]], "brails.processors.gpt_base_model.utils": [[201, "module-brails.processors.gpt_base_model.utils", false]], "brails.processors.image_classifier": [[202, "module-brails.processors.image_classifier", false]], "brails.processors.image_classifier.image_classifier": [[203, "module-brails.processors.image_classifier.image_classifier", false]], "brails.processors.image_processor": [[204, "module-brails.processors.image_processor", false]], "brails.processors.image_segmenter": [[205, "module-brails.processors.image_segmenter", false]], "brails.processors.image_segmenter.image_segmenter": [[206, "module-brails.processors.image_segmenter.image_segmenter", false]], "brails.processors.nfloor_gpt": [[207, "module-brails.processors.nFloor_gpt", false]], "brails.processors.nfloor_gpt.nfloor_gpt": [[208, "module-brails.processors.nFloor_gpt.nFloor_gpt", false]], "brails.processors.nfloor_vlm": [[209, "module-brails.processors.nFloor_vlm", false]], "brails.processors.nfloor_vlm.nfloor_vlm": [[210, "module-brails.processors.nFloor_vlm.nFloor_vlm", false]], "brails.processors.nfloors_detector": [[211, "module-brails.processors.nfloors_detector", false]], "brails.processors.nfloors_detector.lib": [[212, "module-brails.processors.nfloors_detector.lib", false]], "brails.processors.nfloors_detector.lib.efficientdet": [[214, "module-brails.processors.nfloors_detector.lib.efficientdet", false]], "brails.processors.nfloors_detector.lib.efficientdet.coco": [[215, "module-brails.processors.nfloors_detector.lib.efficientdet.coco", false]], "brails.processors.nfloors_detector.lib.efficientdet.config": [[216, "module-brails.processors.nfloors_detector.lib.efficientdet.config", false]], "brails.processors.nfloors_detector.lib.efficientdet.utils": [[220, "module-brails.processors.nfloors_detector.lib.efficientdet.utils", false]], "brails.processors.nfloors_detector.lib.efficientnet": [[221, "module-brails.processors.nfloors_detector.lib.efficientnet", false]], "brails.processors.nfloors_detector.lib.efficientnet.model": [[222, "module-brails.processors.nfloors_detector.lib.efficientnet.model", false]], "brails.processors.nfloors_detector.lib.efficientnet.utils": [[223, "module-brails.processors.nfloors_detector.lib.efficientnet.utils", false]], "brails.processors.nfloors_detector.lib.efficientnet.utils_extra": [[224, "module-brails.processors.nfloors_detector.lib.efficientnet.utils_extra", false]], "brails.processors.nfloors_detector.lib.utils": [[227, "module-brails.processors.nfloors_detector.lib.utils", false]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm": [[228, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm", false]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm": [[229, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm", false]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl": [[230, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", false]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm": [[231, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm", false]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate": [[232, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate", false]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest": [[233, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest", false]], "brails.processors.occupancy_classifier": [[236, "module-brails.processors.occupancy_classifier", false]], "brails.processors.occupancy_classifier.occupancy_classifier": [[237, "module-brails.processors.occupancy_classifier.occupancy_classifier", false]], "brails.processors.other_idea": [[238, "module-brails.processors.other_idea", false]], "brails.processors.other_idea.arial_processing": [[239, "module-brails.processors.other_idea.arial_processing", false]], "brails.processors.other_idea.street_processor": [[240, "module-brails.processors.other_idea.street_processor", false]], "brails.processors.roof_shape_classifier": [[241, "module-brails.processors.roof_shape_classifier", false]], "brails.processors.roof_shape_classifier.roof_shape_classifier": [[242, "module-brails.processors.roof_shape_classifier.roof_shape_classifier", false]], "brails.processors.roof_shape_gpt": [[243, "module-brails.processors.roof_shape_gpt", false]], "brails.processors.roof_shape_gpt.roof_shape_gpt": [[244, "module-brails.processors.roof_shape_gpt.roof_shape_gpt", false]], "brails.processors.roof_shape_vlm": [[245, "module-brails.processors.roof_shape_vlm", false]], "brails.processors.roof_shape_vlm.roof_shape_vlm": [[246, "module-brails.processors.roof_shape_vlm.roof_shape_vlm", false]], "brails.processors.street_level_damage_detection": [[247, "module-brails.processors.street_level_damage_detection", false]], "brails.processors.street_level_damage_detection.street_level_damage_detection": [[248, "module-brails.processors.street_level_damage_detection.street_level_damage_detection", false]], "brails.processors.vlm_image_classifier": [[249, "module-brails.processors.vlm_image_classifier", false]], "brails.processors.vlm_image_classifier.clip": [[251, "module-brails.processors.vlm_image_classifier.clip", false]], "brails.processors.vlm_image_classifier.clip.clip": [[252, "module-brails.processors.vlm_image_classifier.clip.clip", false]], "brails.processors.vlm_image_classifier.clip.model": [[253, "module-brails.processors.vlm_image_classifier.clip.model", false]], "brails.processors.vlm_image_classifier.clip.simple_tokenizer": [[254, "module-brails.processors.vlm_image_classifier.clip.simple_tokenizer", false]], "brails.processors.vlm_image_classifier.clip.utils": [[255, "module-brails.processors.vlm_image_classifier.clip.utils", false]], "brails.processors.vlm_image_classifier.clipclassifier": [[250, "module-brails.processors.vlm_image_classifier.CLIPClassifier", false]], "brails.processors.vlm_segmenter": [[256, "module-brails.processors.vlm_segmenter", false]], "brails.processors.vlm_segmenter.grounded_sam_utils": [[257, "module-brails.processors.vlm_segmenter.grounded_sam_utils", false]], "brails.processors.vlm_segmenter.segment_anything": [[258, "module-brails.processors.vlm_segmenter.segment_anything", false]], "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator": [[259, "module-brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator", false]], "brails.processors.vlm_segmenter.segment_anything.build_sam": [[260, "module-brails.processors.vlm_segmenter.segment_anything.build_sam", false]], "brails.processors.vlm_segmenter.segment_anything.build_sam_hq": [[261, "module-brails.processors.vlm_segmenter.segment_anything.build_sam_hq", false]], "brails.processors.vlm_segmenter.segment_anything.modeling": [[262, "module-brails.processors.vlm_segmenter.segment_anything.modeling", false]], "brails.processors.vlm_segmenter.segment_anything.modeling.common": [[263, "module-brails.processors.vlm_segmenter.segment_anything.modeling.common", false]], "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder": [[264, "module-brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder", false]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder": [[265, "module-brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder", false]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq": [[266, "module-brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq", false]], "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder": [[267, "module-brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder", false]], "brails.processors.vlm_segmenter.segment_anything.modeling.sam": [[268, "module-brails.processors.vlm_segmenter.segment_anything.modeling.sam", false]], "brails.processors.vlm_segmenter.segment_anything.modeling.transformer": [[269, "module-brails.processors.vlm_segmenter.segment_anything.modeling.transformer", false]], "brails.processors.vlm_segmenter.segment_anything.predictor": [[270, "module-brails.processors.vlm_segmenter.segment_anything.predictor", false]], "brails.processors.vlm_segmenter.segment_anything.utils": [[271, "module-brails.processors.vlm_segmenter.segment_anything.utils", false]], "brails.processors.vlm_segmenter.segment_anything.utils.amg": [[272, "module-brails.processors.vlm_segmenter.segment_anything.utils.amg", false]], "brails.processors.vlm_segmenter.segment_anything.utils.onnx": [[273, "module-brails.processors.vlm_segmenter.segment_anything.utils.onnx", false]], "brails.processors.vlm_segmenter.segment_anything.utils.transforms": [[274, "module-brails.processors.vlm_segmenter.segment_anything.utils.transforms", false]], "brails.processors.vlm_segmenter.vlm_segmenter": [[275, "module-brails.processors.vlm_segmenter.vlm_segmenter", false]], "brails.processors.year_built_classifier": [[276, "module-brails.processors.year_built_classifier", false]], "brails.processors.year_built_classifier.lib": [[279, "module-brails.processors.year_built_classifier.lib", false]], "brails.processors.year_built_classifier.lib.datasets": [[280, "module-brails.processors.year_built_classifier.lib.datasets", false]], "brails.processors.year_built_classifier.lib.utils": [[281, "module-brails.processors.year_built_classifier.lib.utils", false]], "brails.processors.year_built_classifier.model": [[282, "module-brails.processors.year_built_classifier.model", false]], "brails.processors.year_built_classifier.resnet": [[277, "module-brails.processors.year_built_classifier.Resnet", false]], "brails.processors.year_built_classifier.weights": [[284, "module-brails.processors.year_built_classifier.weights", false]], "brails.processors.year_built_classifier.year_built_classifier": [[285, "module-brails.processors.year_built_classifier.year_built_classifier", false]], "brails.scrapers": [[286, "module-brails.scrapers", false]], "brails.scrapers.asce_hazard_data_scraper": [[287, "module-brails.scrapers.asce_hazard_data_scraper", false]], "brails.scrapers.asset_data_augmenter": [[289, "module-brails.scrapers.asset_data_augmenter", false]], "brails.scrapers.fema_firm_scraper": [[290, "module-brails.scrapers.fema_firm_scraper", false]], "brails.scrapers.fema_firm_scraper.fema_firm_scraper": [[291, "module-brails.scrapers.fema_firm_scraper.fema_firm_scraper", false]], "brails.scrapers.footprint_scraper": [[292, "module-brails.scrapers.footprint_scraper", false]], "brails.scrapers.google_satellite": [[293, "module-brails.scrapers.google_satellite", false]], "brails.scrapers.google_satellite.google_satellite": [[294, "module-brails.scrapers.google_satellite.google_satellite", false]], "brails.scrapers.google_streetview": [[295, "module-brails.scrapers.google_streetview", false]], "brails.scrapers.google_streetview.google_streetview": [[296, "module-brails.scrapers.google_streetview.google_streetview", false]], "brails.scrapers.image_scraper": [[297, "module-brails.scrapers.image_scraper", false]], "brails.scrapers.ms_footprint_scraper": [[298, "module-brails.scrapers.ms_footprint_scraper", false]], "brails.scrapers.ms_footprint_scraper.ms_footprint_handler": [[299, "module-brails.scrapers.ms_footprint_scraper.ms_footprint_handler", false]], "brails.scrapers.nbi_scraper": [[300, "module-brails.scrapers.nbi_scraper", false]], "brails.scrapers.nbi_scraper.nbi_scraper": [[301, "module-brails.scrapers.nbi_scraper.nbi_scraper", false]], "brails.scrapers.nsi_parser": [[302, "module-brails.scrapers.nsi_parser", false]], "brails.scrapers.nsi_parser.nsi_parser": [[303, "module-brails.scrapers.nsi_parser.nsi_parser", false]], "brails.scrapers.nti_scraper": [[304, "module-brails.scrapers.nti_scraper", false]], "brails.scrapers.nti_scraper.nti_scraper": [[305, "module-brails.scrapers.nti_scraper.nti_scraper", false]], "brails.scrapers.osm_footprint_scraper": [[306, "module-brails.scrapers.osm_footprint_scraper", false]], "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper": [[307, "module-brails.scrapers.osm_footprint_scraper.osm_footprint_scraper", false]], "brails.scrapers.osm_power_network_scraper": [[308, "module-brails.scrapers.osm_power_network_scraper", false]], "brails.scrapers.osm_power_network_scraper.osm_power_network_scraper": [[309, "module-brails.scrapers.osm_power_network_scraper.osm_power_network_scraper", false]], "brails.scrapers.overture_maps_scraper": [[310, "module-brails.scrapers.overture_maps_scraper", false]], "brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper": [[311, "module-brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper", false]], "brails.scrapers.overture_maps_scraper.overture_maps_scraper": [[312, "module-brails.scrapers.overture_maps_scraper.overture_maps_scraper", false]], "brails.scrapers.usa_footprint_scraper": [[313, "module-brails.scrapers.usa_footprint_scraper", false]], "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper": [[314, "module-brails.scrapers.usa_footprint_scraper.usa_footprint_scraper", false]], "brails.scrapers.user_footprints": [[315, "module-brails.scrapers.user_footprints", false]], "brails.scrapers.usgs_data_scrapers": [[316, "module-brails.scrapers.usgs_data_scrapers", false]], "brails.scrapers.usgs_data_scrapers.nlcd_scraper": [[317, "module-brails.scrapers.usgs_data_scrapers.nlcd_scraper", false]], "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper": [[318, "module-brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper", false]], "brails.types": [[319, "module-brails.types", false]], "brails.types.asset_inventory": [[320, "module-brails.types.asset_inventory", false]], "brails.types.image_set": [[321, "module-brails.types.image_set", false]], "brails.types.region_boundary": [[322, "module-brails.types.region_boundary", false]], "brails.utils": [[323, "module-brails.utils", false]], "brails.utils.arcgisapi_service_helper": [[324, "module-brails.utils.arcgisapi_service_helper", false]], "brails.utils.geo_tools": [[325, "module-brails.utils.geo_tools", false]], "brails.utils.importer": [[326, "module-brails.utils.importer", false]], "brails.utils.input_validator": [[327, "module-brails.utils.input_validator", false]], "brails.utils.inventory_validator": [[328, "module-brails.utils.inventory_validator", false]], "brails.utils.model_utils": [[329, "module-brails.utils.model_utils", false]], "brails.utils.plot_tools": [[330, "module-brails.utils.plot_tools", false]], "brails.utils.rapid_utils": [[331, "module-brails.utils.rapid_utils", false]], "brails.utils.segmentation_utils": [[332, "module-brails.utils.segmentation_utils", false]], "brails.utils.spatial_join_methods": [[333, "module-brails.utils.spatial_join_methods", false]], "brails.utils.spatial_join_methods.base": [[334, "module-brails.utils.spatial_join_methods.base", false]], "brails.utils.spatial_join_methods.distance_based_point_matcher": [[335, "module-brails.utils.spatial_join_methods.distance_based_point_matcher", false]], "brails.utils.spatial_join_methods.get_points_in_polygons": [[336, "module-brails.utils.spatial_join_methods.get_points_in_polygons", false]], "brails.utils.spatial_join_methods.get_points_near_polygons": [[337, "module-brails.utils.spatial_join_methods.get_points_near_polygons", false]], "brails.utils.unit_converter": [[338, "module-brails.utils.unit_converter", false]], "brails2r2dmap (brails.scrapers.nsi_parser.nsi_parser.nsi_parser attribute)": [[303, "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser.brails2r2dmap", false]], "brailserror": [[12, "brails.exceptions.BrailsError", false]], "build_all_layer_point_grids() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.amg.build_all_layer_point_grids", false]], "build_attention_mask() (brails.processors.vlm_image_classifier.clip.model.clip method)": [[253, "brails.processors.vlm_image_classifier.clip.model.CLIP.build_attention_mask", false]], "build_decoder() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.modelbuilder static method)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ModelBuilder.build_decoder", false]], "build_encoder() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.modelbuilder static method)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ModelBuilder.build_encoder", false]], "build_model() (in module brails.processors.vlm_image_classifier.clip.model)": [[253, "brails.processors.vlm_image_classifier.clip.model.build_model", false]], "build_models() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[257, "brails.processors.vlm_segmenter.grounded_sam_utils.build_models", false]], "build_point_grid() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.amg.build_point_grid", false]], "build_sam() (in module brails.processors.vlm_segmenter.segment_anything.build_sam)": [[260, "brails.processors.vlm_segmenter.segment_anything.build_sam.build_sam", false]], "build_sam_hq() (in module brails.processors.vlm_segmenter.segment_anything.build_sam_hq)": [[261, "brails.processors.vlm_segmenter.segment_anything.build_sam_hq.build_sam_hq", false]], "build_sam_hq_vit_b() (in module brails.processors.vlm_segmenter.segment_anything.build_sam_hq)": [[261, "brails.processors.vlm_segmenter.segment_anything.build_sam_hq.build_sam_hq_vit_b", false]], "build_sam_hq_vit_h() (in module brails.processors.vlm_segmenter.segment_anything.build_sam_hq)": [[261, "brails.processors.vlm_segmenter.segment_anything.build_sam_hq.build_sam_hq_vit_h", false]], "build_sam_hq_vit_l() (in module brails.processors.vlm_segmenter.segment_anything.build_sam_hq)": [[261, "brails.processors.vlm_segmenter.segment_anything.build_sam_hq.build_sam_hq_vit_l", false]], "build_sam_vit_b() (in module brails.processors.vlm_segmenter.segment_anything.build_sam)": [[260, "brails.processors.vlm_segmenter.segment_anything.build_sam.build_sam_vit_b", false]], "build_sam_vit_h() (in module brails.processors.vlm_segmenter.segment_anything.build_sam)": [[260, "brails.processors.vlm_segmenter.segment_anything.build_sam.build_sam_vit_h", false]], "build_sam_vit_l() (in module brails.processors.vlm_segmenter.segment_anything.build_sam)": [[260, "brails.processors.vlm_segmenter.segment_anything.build_sam.build_sam_vit_l", false]], "building_class() (in module brails.inferers.hazus_inferer_wind.buildingclassrulesets)": [[30, "brails.inferers.hazus_inferer_wind.BuildingClassRulesets.building_class", false]], "buildingmaterialllm (class in brails.processors.building_material_llm.building_material_llm)": [[60, "brails.processors.building_material_llm.building_material_llm.BuildingMaterialLLM", false]], "bytes_to_unicode() (in module brails.processors.vlm_image_classifier.clip.simple_tokenizer)": [[254, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.bytes_to_unicode", false]], "c1 (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.C1", false]], "c1deepsup (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.C1DeepSup", false]], "calc_perf (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder attribute)": [[280, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.calc_perf", false]], "calculate_stability_score() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.amg.calculate_stability_score", false]], "callbackcontext (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate)": [[83, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.CallbackContext", false]], "callbackcontext (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate)": [[109, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.CallbackContext", false]], "callbackcontext (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate)": [[196, "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.CallbackContext", false]], "callbackcontext (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate)": [[232, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.CallbackContext", false]], "cam_elevs (brails.processors.facade_parser.facade_parser.facadeparser attribute)": [[89, "brails.processors.facade_parser.facade_parser.FacadeParser.cam_elevs", false]], "cat() (brails.processors.vlm_segmenter.segment_anything.utils.amg.maskdata method)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.amg.MaskData.cat", false]], "categorize_and_split_cells() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[324, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.categorize_and_split_cells", false]], "category_in_df_to_indices() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[20, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.category_in_df_to_indices", false]], "cecb_config() (in module brails.inferers.hazus_inferer_wind.windcecbrulesets)": [[31, "brails.inferers.hazus_inferer_wind.WindCECBRulesets.CECB_config", false]], "center_crop() (in module brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.center_crop", false]], "center_crop() (in module brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.center_crop", false]], "centercropnumpy (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.CenterCropNumpy", false]], "centercropnumpy (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.CenterCropNumpy", false]], "centroids (brails.scrapers.footprint_scraper.footprintscraper attribute)": [[292, "brails.scrapers.footprint_scraper.FootprintScraper.centroids", false]], "cerb_config() (in module brails.inferers.hazus_inferer_wind.windcerbrulesets)": [[32, "brails.inferers.hazus_inferer_wind.WindCERBRulesets.CERB_config", false]], "change_feature_names() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.change_feature_names", false]], "check_keys() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[23, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.check_keys", false]], "check_keys() (brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.hazusinfererearthquake method)": [[26, "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.HazusInfererEarthquake.check_keys", false]], "checkpoint (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[132, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.checkpoint", false]], "checkpoint (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier attribute)": [[285, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.checkpoint", false]], "checkpoints_dir (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[132, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.checkpoints_dir", false]], "checkpoints_dir (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier attribute)": [[285, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.checkpoints_dir", false]], "cifar100instance (class in brails.processors.foundation_classifier.npid.npid_datasets)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance", false]], "cifar100instance (class in brails.processors.foundation_classifier.npid.npid_datasets.cifar)": [[152, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance", false]], "cifar10instance (class in brails.processors.foundation_classifier.npid.npid_datasets)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR10Instance", false]], "cifar10instance (class in brails.processors.foundation_classifier.npid.npid_datasets.cifar)": [[152, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR10Instance", false]], "class_weights (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder attribute)": [[280, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.class_weights", false]], "classes (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[132, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.classes", false]], "classes (brails.processors.image_segmenter.image_segmenter.imagesegmenter attribute)": [[206, "brails.processors.image_segmenter.image_segmenter.ImageSegmenter.classes", false]], "classes (brails.processors.street_level_damage_detection.street_level_damage_detection.damagedetection_streetlevel attribute)": [[248, "brails.processors.street_level_damage_detection.street_level_damage_detection.DamageDetection_StreetLevel.classes", false]], "classes (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder attribute)": [[280, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.classes", false]], "classes (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier attribute)": [[285, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.classes", false]], "clean_floats() (in module brails.types.asset_inventory)": [[320, "brails.types.asset_inventory.clean_floats", false]], "clip (class in brails.processors.vlm_image_classifier.clip.model)": [[253, "brails.processors.vlm_image_classifier.clip.model.CLIP", false]], "clipboxes (class in brails.processors.chimney_detector.lib.efficientdet.utils)": [[71, "brails.processors.chimney_detector.lib.efficientdet.utils.ClipBoxes", false]], "clipboxes (class in brails.processors.garage_detector.lib.efficientdet.utils)": [[184, "brails.processors.garage_detector.lib.efficientdet.utils.ClipBoxes", false]], "clipboxes (class in brails.processors.nfloors_detector.lib.efficientdet.utils)": [[220, "brails.processors.nfloors_detector.lib.efficientdet.utils.ClipBoxes", false]], "clipclassifier (class in brails.processors.vlm_image_classifier.clipclassifier)": [[250, "brails.processors.vlm_image_classifier.CLIPClassifier.CLIPClassifier", false]], "clustering() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[20, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.clustering", false]], "coco (class in brails.processors.chimney_detector.lib.efficientdet.coco)": [[66, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO", false]], "coco (class in brails.processors.garage_detector.lib.efficientdet.coco)": [[179, "brails.processors.garage_detector.lib.efficientdet.coco.COCO", false]], "coco (class in brails.processors.nfloors_detector.lib.efficientdet.coco)": [[215, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO", false]], "coco_encode_rle() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.amg.coco_encode_rle", false]], "colorencode() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.colorEncode", false]], "colors (brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.maskbuilding attribute)": [[130, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding.colors", false]], "combinedmaskdataset (class in brails.processors.foundation_classifier.npid.npid_datasets)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.CombinedMaskDataset", false]], "combinedmaskdataset (class in brails.processors.foundation_classifier.npid.npid_datasets.folder)": [[153, "brails.processors.foundation_classifier.npid.npid_datasets.folder.CombinedMaskDataset", false]], "compute_n_possible_worlds() (brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.hazusinfererearthquake method)": [[26, "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.HazusInfererEarthquake.compute_n_possible_worlds", false]], "compute_similarity() (in module brails.processors.vlm_image_classifier.clip.utils)": [[255, "brails.processors.vlm_image_classifier.clip.utils.compute_similarity", false]], "concatdataset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset)": [[116, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.ConcatDataset", false]], "config_file (brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.maskbuilding attribute)": [[130, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding.config_file", false]], "construct_confusion_matrix_image() (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier method)": [[285, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.construct_confusion_matrix_image", false]], "construct_confusion_matrix_image() (in module brails.processors.foundation_classifier.attention_utils.utils)": [[95, "brails.processors.foundation_classifier.attention_utils.utils.construct_confusion_matrix_image", false]], "construct_confusion_matrix_image() (in module brails.processors.year_built_classifier.lib.utils)": [[281, "brails.processors.year_built_classifier.lib.utils.construct_confusion_matrix_image", false]], "constypeclassifier (class in brails.processors.cons_type_classifier.constructiontypeclassifier)": [[87, "brails.processors.cons_type_classifier.ConstructionTypeClassifier.ConsTypeClassifier", false]], "conv2ddynamicsamepadding (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding", false]], "conv2ddynamicsamepadding (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding", false]], "conv2ddynamicsamepadding (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding", false]], "conv2dstaticsamepadding (class in brails.processors.chimney_detector.lib.efficientnet.utils_extra)": [[75, "brails.processors.chimney_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding", false]], "conv2dstaticsamepadding (class in brails.processors.garage_detector.lib.efficientnet.utils_extra)": [[188, "brails.processors.garage_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding", false]], "conv2dstaticsamepadding (class in brails.processors.nfloors_detector.lib.efficientnet.utils_extra)": [[224, "brails.processors.nfloors_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding", false]], "conv3x3_bn_relu() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.conv3x3_bn_relu", false]], "convert_area() (brails.utils.unit_converter.unitconverter static method)": [[338, "brails.utils.unit_converter.UnitConverter.convert_area", false]], "convert_length() (brails.utils.unit_converter.unitconverter static method)": [[338, "brails.utils.unit_converter.UnitConverter.convert_length", false]], "convert_model() (in module brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm)": [[80, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm.convert_model", false]], "convert_model() (in module brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm)": [[193, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm.convert_model", false]], "convert_model() (in module brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm)": [[229, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm.convert_model", false]], "convert_polygons_to_centroids() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.convert_polygons_to_centroids", false]], "convert_unit() (brails.utils.unit_converter.unitconverter static method)": [[338, "brails.utils.unit_converter.UnitConverter.convert_unit", false]], "convert_weight() (brails.utils.unit_converter.unitconverter static method)": [[338, "brails.utils.unit_converter.UnitConverter.convert_weight", false]], "convert_weights() (in module brails.processors.vlm_image_classifier.clip.model)": [[253, "brails.processors.vlm_image_classifier.clip.model.convert_weights", false]], "correct() (brails.inferers.hazus_inferer_wind.hazus_inferer_wind.hazusinfererwind method)": [[48, "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind.correct", false]], "cosine_anneal_schedule() (in module brails.processors.year_built_classifier.lib.utils)": [[281, "brails.processors.year_built_classifier.lib.utils.cosine_anneal_schedule", false]], "create_overlaid_image() (brails.utils.segmentation_utils.segmentationutils static method)": [[332, "brails.utils.segmentation_utils.SegmentationUtils.create_overlaid_image", false]], "createindex() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[66, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.createIndex", false]], "createindex() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[179, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.createIndex", false]], "createindex() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[215, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.createIndex", false]], "cuda() (brails.processors.foundation_classifier.lib.alias_multinomial.aliasmethod method)": [[137, "brails.processors.foundation_classifier.lib.alias_multinomial.AliasMethod.cuda", false]], "cuda() (brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial.aliasmethod method)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial.AliasMethod.cuda", false]], "cummulative_sizes (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.concatdataset property)": [[116, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.ConcatDataset.cummulative_sizes", false]], "cumsum() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.concatdataset static method)": [[116, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.ConcatDataset.cumsum", false]], "damagedetection_streetlevel (class in brails.processors.street_level_damage_detection.street_level_damage_detection)": [[248, "brails.processors.street_level_damage_detection.street_level_damage_detection.DamageDetection_StreetLevel", false]], "data (brails.processors.foundation_classifier.npid.npid_datasets.cifar.cifar100instance attribute)": [[152, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance.data", false]], "dataparallelwithcallback (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate)": [[83, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback", false]], "dataparallelwithcallback (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate)": [[109, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.DataParallelWithCallback", false]], "dataparallelwithcallback (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate)": [[196, "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback", false]], "dataparallelwithcallback (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate)": [[232, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback", false]], "dataset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset)": [[116, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.Dataset", false]], "datasetbinary (class in brails.processors.image_segmenter.image_segmenter)": [[206, "brails.processors.image_segmenter.image_segmenter.DatasetBinary", false]], "datasetrgb (class in brails.processors.image_segmenter.image_segmenter)": [[206, "brails.processors.image_segmenter.image_segmenter.DatasetRGB", false]], "dec_weights (brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.maskbuilding attribute)": [[130, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding.dec_weights", false]], "decode() (brails.processors.chimney_detector.lib.efficientnet.utils.blockdecoder static method)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockDecoder.decode", false]], "decode() (brails.processors.garage_detector.lib.efficientnet.utils.blockdecoder static method)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.BlockDecoder.decode", false]], "decode() (brails.processors.nfloors_detector.lib.efficientnet.utils.blockdecoder static method)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockDecoder.decode", false]], "decode() (brails.processors.vlm_image_classifier.clip.simple_tokenizer.simpletokenizer method)": [[254, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.SimpleTokenizer.decode", false]], "decode_segmap() (brails.utils.segmentation_utils.segmentationutils static method)": [[332, "brails.utils.segmentation_utils.SegmentationUtils.decode_segmap", false]], "default_bpe() (in module brails.processors.vlm_image_classifier.clip.simple_tokenizer)": [[254, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.default_bpe", false]], "denseblock (class in brails.processors.foundation_classifier.models.residual_attention_network)": [[144, "brails.processors.foundation_classifier.models.residual_attention_network.DenseBlock", false]], "depth_coefficient (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.depth_coefficient", false]], "depth_coefficient (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.depth_coefficient", false]], "depth_coefficient (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.depth_coefficient", false]], "depth_divisor (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.depth_divisor", false]], "depth_divisor (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.depth_divisor", false]], "depth_divisor (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.depth_divisor", false]], "depthmaps (brails.processors.facade_parser.facade_parser.facadeparser attribute)": [[89, "brails.processors.facade_parser.facade_parser.FacadeParser.depthmaps", false]], "detect() (in module brails.filters.house_view.house_view)": [[16, "brails.filters.house_view.house_view.detect", false]], "detect() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[257, "brails.processors.vlm_segmenter.grounded_sam_utils.detect", false]], "detectionresult (class in brails.processors.vlm_segmenter.grounded_sam_utils)": [[257, "brails.processors.vlm_segmenter.grounded_sam_utils.DetectionResult", false]], "device (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[132, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.device", false]], "device (brails.processors.image_segmenter.image_segmenter.imagesegmenter attribute)": [[206, "brails.processors.image_segmenter.image_segmenter.ImageSegmenter.device", false]], "device (brails.processors.vlm_image_classifier.clipclassifier.clipclassifier attribute)": [[250, "brails.processors.vlm_image_classifier.CLIPClassifier.CLIPClassifier.device", false]], "device (brails.processors.vlm_segmenter.segment_anything.modeling.sam.sam property)": [[268, "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam.device", false]], "device (brails.processors.vlm_segmenter.segment_anything.predictor.sampredictor property)": [[270, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor.device", false]], "device (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier attribute)": [[285, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.device", false]], "distancebasedpointmatcher (class in brails.utils.spatial_join_methods.distance_based_point_matcher)": [[335, "brails.utils.spatial_join_methods.distance_based_point_matcher.DistanceBasedPointMatcher", false]], "download_all_attr_for_region() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[324, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.download_all_attr_for_region", false]], "download_all_attr_from_api() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[324, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.download_all_attr_from_api", false]], "download_attr_from_api() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[324, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.download_attr_from_api", false]], "draw() (brails.processors.foundation_classifier.lib.alias_multinomial.aliasmethod method)": [[137, "brails.processors.foundation_classifier.lib.alias_multinomial.AliasMethod.draw", false]], "draw() (brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial.aliasmethod method)": [[159, "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial.AliasMethod.draw", false]], "drop_connect() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.drop_connect", false]], "drop_connect() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.drop_connect", false]], "drop_connect() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.drop_connect", false]], "drop_connect_rate (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.drop_connect_rate", false]], "drop_connect_rate (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.drop_connect_rate", false]], "drop_connect_rate (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.drop_connect_rate", false]], "dropout_rate (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.dropout_rate", false]], "dropout_rate (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.dropout_rate", false]], "dropout_rate (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.dropout_rate", false]], "dtype (brails.processors.vlm_image_classifier.clip.model.clip property)": [[253, "brails.processors.vlm_image_classifier.clip.model.CLIP.dtype", false]], "efficientnet (class in brails.processors.chimney_detector.lib.efficientnet.model)": [[73, "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet", false]], "efficientnet (class in brails.processors.garage_detector.lib.efficientnet.model)": [[186, "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet", false]], "efficientnet (class in brails.processors.nfloors_detector.lib.efficientnet.model)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet", false]], "efficientnet() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.efficientnet", false]], "efficientnet() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.efficientnet", false]], "efficientnet() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.efficientnet", false]], "efficientnet_params() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.efficientnet_params", false]], "efficientnet_params() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.efficientnet_params", false]], "efficientnet_params() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.efficientnet_params", false]], "elastic_transform() (in module brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.elastic_transform", false]], "elastic_transform() (in module brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.elastic_transform", false]], "elastictransform (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.ElasticTransform", false]], "elastictransform (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.ElasticTransform", false]], "enc_weights (brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.maskbuilding attribute)": [[130, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding.enc_weights", false]], "encode() (brails.processors.chimney_detector.lib.efficientnet.utils.blockdecoder static method)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockDecoder.encode", false]], "encode() (brails.processors.garage_detector.lib.efficientnet.utils.blockdecoder static method)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.BlockDecoder.encode", false]], "encode() (brails.processors.nfloors_detector.lib.efficientnet.utils.blockdecoder static method)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockDecoder.encode", false]], "encode() (brails.processors.vlm_image_classifier.clip.simple_tokenizer.simpletokenizer method)": [[254, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.SimpleTokenizer.encode", false]], "encode_image() (brails.processors.vlm_image_classifier.clip.model.clip method)": [[253, "brails.processors.vlm_image_classifier.clip.model.CLIP.encode_image", false]], "encode_image() (in module brails.processors.gpt_base_model.utils)": [[201, "brails.processors.gpt_base_model.utils.encode_image", false]], "encode_text() (brails.processors.vlm_image_classifier.clip.model.clip method)": [[253, "brails.processors.vlm_image_classifier.clip.model.CLIP.encode_text", false]], "enhancedcompose (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.EnhancedCompose", false]], "enhancedcompose (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.EnhancedCompose", false]], "evaluate() (in module brails.processors.foundation_classifier.attention_utils.utils)": [[95, "brails.processors.foundation_classifier.attention_utils.utils.evaluate", false]], "evaluate_to_stats() (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier method)": [[285, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.evaluate_to_stats", false]], "execute() (brails.utils.spatial_join_methods.base.spatialjoinmethods static method)": [[334, "brails.utils.spatial_join_methods.base.SpatialJoinMethods.execute", false]], "execute_replication_callbacks() (in module brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate)": [[83, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.execute_replication_callbacks", false]], "execute_replication_callbacks() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate)": [[109, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.execute_replication_callbacks", false]], "execute_replication_callbacks() (in module brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate)": [[196, "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.execute_replication_callbacks", false]], "execute_replication_callbacks() (in module brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate)": [[232, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.execute_replication_callbacks", false]], "expand_ratio (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.expand_ratio", false]], "expand_ratio (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.expand_ratio", false]], "expand_ratio (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.expand_ratio", false]], "expansion (brails.processors.vlm_image_classifier.clip.model.bottleneck attribute)": [[253, "brails.processors.vlm_image_classifier.clip.model.Bottleneck.expansion", false]], "extract_aerial_imagery() (brails.utils.rapid_utils.rapidutils method)": [[331, "brails.utils.rapid_utils.RAPIDUtils.extract_aerial_imagery", false]], "extract_features() (brails.processors.chimney_detector.lib.efficientnet.model.efficientnet method)": [[73, "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet.extract_features", false]], "extract_features() (brails.processors.garage_detector.lib.efficientnet.model.efficientnet method)": [[186, "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet.extract_features", false]], "extract_features() (brails.processors.nfloors_detector.lib.efficientnet.model.efficientnet method)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet.extract_features", false]], "facadeparser (class in brails.processors.facade_parser.facade_parser)": [[89, "brails.processors.facade_parser.facade_parser.FacadeParser", false]], "femafirmscraper (class in brails.scrapers.fema_firm_scraper.fema_firm_scraper)": [[291, "brails.scrapers.fema_firm_scraper.fema_firm_scraper.FEMAFIRMScraper", false]], "fetch_all_elevations() (brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.usgselevationscraper static method)": [[318, "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.USGSElevationScraper.fetch_all_elevations", false]], "fetch_api_fields() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper static method)": [[324, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.fetch_api_fields", false]], "fetch_data_for_cells() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[324, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.fetch_data_for_cells", false]], "fetch_footprint_data() (brails.scrapers.user_footprints.userfootprint method)": [[315, "brails.scrapers.user_footprints.UserFootprint.fetch_footprint_data", false]], "fetch_max_records_per_query() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[324, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.fetch_max_records_per_query", false]], "fetch_release_names() (brails.scrapers.overture_maps_scraper.overture_maps_scraper.overturemapsscraper static method)": [[312, "brails.scrapers.overture_maps_scraper.overture_maps_scraper.OvertureMapsScraper.fetch_release_names", false]], "ffhpredictorklepac (class in brails.processors.ffh_predictor_klepac.ffh_predictor_klepac)": [[91, "brails.processors.ffh_predictor_klepac.ffh_predictor_klepac.FFHPredictorKlepac", false]], "filename (brails.processors.foundation_classifier.npid.npid_datasets.cifar.cifar100instance attribute)": [[152, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance.filename", false]], "filename (brails.processors.foundation_classifier.npid.npid_datasets.cifar100instance attribute)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance.filename", false]], "filenames (brails.processors.foundation_classifier.utils.datasets.foundation_type_testset attribute)": [[172, "brails.processors.foundation_classifier.utils.Datasets.Foundation_Type_Testset.filenames", false]], "filenames (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder attribute)": [[280, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.filenames", false]], "filter (class in brails.filters.filter)": [[14, "brails.filters.filter.Filter", false]], "filter() (brails.filters.filter.filter method)": [[14, "brails.filters.filter.Filter.filter", false], [14, "id0", false]], "filter() (brails.filters.house_view.house_view.houseview method)": [[16, "brails.filters.house_view.house_view.HouseView.filter", false]], "filter() (brails.processors.vlm_segmenter.segment_anything.utils.amg.maskdata method)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.amg.MaskData.filter", false]], "filter1() (brails.filters.house_view.house_view.houseview method)": [[16, "brails.filters.house_view.house_view.HouseView.filter1", false]], "filterboundingbox (class in brails.filters.house_view.house_view)": [[16, "brails.filters.house_view.house_view.FilterBoundingBox", false]], "filterdetectionresult (class in brails.filters.house_view.house_view)": [[16, "brails.filters.house_view.house_view.FilterDetectionResult", false]], "find_json() (in module brails.processors.gpt_base_model.utils)": [[201, "brails.processors.gpt_base_model.utils.find_json", false]], "find_recursive() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.find_recursive", false]], "flatten_array() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[23, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.flatten_array", false]], "footprints (brails.processors.facade_parser.facade_parser.facadeparser attribute)": [[89, "brails.processors.facade_parser.facade_parser.FacadeParser.footprints", false]], "footprints (brails.scrapers.footprint_scraper.footprintscraper attribute)": [[292, "brails.scrapers.footprint_scraper.FootprintScraper.footprints", false]], "footprints (brails.scrapers.nsi_parser.nsi_parser.nsi_parser attribute)": [[303, "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser.footprints", false]], "footprintscraper (class in brails.scrapers.footprint_scraper)": [[292, "brails.scrapers.footprint_scraper.FootprintScraper", false]], "forward() (brails.processors.chimney_detector.lib.efficientdet.utils.anchors method)": [[71, "brails.processors.chimney_detector.lib.efficientdet.utils.Anchors.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientdet.utils.bboxtransform method)": [[71, "brails.processors.chimney_detector.lib.efficientdet.utils.BBoxTransform.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientdet.utils.clipboxes method)": [[71, "brails.processors.chimney_detector.lib.efficientdet.utils.ClipBoxes.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.model.efficientnet method)": [[73, "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.model.mbconvblock method)": [[73, "brails.processors.chimney_detector.lib.efficientnet.model.MBConvBlock.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.utils.conv2ddynamicsamepadding method)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.utils.identity method)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.Identity.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.utils.memoryefficientswish method)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.MemoryEfficientSwish.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.utils.swish method)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.Swish.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.utils.swishimplementation static method)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.SwishImplementation.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.utils_extra.conv2dstaticsamepadding method)": [[75, "brails.processors.chimney_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding.forward", false]], "forward() (brails.processors.chimney_detector.lib.efficientnet.utils_extra.maxpool2dstaticsamepadding method)": [[75, "brails.processors.chimney_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding.forward", false]], "forward() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[81, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.c1 method)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.C1.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.c1deepsup method)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.C1DeepSup.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.mobilenetv2dilated method)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.MobileNetV2Dilated.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ppm method)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.PPM.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ppmdeepsup method)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.PPMDeepsup.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.resnet method)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.Resnet.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.resnetdilated method)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ResnetDilated.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.segmentationmodule method)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.SegmentationModule.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.upernet method)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.UPerNet.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.resnet method)": [[124, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.ResNet.forward", false]], "forward() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext.resnext method)": [[125, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext.ResNeXt.forward", false]], "forward() (brails.processors.foundation_classifier.lib.linearaverage.linearaverage method)": [[134, "brails.processors.foundation_classifier.lib.LinearAverage.LinearAverage.forward", false]], "forward() (brails.processors.foundation_classifier.lib.linearaverage.linearaverageop static method)": [[134, "brails.processors.foundation_classifier.lib.LinearAverage.LinearAverageOp.forward", false]], "forward() (brails.processors.foundation_classifier.lib.nceaverage.nceaverage method)": [[135, "brails.processors.foundation_classifier.lib.NCEAverage.NCEAverage.forward", false]], "forward() (brails.processors.foundation_classifier.lib.nceaverage.ncefunction static method)": [[135, "brails.processors.foundation_classifier.lib.NCEAverage.NCEFunction.forward", false]], "forward() (brails.processors.foundation_classifier.lib.ncecriterion.ncecriterion method)": [[136, "brails.processors.foundation_classifier.lib.NCECriterion.NCECriterion.forward", false]], "forward() (brails.processors.foundation_classifier.lib.normalize.normalize method)": [[139, "brails.processors.foundation_classifier.lib.normalize.Normalize.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_pre method)": [[142, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_pre.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_stage0 method)": [[142, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage0.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_stage1 method)": [[142, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage1.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_stage1_cifar method)": [[142, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage1_cifar.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_stage2 method)": [[142, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage2.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_stage2_cifar method)": [[142, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage2_cifar.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_stage3 method)": [[142, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage3.forward", false]], "forward() (brails.processors.foundation_classifier.models.attention_module.attentionmodule_stage3_cifar method)": [[142, "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage3_cifar.forward", false]], "forward() (brails.processors.foundation_classifier.models.basic_layer.residualblock method)": [[143, "brails.processors.foundation_classifier.models.basic_layer.ResidualBlock.forward", false]], "forward() (brails.processors.foundation_classifier.models.basic_layer.residualblock1d method)": [[143, "brails.processors.foundation_classifier.models.basic_layer.ResidualBlock1D.forward", false]], "forward() (brails.processors.foundation_classifier.models.residual_attention_network.denseblock method)": [[144, "brails.processors.foundation_classifier.models.residual_attention_network.DenseBlock.forward", false]], "forward() (brails.processors.foundation_classifier.models.residual_attention_network.mlp method)": [[144, "brails.processors.foundation_classifier.models.residual_attention_network.MLP.forward", false]], "forward() (brails.processors.foundation_classifier.models.residual_attention_network.residualattentionmodel_92 method)": [[144, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92.forward", false]], "forward() (brails.processors.foundation_classifier.models.residual_attention_network.residualattentionmodel_92_32input method)": [[144, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_32input.forward", false]], "forward() (brails.processors.foundation_classifier.models.residual_attention_network.residualattentionmodel_92_32input_update method)": [[144, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_32input_update.forward", false]], "forward() (brails.processors.foundation_classifier.models.residual_attention_network.residualattentionmodel_92_small method)": [[144, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_Small.forward", false]], "forward() (brails.processors.foundation_classifier.models.residual_attention_network.residualattentionmodel_92_small_1d method)": [[144, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_Small_1D.forward", false]], "forward() (brails.processors.foundation_classifier.models.resnet_applied.resnet method)": [[145, "brails.processors.foundation_classifier.models.resnet_applied.ResNet.forward", false]], "forward() (brails.processors.foundation_classifier.models.sknet.skconv method)": [[146, "brails.processors.foundation_classifier.models.sknet.SKConv.forward", false]], "forward() (brails.processors.foundation_classifier.models.sknet.sknet method)": [[146, "brails.processors.foundation_classifier.models.sknet.SKNet.forward", false]], "forward() (brails.processors.foundation_classifier.models.sknet.skunit method)": [[146, "brails.processors.foundation_classifier.models.sknet.SKUnit.forward", false]], "forward() (brails.processors.foundation_classifier.npid.npid_lib.linearaverage.linearaverage method)": [[156, "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.LinearAverage.forward", false]], "forward() (brails.processors.foundation_classifier.npid.npid_lib.linearaverage.linearaverageop static method)": [[156, "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.LinearAverageOp.forward", false]], "forward() (brails.processors.foundation_classifier.npid.npid_lib.nceaverage.nceaverage method)": [[157, "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.NCEAverage.forward", false]], "forward() (brails.processors.foundation_classifier.npid.npid_lib.nceaverage.ncefunction static method)": [[157, "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.NCEFunction.forward", false]], "forward() (brails.processors.foundation_classifier.npid.npid_lib.ncecriterion.ncecriterion method)": [[158, "brails.processors.foundation_classifier.npid.npid_lib.NCECriterion.NCECriterion.forward", false]], "forward() (brails.processors.foundation_classifier.npid.npid_lib.normalize.normalize method)": [[161, "brails.processors.foundation_classifier.npid.npid_lib.normalize.Normalize.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientdet.utils.anchors method)": [[184, "brails.processors.garage_detector.lib.efficientdet.utils.Anchors.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientdet.utils.bboxtransform method)": [[184, "brails.processors.garage_detector.lib.efficientdet.utils.BBoxTransform.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientdet.utils.clipboxes method)": [[184, "brails.processors.garage_detector.lib.efficientdet.utils.ClipBoxes.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.model.efficientnet method)": [[186, "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.model.mbconvblock method)": [[186, "brails.processors.garage_detector.lib.efficientnet.model.MBConvBlock.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.utils.conv2ddynamicsamepadding method)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.utils.identity method)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.Identity.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.utils.memoryefficientswish method)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.MemoryEfficientSwish.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.utils.swish method)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.Swish.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.utils.swishimplementation static method)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.SwishImplementation.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.utils_extra.conv2dstaticsamepadding method)": [[188, "brails.processors.garage_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding.forward", false]], "forward() (brails.processors.garage_detector.lib.efficientnet.utils_extra.maxpool2dstaticsamepadding method)": [[188, "brails.processors.garage_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding.forward", false]], "forward() (brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[194, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientdet.utils.anchors method)": [[220, "brails.processors.nfloors_detector.lib.efficientdet.utils.Anchors.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientdet.utils.bboxtransform method)": [[220, "brails.processors.nfloors_detector.lib.efficientdet.utils.BBoxTransform.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientdet.utils.clipboxes method)": [[220, "brails.processors.nfloors_detector.lib.efficientdet.utils.ClipBoxes.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.model.efficientnet method)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.model.mbconvblock method)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.model.MBConvBlock.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.utils.conv2ddynamicsamepadding method)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.utils.identity method)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.Identity.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.utils.memoryefficientswish method)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.MemoryEfficientSwish.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.utils.swish method)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.Swish.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.utils.swishimplementation static method)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.SwishImplementation.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.utils_extra.conv2dstaticsamepadding method)": [[224, "brails.processors.nfloors_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding.forward", false]], "forward() (brails.processors.nfloors_detector.lib.efficientnet.utils_extra.maxpool2dstaticsamepadding method)": [[224, "brails.processors.nfloors_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding.forward", false]], "forward() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[230, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.attentionpool2d method)": [[253, "brails.processors.vlm_image_classifier.clip.model.AttentionPool2d.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.bottleneck method)": [[253, "brails.processors.vlm_image_classifier.clip.model.Bottleneck.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.clip method)": [[253, "brails.processors.vlm_image_classifier.clip.model.CLIP.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.layernorm method)": [[253, "brails.processors.vlm_image_classifier.clip.model.LayerNorm.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.modifiedresnet method)": [[253, "brails.processors.vlm_image_classifier.clip.model.ModifiedResNet.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.quickgelu method)": [[253, "brails.processors.vlm_image_classifier.clip.model.QuickGELU.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.residualattentionblock method)": [[253, "brails.processors.vlm_image_classifier.clip.model.ResidualAttentionBlock.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.transformer method)": [[253, "brails.processors.vlm_image_classifier.clip.model.Transformer.forward", false]], "forward() (brails.processors.vlm_image_classifier.clip.model.visiontransformer method)": [[253, "brails.processors.vlm_image_classifier.clip.model.VisionTransformer.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.common.layernorm2d method)": [[263, "brails.processors.vlm_segmenter.segment_anything.modeling.common.LayerNorm2d.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.common.mlpblock method)": [[263, "brails.processors.vlm_segmenter.segment_anything.modeling.common.MLPBlock.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.attention method)": [[264, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.Attention.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.block method)": [[264, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.Block.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.imageencodervit method)": [[264, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.ImageEncoderViT.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.patchembed method)": [[264, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.PatchEmbed.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.maskdecoder method)": [[265, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.MaskDecoder.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.mlp method)": [[265, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.MLP.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.maskdecoderhq method)": [[266, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.MaskDecoderHQ.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.mlp method)": [[266, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.MLP.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.positionembeddingrandom method)": [[267, "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PositionEmbeddingRandom.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.promptencoder method)": [[267, "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PromptEncoder.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.sam.sam method)": [[268, "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.transformer.attention method)": [[269, "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.Attention.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.transformer.twowayattentionblock method)": [[269, "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.TwoWayAttentionBlock.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.modeling.transformer.twowaytransformer method)": [[269, "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.TwoWayTransformer.forward", false]], "forward() (brails.processors.vlm_segmenter.segment_anything.utils.onnx.samonnxmodel method)": [[273, "brails.processors.vlm_segmenter.segment_anything.utils.onnx.SamOnnxModel.forward", false]], "forward() (brails.processors.year_built_classifier.model.basicconv method)": [[282, "brails.processors.year_built_classifier.model.BasicConv.forward", false]], "forward() (brails.processors.year_built_classifier.model.pmg method)": [[282, "brails.processors.year_built_classifier.model.PMG.forward", false]], "forward() (brails.processors.year_built_classifier.resnet.resnet method)": [[277, "brails.processors.year_built_classifier.Resnet.ResNet.forward", false]], "forward_with_coords() (brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.positionembeddingrandom method)": [[267, "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PositionEmbeddingRandom.forward_with_coords", false]], "foundation_type_binary (class in brails.processors.foundation_classifier.utils.datasets)": [[172, "brails.processors.foundation_classifier.utils.Datasets.Foundation_Type_Binary", false]], "foundation_type_testset (class in brails.processors.foundation_classifier.utils.datasets)": [[172, "brails.processors.foundation_classifier.utils.Datasets.Foundation_Type_Testset", false]], "foundationelevationclassifier (class in brails.processors.foundation_classifier.foundation_classifier)": [[132, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier", false]], "from_dict() (brails.filters.house_view.house_view.filterdetectionresult class method)": [[16, "brails.filters.house_view.house_view.FilterDetectionResult.from_dict", false]], "from_dict() (brails.processors.vlm_segmenter.grounded_sam_utils.detectionresult class method)": [[257, "brails.processors.vlm_segmenter.grounded_sam_utils.DetectionResult.from_dict", false]], "from_name() (brails.processors.chimney_detector.lib.efficientnet.model.efficientnet class method)": [[73, "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet.from_name", false]], "from_name() (brails.processors.garage_detector.lib.efficientnet.model.efficientnet class method)": [[186, "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet.from_name", false]], "from_name() (brails.processors.nfloors_detector.lib.efficientnet.model.efficientnet class method)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet.from_name", false]], "from_pretrained() (brails.processors.chimney_detector.lib.efficientnet.model.efficientnet class method)": [[73, "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet.from_pretrained", false]], "from_pretrained() (brails.processors.garage_detector.lib.efficientnet.model.efficientnet class method)": [[186, "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet.from_pretrained", false]], "from_pretrained() (brails.processors.nfloors_detector.lib.efficientnet.model.efficientnet class method)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet.from_pretrained", false]], "futureresult (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm)": [[82, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.FutureResult", false]], "futureresult (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm)": [[108, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.FutureResult", false]], "futureresult (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.comm)": [[195, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.FutureResult", false]], "futureresult (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm)": [[231, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.FutureResult", false]], "generate() (brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator.samautomaticmaskgenerator method)": [[259, "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator.SamAutomaticMaskGenerator.generate", false]], "generate_crop_boxes() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.amg.generate_crop_boxes", false]], "geometry_to_list_of_lists() (brails.utils.geo_tools.geotools static method)": [[325, "brails.utils.geo_tools.GeoTools.geometry_to_list_of_lists", false]], "geospatial_knn() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[20, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.geospatial_knn", false]], "geotools (class in brails.utils.geo_tools)": [[325, "brails.utils.geo_tools.GeoTools", false]], "get() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.futureresult method)": [[82, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.FutureResult.get", false]], "get() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.futureresult method)": [[108, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.FutureResult.get", false]], "get() (brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.futureresult method)": [[195, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.FutureResult.get", false]], "get() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.futureresult method)": [[231, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.FutureResult.get", false]], "get_asset_coordinates() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.get_asset_coordinates", false]], "get_asset_features() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.get_asset_features", false]], "get_asset_ids() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.get_asset_ids", false]], "get_assets() (brails.scrapers.nbi_scraper.nbi_scraper.nbiscraper method)": [[301, "brails.scrapers.nbi_scraper.nbi_scraper.NBIScraper.get_assets", false]], "get_assets() (brails.scrapers.nti_scraper.nti_scraper.ntiscraper method)": [[305, "brails.scrapers.nti_scraper.nti_scraper.NTIScraper.get_assets", false]], "get_available_attributes() (brails.scrapers.fema_firm_scraper.fema_firm_scraper.femafirmscraper static method)": [[291, "brails.scrapers.fema_firm_scraper.fema_firm_scraper.FEMAFIRMScraper.get_available_attributes", false]], "get_boundary() (brails.types.region_boundary.regionboundary method)": [[322, "brails.types.region_boundary.RegionBoundary.get_boundary", false]], "get_centroid() (brails.types.asset_inventory.asset method)": [[320, "brails.types.asset_inventory.Asset.get_centroid", false]], "get_class() (brails.utils.importer.importer method)": [[326, "brails.utils.importer.Importer.get_class", false]], "get_coordinates() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.get_coordinates", false]], "get_dataframe() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.get_dataframe", false]], "get_dense_pe() (brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.promptencoder method)": [[267, "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PromptEncoder.get_dense_pe", false]], "get_element_counts() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[324, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.get_element_counts", false]], "get_elements() (brails.scrapers.osm_power_network_scraper.osm_power_network_scraper.osm_powernetworkscraper method)": [[309, "brails.scrapers.osm_power_network_scraper.osm_power_network_scraper.OSM_PowerNetworkScraper.get_elements", false]], "get_elevation_usgs() (brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.usgselevationscraper static method)": [[318, "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.USGSElevationScraper.get_elevation_usgs", false]], "get_era_height_foundation_class() (brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.hazusinfererearthquake method)": [[26, "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.HazusInfererEarthquake.get_era_height_foundation_class", false]], "get_extent() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.get_extent", false]], "get_filtered_data_given_inventory() (brails.scrapers.nsi_parser.nsi_parser.nsi_parser method)": [[303, "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser.get_filtered_data_given_inventory", false]], "get_footprints() (brails.scrapers.footprint_scraper.footprintscraper method)": [[292, "brails.scrapers.footprint_scraper.FootprintScraper.get_footprints", false], [292, "id0", false]], "get_footprints() (brails.scrapers.ms_footprint_scraper.ms_footprint_handler.ms_footprintscraper method)": [[299, "brails.scrapers.ms_footprint_scraper.ms_footprint_handler.MS_FootprintScraper.get_footprints", false]], "get_footprints() (brails.scrapers.osm_footprint_scraper.osm_footprint_scraper.osm_footprintscraper method)": [[307, "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper.OSM_FootprintScraper.get_footprints", false]], "get_footprints() (brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper.overturemapsfootprintscraper method)": [[311, "brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper.OvertureMapsFootprintScraper.get_footprints", false]], "get_footprints() (brails.scrapers.usa_footprint_scraper.usa_footprint_scraper.usa_footprintscraper method)": [[314, "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper.USA_FootprintScraper.get_footprints", false]], "get_geojson() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.get_geojson", false]], "get_hazus_base_replacement_cost() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[24, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_base_replacement_cost", false]], "get_hazus_height_classes() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[24, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_height_classes", false]], "get_hazus_height_classes_res1() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[24, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_height_classes_RES1", false]], "get_hazus_income_to_const_class() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[24, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_income_to_const_class", false]], "get_hazus_occ_type_mapping() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[24, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_occ_type_mapping", false]], "get_hazus_region_to_garage() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[24, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_region_to_garage", false]], "get_hazus_state_region_mapping() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[24, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_state_region_mapping", false]], "get_hazus_year_classes() (in module brails.inferers.hazus_inferer.hazus_rulesets)": [[24, "brails.inferers.hazus_inferer.hazus_rulesets.get_hazus_year_classes", false]], "get_image() (brails.types.image_set.imageset method)": [[321, "brails.types.image_set.ImageSet.get_image", false]], "get_image_embedding() (brails.processors.vlm_segmenter.segment_anything.predictor.sampredictor method)": [[270, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor.get_image_embedding", false]], "get_image_size() (brails.processors.chimney_detector.lib.efficientnet.model.efficientnet class method)": [[73, "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet.get_image_size", false]], "get_image_size() (brails.processors.garage_detector.lib.efficientnet.model.efficientnet class method)": [[186, "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet.get_image_size", false]], "get_image_size() (brails.processors.nfloors_detector.lib.efficientnet.model.efficientnet class method)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet.get_image_size", false]], "get_images() (brails.scrapers.google_satellite.google_satellite.googlesatellite method)": [[294, "brails.scrapers.google_satellite.google_satellite.GoogleSatellite.get_images", false]], "get_images() (brails.scrapers.google_streetview.google_streetview.googlestreetview method)": [[296, "brails.scrapers.google_streetview.google_streetview.GoogleStreetview.get_images", false]], "get_images() (brails.scrapers.image_scraper.imagescraper method)": [[297, "brails.scrapers.image_scraper.ImageScraper.get_images", false]], "get_mask() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.maskbuilding method)": [[130, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding.get_mask", false]], "get_model_params() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.get_model_params", false]], "get_model_params() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.get_model_params", false]], "get_model_params() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.get_model_params", false]], "get_model_path() (brails.utils.model_utils.modelutils static method)": [[329, "brails.utils.model_utils.ModelUtils.get_model_path", false]], "get_mosaic_bbox_wgs84() (brails.utils.rapid_utils.rapidutils method)": [[331, "brails.utils.rapid_utils.RAPIDUtils.get_mosaic_bbox_wgs84", false]], "get_multi_keys() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.get_multi_keys", false]], "get_n_pw() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.get_n_pw", false]], "get_object() (brails.utils.importer.importer method)": [[326, "brails.utils.importer.Importer.get_object", false]], "get_pairs() (in module brails.processors.vlm_image_classifier.clip.simple_tokenizer)": [[254, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.get_pairs", false]], "get_preprocess_shape() (brails.processors.vlm_segmenter.segment_anything.utils.transforms.resizelongestside static method)": [[274, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide.get_preprocess_shape", false]], "get_random_sample() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.get_random_sample", false]], "get_raw_data() (brails.scrapers.nsi_parser.nsi_parser.nsi_parser method)": [[303, "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser.get_raw_data", false]], "get_region_elevation_data() (brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.usgselevationscraper method)": [[318, "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.USGSElevationScraper.get_region_elevation_data", false]], "get_rel_pos() (in module brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[264, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.get_rel_pos", false]], "get_replacement_cost() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[23, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.get_replacement_cost", false]], "get_same_padding_conv2d() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.get_same_padding_conv2d", false]], "get_same_padding_conv2d() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.get_same_padding_conv2d", false]], "get_same_padding_conv2d() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.get_same_padding_conv2d", false]], "get_str_from_occ() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[23, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.get_str_from_occ", false]], "get_supported_units() (brails.utils.unit_converter.unitconverter method)": [[338, "brails.utils.unit_converter.UnitConverter.get_supported_units", false]], "get_unit_type() (brails.utils.unit_converter.unitconverter static method)": [[338, "brails.utils.unit_converter.UnitConverter.get_unit_type", false]], "get_world_realization() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.get_world_realization", false]], "getannids() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[66, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.getAnnIds", false]], "getannids() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[179, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.getAnnIds", false]], "getannids() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[215, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.getAnnIds", false]], "getcatids() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[66, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.getCatIds", false]], "getcatids() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[179, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.getCatIds", false]], "getcatids() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[215, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.getCatIds", false]], "getimgids() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[66, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.getImgIds", false]], "getimgids() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[179, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.getImgIds", false]], "getimgids() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[215, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.getImgIds", false]], "getnsidata() (brails.scrapers.nsi_parser.nsi_parser.nsi_parser method)": [[303, "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser.GetNSIData", false]], "getpointsinpolygons (class in brails.utils.spatial_join_methods.get_points_in_polygons)": [[336, "brails.utils.spatial_join_methods.get_points_in_polygons.GetPointsInPolygons", false]], "getpointsnearpolygons (class in brails.utils.spatial_join_methods.get_points_near_polygons)": [[337, "brails.utils.spatial_join_methods.get_points_near_polygons.GetPointsNearPolygons", false]], "global_rulesets() (in module brails.inferers.hazus_inferer_wind.windmetavarrulesets)": [[41, "brails.inferers.hazus_inferer_wind.WindMetaVarRulesets.global_rulesets", false]], "globalparams (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams", false]], "globalparams (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams", false]], "globalparams (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams", false]], "googlesatellite (class in brails.scrapers.google_satellite.google_satellite)": [[294, "brails.scrapers.google_satellite.google_satellite.GoogleSatellite", false]], "googlestreetview (class in brails.scrapers.google_streetview.google_streetview)": [[296, "brails.scrapers.google_streetview.google_streetview.GoogleStreetview", false]], "gpt (class in brails.processors.gpt_base_model.gpt)": [[200, "brails.processors.gpt_base_model.GPT.GPT", false]], "has_se (brails.processors.chimney_detector.lib.efficientnet.model.mbconvblock attribute)": [[73, "brails.processors.chimney_detector.lib.efficientnet.model.MBConvBlock.has_se", false]], "has_se (brails.processors.garage_detector.lib.efficientnet.model.mbconvblock attribute)": [[186, "brails.processors.garage_detector.lib.efficientnet.model.MBConvBlock.has_se", false]], "has_se (brails.processors.nfloors_detector.lib.efficientnet.model.mbconvblock attribute)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.model.MBConvBlock.has_se", false]], "haversine_dist() (brails.utils.geo_tools.geotools static method)": [[325, "brails.utils.geo_tools.GeoTools.haversine_dist", false]], "hazusinferer (class in brails.inferers.hazus_inferer.hazus_inferer)": [[23, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer", false]], "hazusinfererearthquake (class in brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake)": [[26, "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.HazusInfererEarthquake", false]], "hazusinfererflood (class in brails.inferers.hazus_inferer_flood.hazus_inferer_flood)": [[28, "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood", false]], "hazusinfererwind (class in brails.inferers.hazus_inferer_wind.hazus_inferer_wind)": [[48, "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind", false]], "houseview (class in brails.filters.house_view.house_view)": [[16, "brails.filters.house_view.house_view.HouseView", false]], "hrnetv2() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet)": [[121, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet.hrnetv2", false]], "hueffs_config() (in module brails.inferers.hazus_inferer_wind.windefrulesets)": [[33, "brails.inferers.hazus_inferer_wind.WindEFRulesets.HUEFFS_config", false]], "huefh_config() (in module brails.inferers.hazus_inferer_wind.windefrulesets)": [[33, "brails.inferers.hazus_inferer_wind.WindEFRulesets.HUEFH_config", false]], "huefs_config() (in module brails.inferers.hazus_inferer_wind.windefrulesets)": [[33, "brails.inferers.hazus_inferer_wind.WindEFRulesets.HUEFS_config", false]], "huefss_config() (in module brails.inferers.hazus_inferer_wind.windefrulesets)": [[33, "brails.inferers.hazus_inferer_wind.WindEFRulesets.HUEFSS_config", false]], "id_skip (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.id_skip", false]], "id_skip (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.id_skip", false]], "id_skip (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.id_skip", false]], "identity (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.Identity", false]], "identity (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.Identity", false]], "identity (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.Identity", false]], "image (class in brails.types.image_set)": [[321, "brails.types.image_set.Image", false]], "image_format (brails.processors.vlm_segmenter.segment_anything.modeling.sam.sam attribute)": [[268, "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam.image_format", false]], "image_names (brails.processors.image_segmenter.image_segmenter.datasetbinary attribute)": [[206, "brails.processors.image_segmenter.image_segmenter.DatasetBinary.image_names", false]], "image_names (brails.processors.image_segmenter.image_segmenter.datasetrgb attribute)": [[206, "brails.processors.image_segmenter.image_segmenter.DatasetRGB.image_names", false]], "image_size (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.image_size", false]], "image_size (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.image_size", false]], "image_size (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.image_size", false]], "imageclassifier (class in brails.processors.image_classifier.image_classifier)": [[203, "brails.processors.image_classifier.image_classifier.ImageClassifier", false]], "imageencodervit (class in brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[264, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.ImageEncoderViT", false]], "imagefolderinstance (class in brails.processors.foundation_classifier.npid.npid_datasets)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.ImageFolderInstance", false]], "imagefolderinstance (class in brails.processors.foundation_classifier.npid.npid_datasets.folder)": [[153, "brails.processors.foundation_classifier.npid.npid_datasets.folder.ImageFolderInstance", false]], "imageprocessor (class in brails.processors.image_processor)": [[204, "brails.processors.image_processor.ImageProcessor", false]], "imagescraper (class in brails.scrapers.image_scraper)": [[297, "brails.scrapers.image_scraper.ImageScraper", false]], "imagesegmenter (class in brails.processors.image_segmenter.image_segmenter)": [[206, "brails.processors.image_segmenter.image_segmenter.ImageSegmenter", false]], "imageset (class in brails.types.image_set)": [[321, "brails.types.image_set.ImageSet", false]], "img_paths (brails.processors.foundation_classifier.utils.datasets.foundation_type_testset attribute)": [[172, "brails.processors.foundation_classifier.utils.Datasets.Foundation_Type_Testset.img_paths", false]], "img_paths (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder attribute)": [[280, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.img_paths", false]], "img_transform() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.basedataset method)": [[101, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.BaseDataset.img_transform", false]], "importer (class in brails.utils.importer)": [[326, "brails.utils.importer.Importer", false]], "imputation (class in brails.imputers.imputation)": [[18, "brails.imputers.imputation.Imputation", false]], "impute() (brails.imputers.imputation.imputation method)": [[18, "brails.imputers.imputation.Imputation.impute", false]], "impute() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[20, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.impute", false]], "imresize() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset)": [[101, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.imresize", false]], "infer() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[23, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.infer", false]], "infer() (brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.hazusinfererearthquake method)": [[26, "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.HazusInfererEarthquake.infer", false]], "infer() (brails.inferers.hazus_inferer_flood.hazus_inferer_flood.hazusinfererflood method)": [[28, "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood.infer", false]], "infer() (brails.inferers.hazus_inferer_wind.hazus_inferer_wind.hazusinfererwind method)": [[48, "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind.infer", false]], "infer() (brails.inferers.inference_engine.inferenceengine method)": [[49, "brails.inferers.inference_engine.InferenceEngine.infer", false]], "infer() (brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover.nlcdtocoarselandcover method)": [[51, "brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover.NLCDToCoarseLandCover.infer", false]], "infer() (brails.inferers.user_inferer.user_inferer.userinferer method)": [[57, "brails.inferers.user_inferer.user_inferer.UserInferer.infer", false]], "infer_building_one_by_one() (brails.inferers.hazus_inferer_flood.hazus_inferer_flood.hazusinfererflood method)": [[28, "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood.infer_building_one_by_one", false]], "infer_building_one_by_one() (brails.inferers.hazus_inferer_wind.hazus_inferer_wind.hazusinfererwind method)": [[48, "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind.infer_building_one_by_one", false]], "inferenceengine (class in brails.inferers.inference_engine)": [[49, "brails.inferers.inference_engine.InferenceEngine", false]], "info() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[66, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.info", false]], "info() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[179, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.info", false]], "info() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[215, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.info", false]], "initialize() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.averagemeter method)": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.AverageMeter.initialize", false]], "initialize_parameters() (brails.processors.vlm_image_classifier.clip.model.clip method)": [[253, "brails.processors.vlm_image_classifier.clip.model.CLIP.initialize_parameters", false]], "input_filters (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.input_filters", false]], "input_filters (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.input_filters", false]], "input_filters (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.input_filters", false]], "inputvalidator (class in brails.utils.input_validator)": [[327, "brails.utils.input_validator.InputValidator", false]], "intersectionandunion() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.intersectionAndUnion", false]], "inventory (brails.scrapers.nbi_scraper.nbi_scraper.nbiscraper attribute)": [[301, "brails.scrapers.nbi_scraper.nbi_scraper.NBIScraper.inventory", false]], "inventory (brails.scrapers.nti_scraper.nti_scraper.ntiscraper attribute)": [[305, "brails.scrapers.nti_scraper.nti_scraper.NTIScraper.inventory", false]], "inventoryvalidator (class in brails.utils.inventory_validator)": [[328, "brails.utils.inventory_validator.InventoryValidator", false]], "invetory_to_df() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[20, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.invetory_to_df", false]], "is_box() (brails.utils.input_validator.inputvalidator static method)": [[327, "brails.utils.input_validator.InputValidator.is_box", false]], "is_box_near_crop_edge() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.amg.is_box_near_crop_edge", false]], "is_float() (brails.utils.input_validator.inputvalidator static method)": [[327, "brails.utils.input_validator.InputValidator.is_float", false]], "is_image() (brails.utils.input_validator.inputvalidator static method)": [[327, "brails.utils.input_validator.InputValidator.is_image", false]], "is_inventory() (brails.utils.inventory_validator.inventoryvalidator static method)": [[328, "brails.utils.inventory_validator.InventoryValidator.is_inventory", false]], "is_linestring() (brails.utils.input_validator.inputvalidator static method)": [[327, "brails.utils.input_validator.InputValidator.is_linestring", false]], "is_multilinestring() (brails.utils.input_validator.inputvalidator static method)": [[327, "brails.utils.input_validator.InputValidator.is_multilinestring", false]], "is_multipolygon() (brails.utils.input_validator.inputvalidator static method)": [[327, "brails.utils.input_validator.InputValidator.is_multipolygon", false]], "is_point() (brails.utils.input_validator.inputvalidator static method)": [[327, "brails.utils.input_validator.InputValidator.is_point", false]], "is_polygon() (brails.utils.input_validator.inputvalidator static method)": [[327, "brails.utils.input_validator.InputValidator.is_polygon", false]], "is_ready_to_infer() (brails.inferers.hazus_inferer_flood.hazus_inferer_flood.hazusinfererflood method)": [[28, "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood.is_ready_to_infer", false]], "is_ready_to_infer() (in module brails.inferers.hazus_inferer_wind.windmetavarrulesets)": [[41, "brails.inferers.hazus_inferer_wind.WindMetaVarRulesets.is_ready_to_infer", false]], "items() (brails.processors.vlm_segmenter.segment_anything.utils.amg.maskdata method)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.amg.MaskData.items", false]], "jigsaw_generator() (in module brails.processors.year_built_classifier.lib.utils)": [[281, "brails.processors.year_built_classifier.lib.utils.jigsaw_generator", false]], "join() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.join", false]], "join_inventories() (brails.utils.spatial_join_methods.base.spatialjoinmethods class method)": [[334, "brails.utils.spatial_join_methods.base.SpatialJoinMethods.join_inventories", false]], "kernel_size (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.kernel_size", false]], "kernel_size (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.kernel_size", false]], "kernel_size (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.kernel_size", false]], "knnimputer (class in brails.imputers.knn_imputer.knn_imputer)": [[20, "brails.imputers.knn_imputer.knn_imputer.KnnImputer", false]], "label (brails.filters.house_view.house_view.filterdetectionresult attribute)": [[16, "brails.filters.house_view.house_view.FilterDetectionResult.label", false]], "label (brails.processors.vlm_segmenter.grounded_sam_utils.detectionresult attribute)": [[257, "brails.processors.vlm_segmenter.grounded_sam_utils.DetectionResult.label", false]], "labels (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder attribute)": [[280, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.labels", false]], "layernorm (class in brails.processors.vlm_image_classifier.clip.model)": [[253, "brails.processors.vlm_image_classifier.clip.model.LayerNorm", false]], "layernorm2d (class in brails.processors.vlm_segmenter.segment_anything.modeling.common)": [[263, "brails.processors.vlm_segmenter.segment_anything.modeling.common.LayerNorm2d", false]], "length_unit (brails.scrapers.ms_footprint_scraper.ms_footprint_handler.ms_footprintscraper attribute)": [[299, "brails.scrapers.ms_footprint_scraper.ms_footprint_handler.MS_FootprintScraper.length_unit", false]], "length_unit (brails.scrapers.nbi_scraper.nbi_scraper.nbiscraper attribute)": [[301, "brails.scrapers.nbi_scraper.nbi_scraper.NBIScraper.length_unit", false]], "length_unit (brails.scrapers.nti_scraper.nti_scraper.ntiscraper attribute)": [[305, "brails.scrapers.nti_scraper.nti_scraper.NTIScraper.length_unit", false]], "length_unit (brails.scrapers.osm_footprint_scraper.osm_footprint_scraper.osm_footprintscraper attribute)": [[307, "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper.OSM_FootprintScraper.length_unit", false]], "length_unit (brails.scrapers.osm_power_network_scraper.osm_power_network_scraper.osm_powernetworkscraper attribute)": [[309, "brails.scrapers.osm_power_network_scraper.osm_power_network_scraper.OSM_PowerNetworkScraper.length_unit", false]], "length_unit (brails.scrapers.usa_footprint_scraper.usa_footprint_scraper.usa_footprintscraper attribute)": [[314, "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper.USA_FootprintScraper.length_unit", false]], "linearaverage (class in brails.processors.foundation_classifier.lib.linearaverage)": [[134, "brails.processors.foundation_classifier.lib.LinearAverage.LinearAverage", false]], "linearaverage (class in brails.processors.foundation_classifier.npid.npid_lib.linearaverage)": [[156, "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.LinearAverage", false]], "linearaverageop (class in brails.processors.foundation_classifier.lib.linearaverage)": [[134, "brails.processors.foundation_classifier.lib.LinearAverage.LinearAverageOp", false]], "linearaverageop (class in brails.processors.foundation_classifier.npid.npid_lib.linearaverage)": [[156, "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.LinearAverageOp", false]], "load() (in module brails.processors.vlm_image_classifier.clip.clip)": [[252, "brails.processors.vlm_image_classifier.clip.clip.load", false]], "load_masks (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[132, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.load_masks", false]], "load_masks (brails.processors.foundation_classifier.utils.datasets.foundation_type_testset attribute)": [[172, "brails.processors.foundation_classifier.utils.Datasets.Foundation_Type_Testset.load_masks", false]], "load_model() (in module brails.processors.year_built_classifier.lib.utils)": [[281, "brails.processors.year_built_classifier.lib.utils.load_model", false]], "load_predictions_from_json() (in module brails.processors.gpt_base_model.utils)": [[201, "brails.processors.gpt_base_model.utils.load_predictions_from_json", false]], "load_pretrained_weights() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.load_pretrained_weights", false]], "load_pretrained_weights() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.load_pretrained_weights", false]], "load_pretrained_weights() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.load_pretrained_weights", false]], "load_url() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils)": [[126, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils.load_url", false]], "loadanns() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[66, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.loadAnns", false]], "loadanns() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[179, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.loadAnns", false]], "loadanns() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[215, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.loadAnns", false]], "loadcats() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[66, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.loadCats", false]], "loadcats() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[179, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.loadCats", false]], "loadcats() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[215, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.loadCats", false]], "loader() (brails.processors.foundation_classifier.npid.npid_datasets.combinedmaskdataset method)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.CombinedMaskDataset.loader", false]], "loader() (brails.processors.foundation_classifier.npid.npid_datasets.folder.combinedmaskdataset method)": [[153, "brails.processors.foundation_classifier.npid.npid_datasets.folder.CombinedMaskDataset.loader", false]], "loader() (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder method)": [[280, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.loader", false]], "loadimgs() (brails.processors.chimney_detector.lib.efficientdet.coco.coco method)": [[66, "brails.processors.chimney_detector.lib.efficientdet.coco.COCO.loadImgs", false]], "loadimgs() (brails.processors.garage_detector.lib.efficientdet.coco.coco method)": [[179, "brails.processors.garage_detector.lib.efficientdet.coco.COCO.loadImgs", false]], "loadimgs() (brails.processors.nfloors_detector.lib.efficientdet.coco.coco method)": [[215, "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO.loadImgs", false]], "loss_history (brails.processors.image_segmenter.image_segmenter.imagesegmenter attribute)": [[206, "brails.processors.image_segmenter.image_segmenter.ImageSegmenter.loss_history", false]], "mark_volatile() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th)": [[119, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th.mark_volatile", false]], "mask (brails.filters.house_view.house_view.filterdetectionresult attribute)": [[16, "brails.filters.house_view.house_view.FilterDetectionResult.mask", false]], "mask (brails.processors.vlm_segmenter.grounded_sam_utils.detectionresult attribute)": [[257, "brails.processors.vlm_segmenter.grounded_sam_utils.DetectionResult.mask", false]], "mask_buildings (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[132, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.mask_buildings", false]], "mask_buildings (brails.processors.foundation_classifier.utils.datasets.foundation_type_testset attribute)": [[172, "brails.processors.foundation_classifier.utils.Datasets.Foundation_Type_Testset.mask_buildings", false]], "mask_names (brails.processors.image_segmenter.image_segmenter.datasetbinary attribute)": [[206, "brails.processors.image_segmenter.image_segmenter.DatasetBinary.mask_names", false]], "mask_names (brails.processors.image_segmenter.image_segmenter.datasetrgb attribute)": [[206, "brails.processors.image_segmenter.image_segmenter.DatasetRGB.mask_names", false]], "mask_paths (brails.processors.foundation_classifier.utils.datasets.foundation_type_testset attribute)": [[172, "brails.processors.foundation_classifier.utils.Datasets.Foundation_Type_Testset.mask_paths", false]], "mask_postprocessing() (brails.processors.vlm_segmenter.segment_anything.utils.onnx.samonnxmodel method)": [[273, "brails.processors.vlm_segmenter.segment_anything.utils.onnx.SamOnnxModel.mask_postprocessing", false]], "mask_threshold (brails.processors.vlm_segmenter.segment_anything.modeling.sam.sam attribute)": [[268, "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam.mask_threshold", false]], "mask_to_rle_pytorch() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.amg.mask_to_rle_pytorch", false]], "maskbuilding (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation)": [[130, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding", false]], "maskdata (class in brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.amg.MaskData", false]], "maskdecoder (class in brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder)": [[265, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.MaskDecoder", false]], "maskdecoderhq (class in brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq)": [[266, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.MaskDecoderHQ", false]], "maskfolderinstance (class in brails.processors.foundation_classifier.npid.npid_datasets)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.MaskFolderInstance", false]], "maskfolderinstance (class in brails.processors.foundation_classifier.npid.npid_datasets.folder)": [[153, "brails.processors.foundation_classifier.npid.npid_datasets.folder.MaskFolderInstance", false]], "match_points_to_polygons() (brails.utils.geo_tools.geotools static method)": [[325, "brails.utils.geo_tools.GeoTools.match_points_to_polygons", false]], "maxpool2dstaticsamepadding (class in brails.processors.chimney_detector.lib.efficientnet.utils_extra)": [[75, "brails.processors.chimney_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding", false]], "maxpool2dstaticsamepadding (class in brails.processors.garage_detector.lib.efficientnet.utils_extra)": [[188, "brails.processors.garage_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding", false]], "maxpool2dstaticsamepadding (class in brails.processors.nfloors_detector.lib.efficientnet.utils_extra)": [[224, "brails.processors.nfloors_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding", false]], "maxscalenumpy (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.MaxScaleNumpy", false]], "maxscalenumpy (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.MaxScaleNumpy", false]], "mbconvblock (class in brails.processors.chimney_detector.lib.efficientnet.model)": [[73, "brails.processors.chimney_detector.lib.efficientnet.model.MBConvBlock", false]], "mbconvblock (class in brails.processors.garage_detector.lib.efficientnet.model)": [[186, "brails.processors.garage_detector.lib.efficientnet.model.MBConvBlock", false]], "mbconvblock (class in brails.processors.nfloors_detector.lib.efficientnet.model)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.model.MBConvBlock", false]], "mecb_config() (in module brails.inferers.hazus_inferer_wind.windmecbrulesets)": [[34, "brails.inferers.hazus_inferer_wind.WindMECBRulesets.MECB_config", false]], "medianscalenumpy (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.MedianScaleNumpy", false]], "medianscalenumpy (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.MedianScaleNumpy", false]], "memoryefficientswish (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.MemoryEfficientSwish", false]], "memoryefficientswish (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.MemoryEfficientSwish", false]], "memoryefficientswish (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.MemoryEfficientSwish", false]], "merb_config() (in module brails.inferers.hazus_inferer_wind.windmerbrulesets)": [[35, "brails.inferers.hazus_inferer_wind.WindMERBRulesets.MERB_config", false]], "merge (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.Merge", false]], "merge (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.Merge", false]], "merge_two_json() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[20, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.merge_two_json", false]], "merge_two_json() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[23, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.merge_two_json", false]], "merge_two_json() (brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.hazusinfererearthquake method)": [[26, "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.HazusInfererEarthquake.merge_two_json", false]], "merge_two_json() (brails.inferers.hazus_inferer_flood.hazus_inferer_flood.hazusinfererflood method)": [[28, "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood.merge_two_json", false]], "merge_two_json() (brails.inferers.hazus_inferer_wind.hazus_inferer_wind.hazusinfererwind method)": [[48, "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind.merge_two_json", false]], "merge_two_json() (brails.inferers.user_inferer.user_inferer.userinferer method)": [[57, "brails.inferers.user_inferer.user_inferer.UserInferer.merge_two_json", false]], "mesh_polygon() (brails.utils.geo_tools.geotools static method)": [[325, "brails.utils.geo_tools.GeoTools.mesh_polygon", false]], "mh_config() (in module brails.inferers.hazus_inferer_wind.windmhrulesets)": [[36, "brails.inferers.hazus_inferer_wind.WindMHRulesets.MH_config", false]], "min_depth (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.min_depth", false]], "min_depth (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.min_depth", false]], "min_depth (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.min_depth", false]], "mlp (class in brails.processors.foundation_classifier.models.residual_attention_network)": [[144, "brails.processors.foundation_classifier.models.residual_attention_network.MLP", false]], "mlp (class in brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder)": [[265, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.MLP", false]], "mlp (class in brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq)": [[266, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.MLP", false]], "mlpblock (class in brails.processors.vlm_segmenter.segment_anything.modeling.common)": [[263, "brails.processors.vlm_segmenter.segment_anything.modeling.common.MLPBlock", false]], "mlri_config() (in module brails.inferers.hazus_inferer_wind.windmlrirulesets)": [[37, "brails.inferers.hazus_inferer_wind.WindMLRIRulesets.MLRI_config", false]], "mlrm_config() (in module brails.inferers.hazus_inferer_wind.windmlrmrulesets)": [[38, "brails.inferers.hazus_inferer_wind.WindMLRMRulesets.MLRM_config", false]], "mmuh_config() (in module brails.inferers.hazus_inferer_wind.windmmuhrulesets)": [[39, "brails.inferers.hazus_inferer_wind.WindMMUHRulesets.MMUH_config", false]], "mnistinstance (class in brails.processors.foundation_classifier.npid.npid_datasets)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.MNISTInstance", false]], "mnistinstance (class in brails.processors.foundation_classifier.npid.npid_datasets.mnist)": [[154, "brails.processors.foundation_classifier.npid.npid_datasets.mnist.MNISTInstance", false]], "mobilenetv2() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet)": [[122, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet.mobilenetv2", false]], "mobilenetv2dilated (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.MobileNetV2Dilated", false]], "model (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier attribute)": [[285, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.model", false]], "model_arch (brails.processors.image_segmenter.image_segmenter.imagesegmenter attribute)": [[206, "brails.processors.image_segmenter.image_segmenter.ImageSegmenter.model_arch", false]], "model_arch (brails.processors.vlm_image_classifier.clipclassifier.clipclassifier attribute)": [[250, "brails.processors.vlm_image_classifier.CLIPClassifier.CLIPClassifier.model_arch", false]], "model_dir (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[132, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.model_dir", false]], "model_file (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[132, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.model_file", false]], "model_file (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier attribute)": [[285, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.model_file", false]], "model_info() (in module brails.processors.year_built_classifier.lib.utils)": [[281, "brails.processors.year_built_classifier.lib.utils.model_info", false]], "model_path (brails.processors.facade_parser.facade_parser.facadeparser attribute)": [[89, "brails.processors.facade_parser.facade_parser.FacadeParser.model_path", false]], "modelbuilder (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ModelBuilder", false]], "modelutils (class in brails.utils.model_utils)": [[329, "brails.utils.model_utils.ModelUtils", false]], "modifiedresnet (class in brails.processors.vlm_image_classifier.clip.model)": [[253, "brails.processors.vlm_image_classifier.clip.model.ModifiedResNet", false]], "modulate_occ() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[23, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.modulate_occ", false]], "modulate_occ() (brails.inferers.simcenter_inferer.simcenter_inferer.simcenterinferer method)": [[53, "brails.inferers.simcenter_inferer.simCenter_inferer.SimCenterInferer.modulate_occ", false]], "modulate_weights() (brails.inferers.hazus_inferer.hazus_inferer.hazusinferer method)": [[23, "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer.modulate_weights", false]], "modulate_weights() (brails.inferers.simcenter_inferer.simcenter_inferer.simcenterinferer method)": [[53, "brails.inferers.simcenter_inferer.simCenter_inferer.SimCenterInferer.modulate_weights", false]], "module": [[10, "module-brails", false], [11, "module-brails.constants", false], [12, "module-brails.exceptions", false], [13, "module-brails.filters", false], [14, "module-brails.filters.filter", false], [15, "module-brails.filters.house_view", false], [16, "module-brails.filters.house_view.house_view", false], [17, "module-brails.imputers", false], [18, "module-brails.imputers.imputation", false], [19, "module-brails.imputers.knn_imputer", false], [20, "module-brails.imputers.knn_imputer.knn_imputer", false], [21, "module-brails.inferers", false], [22, "module-brails.inferers.hazus_inferer", false], [23, "module-brails.inferers.hazus_inferer.hazus_inferer", false], [24, "module-brails.inferers.hazus_inferer.hazus_rulesets", false], [25, "module-brails.inferers.hazus_inferer_earthquake", false], [26, "module-brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake", false], [27, "module-brails.inferers.hazus_inferer_flood", false], [28, "module-brails.inferers.hazus_inferer_flood.hazus_inferer_flood", false], [29, "module-brails.inferers.hazus_inferer_wind", false], [30, "module-brails.inferers.hazus_inferer_wind.BuildingClassRulesets", false], [31, "module-brails.inferers.hazus_inferer_wind.WindCECBRulesets", false], [32, "module-brails.inferers.hazus_inferer_wind.WindCERBRulesets", false], [33, "module-brails.inferers.hazus_inferer_wind.WindEFRulesets", false], [34, "module-brails.inferers.hazus_inferer_wind.WindMECBRulesets", false], [35, "module-brails.inferers.hazus_inferer_wind.WindMERBRulesets", false], [36, "module-brails.inferers.hazus_inferer_wind.WindMHRulesets", false], [37, "module-brails.inferers.hazus_inferer_wind.WindMLRIRulesets", false], [38, "module-brails.inferers.hazus_inferer_wind.WindMLRMRulesets", false], [39, "module-brails.inferers.hazus_inferer_wind.WindMMUHRulesets", false], [40, "module-brails.inferers.hazus_inferer_wind.WindMSFRulesets", false], [41, "module-brails.inferers.hazus_inferer_wind.WindMetaVarRulesets", false], [42, "module-brails.inferers.hazus_inferer_wind.WindSECBRulesets", false], [43, "module-brails.inferers.hazus_inferer_wind.WindSERBRulesets", false], [44, "module-brails.inferers.hazus_inferer_wind.WindSPMBRulesets", false], [45, "module-brails.inferers.hazus_inferer_wind.WindWMUHRulesets", false], [46, "module-brails.inferers.hazus_inferer_wind.WindWSFRulesets", false], [47, "module-brails.inferers.hazus_inferer_wind.auto_HU_NJ", false], [48, "module-brails.inferers.hazus_inferer_wind.hazus_inferer_wind", false], [49, "module-brails.inferers.inference_engine", false], [50, "module-brails.inferers.nlcd_inferer", false], [51, "module-brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover", false], [52, "module-brails.inferers.simcenter_inferer", false], [53, "module-brails.inferers.simcenter_inferer.simCenter_inferer", false], [54, "module-brails.inferers.user_inferer", false], [55, "module-brails.inferers.user_inferer.content_value_inferer", false], [56, "module-brails.inferers.user_inferer.floor_area_inferer", false], [57, "module-brails.inferers.user_inferer.user_inferer", false], [58, "module-brails.processors", false], [59, "module-brails.processors.building_material_llm", false], [60, "module-brails.processors.building_material_llm.building_material_llm", false], [61, "module-brails.processors.chimney_detector", false], [63, "module-brails.processors.chimney_detector.lib", false], [65, "module-brails.processors.chimney_detector.lib.efficientdet", false], [66, "module-brails.processors.chimney_detector.lib.efficientdet.coco", false], [67, "module-brails.processors.chimney_detector.lib.efficientdet.config", false], [71, "module-brails.processors.chimney_detector.lib.efficientdet.utils", false], [72, "module-brails.processors.chimney_detector.lib.efficientnet", false], [73, "module-brails.processors.chimney_detector.lib.efficientnet.model", false], [74, "module-brails.processors.chimney_detector.lib.efficientnet.utils", false], [75, "module-brails.processors.chimney_detector.lib.efficientnet.utils_extra", false], [78, "module-brails.processors.chimney_detector.lib.utils", false], [79, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm", false], [80, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm", false], [81, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", false], [82, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm", false], [83, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate", false], [84, "module-brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest", false], [86, "module-brails.processors.cons_type_classifier", false], [87, "module-brails.processors.cons_type_classifier.ConstructionTypeClassifier", false], [88, "module-brails.processors.facade_parser", false], [89, "module-brails.processors.facade_parser.facade_parser", false], [90, "module-brails.processors.ffh_predictor_klepac", false], [91, "module-brails.processors.ffh_predictor_klepac.ffh_predictor_klepac", false], [92, "module-brails.processors.foundation_classifier", false], [93, "module-brails.processors.foundation_classifier.attention_utils", false], [94, "module-brails.processors.foundation_classifier.attention_utils.radam", false], [95, "module-brails.processors.foundation_classifier.attention_utils.utils", false], [96, "module-brails.processors.foundation_classifier.csail_segmentation_tool", false], [97, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg", false], [98, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config", false], [99, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults", false], [100, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data", false], [101, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset", false], [104, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib", false], [105, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn", false], [106, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules", false], [107, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm", false], [108, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm", false], [109, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate", false], [110, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest", false], [111, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel", false], [112, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel", false], [113, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils", false], [116, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset", false], [118, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler", false], [119, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th", false], [120, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models", false], [121, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet", false], [122, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet", false], [123, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models", false], [124, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet", false], [125, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext", false], [126, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils", false], [129, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils", false], [130, "module-brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation", false], [132, "module-brails.processors.foundation_classifier.foundation_classifier", false], [133, "module-brails.processors.foundation_classifier.lib", false], [134, "module-brails.processors.foundation_classifier.lib.LinearAverage", false], [135, "module-brails.processors.foundation_classifier.lib.NCEAverage", false], [136, "module-brails.processors.foundation_classifier.lib.NCECriterion", false], [137, "module-brails.processors.foundation_classifier.lib.alias_multinomial", false], [138, "module-brails.processors.foundation_classifier.lib.custom_transforms", false], [139, "module-brails.processors.foundation_classifier.lib.normalize", false], [140, "module-brails.processors.foundation_classifier.lib.utils", false], [141, "module-brails.processors.foundation_classifier.models", false], [142, "module-brails.processors.foundation_classifier.models.attention_module", false], [143, "module-brails.processors.foundation_classifier.models.basic_layer", false], [144, "module-brails.processors.foundation_classifier.models.residual_attention_network", false], [145, "module-brails.processors.foundation_classifier.models.resnet_applied", false], [146, "module-brails.processors.foundation_classifier.models.sknet", false], [147, "module-brails.processors.foundation_classifier.npid", false], [151, "module-brails.processors.foundation_classifier.npid.npid_datasets", false], [152, "module-brails.processors.foundation_classifier.npid.npid_datasets.cifar", false], [153, "module-brails.processors.foundation_classifier.npid.npid_datasets.folder", false], [154, "module-brails.processors.foundation_classifier.npid.npid_datasets.mnist", false], [155, "module-brails.processors.foundation_classifier.npid.npid_lib", false], [156, "module-brails.processors.foundation_classifier.npid.npid_lib.LinearAverage", false], [157, "module-brails.processors.foundation_classifier.npid.npid_lib.NCEAverage", false], [158, "module-brails.processors.foundation_classifier.npid.npid_lib.NCECriterion", false], [159, "module-brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial", false], [160, "module-brails.processors.foundation_classifier.npid.npid_lib.custom_transforms", false], [161, "module-brails.processors.foundation_classifier.npid.npid_lib.normalize", false], [162, "module-brails.processors.foundation_classifier.npid.npid_lib.utils", false], [166, "module-brails.processors.foundation_classifier.npid.npid_toolbox", false], [171, "module-brails.processors.foundation_classifier.utils", false], [172, "module-brails.processors.foundation_classifier.utils.Datasets", false], [174, "module-brails.processors.garage_detector", false], [176, "module-brails.processors.garage_detector.lib", false], [178, "module-brails.processors.garage_detector.lib.efficientdet", false], [179, "module-brails.processors.garage_detector.lib.efficientdet.coco", false], [180, "module-brails.processors.garage_detector.lib.efficientdet.config", false], [184, "module-brails.processors.garage_detector.lib.efficientdet.utils", false], [185, "module-brails.processors.garage_detector.lib.efficientnet", false], [186, "module-brails.processors.garage_detector.lib.efficientnet.model", false], [187, "module-brails.processors.garage_detector.lib.efficientnet.utils", false], [188, "module-brails.processors.garage_detector.lib.efficientnet.utils_extra", false], [191, "module-brails.processors.garage_detector.lib.utils", false], [192, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm", false], [193, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm", false], [194, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", false], [195, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.comm", false], [196, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate", false], [197, "module-brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest", false], [199, "module-brails.processors.gpt_base_model", false], [200, "module-brails.processors.gpt_base_model.GPT", false], [201, "module-brails.processors.gpt_base_model.utils", false], [202, "module-brails.processors.image_classifier", false], [203, "module-brails.processors.image_classifier.image_classifier", false], [204, "module-brails.processors.image_processor", false], [205, "module-brails.processors.image_segmenter", false], [206, "module-brails.processors.image_segmenter.image_segmenter", false], [207, "module-brails.processors.nFloor_gpt", false], [208, "module-brails.processors.nFloor_gpt.nFloor_gpt", false], [209, "module-brails.processors.nFloor_vlm", false], [210, "module-brails.processors.nFloor_vlm.nFloor_vlm", false], [211, "module-brails.processors.nfloors_detector", false], [212, "module-brails.processors.nfloors_detector.lib", false], [214, "module-brails.processors.nfloors_detector.lib.efficientdet", false], [215, "module-brails.processors.nfloors_detector.lib.efficientdet.coco", false], [216, "module-brails.processors.nfloors_detector.lib.efficientdet.config", false], [220, "module-brails.processors.nfloors_detector.lib.efficientdet.utils", false], [221, "module-brails.processors.nfloors_detector.lib.efficientnet", false], [222, "module-brails.processors.nfloors_detector.lib.efficientnet.model", false], [223, "module-brails.processors.nfloors_detector.lib.efficientnet.utils", false], [224, "module-brails.processors.nfloors_detector.lib.efficientnet.utils_extra", false], [227, "module-brails.processors.nfloors_detector.lib.utils", false], [228, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm", false], [229, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm", false], [230, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl", false], [231, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm", false], [232, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate", false], [233, "module-brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest", false], [236, "module-brails.processors.occupancy_classifier", false], [237, "module-brails.processors.occupancy_classifier.occupancy_classifier", false], [238, "module-brails.processors.other_idea", false], [239, "module-brails.processors.other_idea.arial_processing", false], [240, "module-brails.processors.other_idea.street_processor", false], [241, "module-brails.processors.roof_shape_classifier", false], [242, "module-brails.processors.roof_shape_classifier.roof_shape_classifier", false], [243, "module-brails.processors.roof_shape_gpt", false], [244, "module-brails.processors.roof_shape_gpt.roof_shape_gpt", false], [245, "module-brails.processors.roof_shape_vlm", false], [246, "module-brails.processors.roof_shape_vlm.roof_shape_vlm", false], [247, "module-brails.processors.street_level_damage_detection", false], [248, "module-brails.processors.street_level_damage_detection.street_level_damage_detection", false], [249, "module-brails.processors.vlm_image_classifier", false], [250, "module-brails.processors.vlm_image_classifier.CLIPClassifier", false], [251, "module-brails.processors.vlm_image_classifier.clip", false], [252, "module-brails.processors.vlm_image_classifier.clip.clip", false], [253, "module-brails.processors.vlm_image_classifier.clip.model", false], [254, "module-brails.processors.vlm_image_classifier.clip.simple_tokenizer", false], [255, "module-brails.processors.vlm_image_classifier.clip.utils", false], [256, "module-brails.processors.vlm_segmenter", false], [257, "module-brails.processors.vlm_segmenter.grounded_sam_utils", false], [258, "module-brails.processors.vlm_segmenter.segment_anything", false], [259, "module-brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator", false], [260, "module-brails.processors.vlm_segmenter.segment_anything.build_sam", false], [261, "module-brails.processors.vlm_segmenter.segment_anything.build_sam_hq", false], [262, "module-brails.processors.vlm_segmenter.segment_anything.modeling", false], [263, "module-brails.processors.vlm_segmenter.segment_anything.modeling.common", false], [264, "module-brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder", false], [265, "module-brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder", false], [266, "module-brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq", false], [267, "module-brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder", false], [268, "module-brails.processors.vlm_segmenter.segment_anything.modeling.sam", false], [269, "module-brails.processors.vlm_segmenter.segment_anything.modeling.transformer", false], [270, "module-brails.processors.vlm_segmenter.segment_anything.predictor", false], [271, "module-brails.processors.vlm_segmenter.segment_anything.utils", false], [272, "module-brails.processors.vlm_segmenter.segment_anything.utils.amg", false], [273, "module-brails.processors.vlm_segmenter.segment_anything.utils.onnx", false], [274, "module-brails.processors.vlm_segmenter.segment_anything.utils.transforms", false], [275, "module-brails.processors.vlm_segmenter.vlm_segmenter", false], [276, "module-brails.processors.year_built_classifier", false], [277, "module-brails.processors.year_built_classifier.Resnet", false], [279, "module-brails.processors.year_built_classifier.lib", false], [280, "module-brails.processors.year_built_classifier.lib.datasets", false], [281, "module-brails.processors.year_built_classifier.lib.utils", false], [282, "module-brails.processors.year_built_classifier.model", false], [284, "module-brails.processors.year_built_classifier.weights", false], [285, "module-brails.processors.year_built_classifier.year_built_classifier", false], [286, "module-brails.scrapers", false], [287, "module-brails.scrapers.asce_hazard_data_scraper", false], [289, "module-brails.scrapers.asset_data_augmenter", false], [290, "module-brails.scrapers.fema_firm_scraper", false], [291, "module-brails.scrapers.fema_firm_scraper.fema_firm_scraper", false], [292, "module-brails.scrapers.footprint_scraper", false], [293, "module-brails.scrapers.google_satellite", false], [294, "module-brails.scrapers.google_satellite.google_satellite", false], [295, "module-brails.scrapers.google_streetview", false], [296, "module-brails.scrapers.google_streetview.google_streetview", false], [297, "module-brails.scrapers.image_scraper", false], [298, "module-brails.scrapers.ms_footprint_scraper", false], [299, "module-brails.scrapers.ms_footprint_scraper.ms_footprint_handler", false], [300, "module-brails.scrapers.nbi_scraper", false], [301, "module-brails.scrapers.nbi_scraper.nbi_scraper", false], [302, "module-brails.scrapers.nsi_parser", false], [303, "module-brails.scrapers.nsi_parser.nsi_parser", false], [304, "module-brails.scrapers.nti_scraper", false], [305, "module-brails.scrapers.nti_scraper.nti_scraper", false], [306, "module-brails.scrapers.osm_footprint_scraper", false], [307, "module-brails.scrapers.osm_footprint_scraper.osm_footprint_scraper", false], [308, "module-brails.scrapers.osm_power_network_scraper", false], [309, "module-brails.scrapers.osm_power_network_scraper.osm_power_network_scraper", false], [310, "module-brails.scrapers.overture_maps_scraper", false], [311, "module-brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper", false], [312, "module-brails.scrapers.overture_maps_scraper.overture_maps_scraper", false], [313, "module-brails.scrapers.usa_footprint_scraper", false], [314, "module-brails.scrapers.usa_footprint_scraper.usa_footprint_scraper", false], [315, "module-brails.scrapers.user_footprints", false], [316, "module-brails.scrapers.usgs_data_scrapers", false], [317, "module-brails.scrapers.usgs_data_scrapers.nlcd_scraper", false], [318, "module-brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper", false], [319, "module-brails.types", false], [320, "module-brails.types.asset_inventory", false], [321, "module-brails.types.image_set", false], [322, "module-brails.types.region_boundary", false], [323, "module-brails.utils", false], [324, "module-brails.utils.arcgisapi_service_helper", false], [325, "module-brails.utils.geo_tools", false], [326, "module-brails.utils.importer", false], [327, "module-brails.utils.input_validator", false], [328, "module-brails.utils.inventory_validator", false], [329, "module-brails.utils.model_utils", false], [330, "module-brails.utils.plot_tools", false], [331, "module-brails.utils.rapid_utils", false], [332, "module-brails.utils.segmentation_utils", false], [333, "module-brails.utils.spatial_join_methods", false], [334, "module-brails.utils.spatial_join_methods.base", false], [335, "module-brails.utils.spatial_join_methods.distance_based_point_matcher", false], [336, "module-brails.utils.spatial_join_methods.get_points_in_polygons", false], [337, "module-brails.utils.spatial_join_methods.get_points_near_polygons", false], [338, "module-brails.utils.unit_converter", false]], "ms_footprintscraper (class in brails.scrapers.ms_footprint_scraper.ms_footprint_handler)": [[299, "brails.scrapers.ms_footprint_scraper.ms_footprint_handler.MS_FootprintScraper", false]], "msf_config() (in module brails.inferers.hazus_inferer_wind.windmsfrulesets)": [[40, "brails.inferers.hazus_inferer_wind.WindMSFRulesets.MSF_config", false]], "mutualexclude (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.MutualExclude", false]], "mutualexclude (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.MutualExclude", false]], "n_pw (brails.imputers.knn_imputer.knn_imputer.knnimputer attribute)": [[20, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.n_pw", false]], "n_pw (brails.inferers.user_inferer.user_inferer.userinferer attribute)": [[57, "brails.inferers.user_inferer.user_inferer.UserInferer.n_pw", false]], "name (brails.scrapers.footprint_scraper.footprintscraper attribute)": [[292, "brails.scrapers.footprint_scraper.FootprintScraper.name", false]], "nbiscraper (class in brails.scrapers.nbi_scraper.nbi_scraper)": [[301, "brails.scrapers.nbi_scraper.nbi_scraper.NBIScraper", false]], "nceaverage (class in brails.processors.foundation_classifier.lib.nceaverage)": [[135, "brails.processors.foundation_classifier.lib.NCEAverage.NCEAverage", false]], "nceaverage (class in brails.processors.foundation_classifier.npid.npid_lib.nceaverage)": [[157, "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.NCEAverage", false]], "ncecriterion (class in brails.processors.foundation_classifier.lib.ncecriterion)": [[136, "brails.processors.foundation_classifier.lib.NCECriterion.NCECriterion", false]], "ncecriterion (class in brails.processors.foundation_classifier.npid.npid_lib.ncecriterion)": [[158, "brails.processors.foundation_classifier.npid.npid_lib.NCECriterion.NCECriterion", false]], "ncefunction (class in brails.processors.foundation_classifier.lib.nceaverage)": [[135, "brails.processors.foundation_classifier.lib.NCEAverage.NCEFunction", false]], "ncefunction (class in brails.processors.foundation_classifier.npid.npid_lib.nceaverage)": [[157, "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.NCEFunction", false]], "nepochs (brails.processors.image_segmenter.image_segmenter.imagesegmenter attribute)": [[206, "brails.processors.image_segmenter.image_segmenter.ImageSegmenter.nepochs", false]], "nfloorgpt (class in brails.processors.nfloor_gpt.nfloor_gpt)": [[208, "brails.processors.nFloor_gpt.nFloor_gpt.NFloorGPT", false]], "nfloorvlm (class in brails.processors.nfloor_vlm.nfloor_vlm)": [[210, "brails.processors.nFloor_vlm.nFloor_vlm.NFloorVLM", false]], "nlcdscraper (class in brails.scrapers.usgs_data_scrapers.nlcd_scraper)": [[317, "brails.scrapers.usgs_data_scrapers.nlcd_scraper.NLCDScraper", false]], "nlcdtocoarselandcover (class in brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover)": [[51, "brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover.NLCDToCoarseLandCover", false]], "normalize (class in brails.processors.foundation_classifier.lib.normalize)": [[139, "brails.processors.foundation_classifier.lib.normalize.Normalize", false]], "normalize (class in brails.processors.foundation_classifier.npid.npid_lib.normalize)": [[161, "brails.processors.foundation_classifier.npid.npid_lib.normalize.Normalize", false]], "normalize_bbox_order() (brails.scrapers.overture_maps_scraper.overture_maps_scraper.overturemapsscraper static method)": [[312, "brails.scrapers.overture_maps_scraper.overture_maps_scraper.OvertureMapsScraper.normalize_bbox_order", false]], "normalize_unit() (brails.utils.unit_converter.unitconverter static method)": [[338, "brails.utils.unit_converter.UnitConverter.normalize_unit", false]], "normalizenumpy (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.NormalizeNumpy", false]], "normalizenumpy (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.NormalizeNumpy", false]], "notfounderror": [[12, "brails.exceptions.NotFoundError", false]], "notsupportedcliexception": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.NotSupportedCliException", false]], "nr_slaves (brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.syncmaster property)": [[82, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SyncMaster.nr_slaves", false]], "nr_slaves (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.syncmaster property)": [[108, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SyncMaster.nr_slaves", false]], "nr_slaves (brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.syncmaster property)": [[195, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SyncMaster.nr_slaves", false]], "nr_slaves (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.syncmaster property)": [[231, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SyncMaster.nr_slaves", false]], "nsi2brailsmap (brails.scrapers.nsi_parser.nsi_parser.nsi_parser attribute)": [[303, "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser.nsi2brailsmap", false]], "nsi_parser (class in brails.scrapers.nsi_parser.nsi_parser)": [[303, "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser", false]], "ntiscraper (class in brails.scrapers.nti_scraper.nti_scraper)": [[305, "brails.scrapers.nti_scraper.nti_scraper.NTIScraper", false]], "num_classes (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.num_classes", false]], "num_classes (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.num_classes", false]], "num_classes (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.num_classes", false]], "num_repeat (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.num_repeat", false]], "num_repeat (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.num_repeat", false]], "num_repeat (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.num_repeat", false]], "occupancyclassifier (class in brails.processors.occupancy_classifier.occupancy_classifier)": [[237, "brails.processors.occupancy_classifier.occupancy_classifier.OccupancyClassifier", false]], "osm_footprintscraper (class in brails.scrapers.osm_footprint_scraper.osm_footprint_scraper)": [[307, "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper.OSM_FootprintScraper", false]], "osm_powernetworkscraper (class in brails.scrapers.osm_power_network_scraper.osm_power_network_scraper)": [[309, "brails.scrapers.osm_power_network_scraper.osm_power_network_scraper.OSM_PowerNetworkScraper", false]], "output_filters (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.output_filters", false]], "output_filters (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.output_filters", false]], "output_filters (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.output_filters", false]], "overturemapsfootprintscraper (class in brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper)": [[311, "brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper.OvertureMapsFootprintScraper", false]], "overturemapsscraper (class in brails.scrapers.overture_maps_scraper.overture_maps_scraper)": [[312, "brails.scrapers.overture_maps_scraper.overture_maps_scraper.OvertureMapsScraper", false]], "parse_devices() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.parse_devices", false]], "parse_input_list() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.basedataset method)": [[101, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.BaseDataset.parse_input_list", false]], "parse_units() (brails.utils.unit_converter.unitconverter static method)": [[338, "brails.utils.unit_converter.UnitConverter.parse_units", false]], "patch_replication_callback() (in module brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate)": [[83, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.patch_replication_callback", false]], "patch_replication_callback() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate)": [[109, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.patch_replication_callback", false]], "patch_replication_callback() (in module brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate)": [[196, "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.patch_replication_callback", false]], "patch_replication_callback() (in module brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate)": [[232, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.patch_replication_callback", false]], "patch_sync_batchnorm() (in module brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm)": [[80, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm.patch_sync_batchnorm", false]], "patch_sync_batchnorm() (in module brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm)": [[193, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm.patch_sync_batchnorm", false]], "patch_sync_batchnorm() (in module brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm)": [[229, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm.patch_sync_batchnorm", false]], "patchembed (class in brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[264, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.PatchEmbed", false]], "pixel_acc() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.segmentationmodulebase method)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.SegmentationModuleBase.pixel_acc", false]], "plainradam (class in brails.processors.foundation_classifier.attention_utils.radam)": [[94, "brails.processors.foundation_classifier.attention_utils.radam.PlainRAdam", false]], "plot_images() (brails.utils.plot_tools.plottools static method)": [[330, "brails.utils.plot_tools.PlotTools.plot_images", false]], "plot_polygon_cells() (brails.utils.geo_tools.geotools static method)": [[325, "brails.utils.geo_tools.GeoTools.plot_polygon_cells", false]], "plottools (class in brails.utils.plot_tools)": [[330, "brails.utils.plot_tools.PlotTools", false]], "pmg (class in brails.processors.year_built_classifier.model)": [[282, "brails.processors.year_built_classifier.model.PMG", false]], "poisson_downsampling() (in module brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.poisson_downsampling", false]], "poisson_downsampling() (in module brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.poisson_downsampling", false]], "poissonsubsampling (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.PoissonSubsampling", false]], "poissonsubsampling (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.PoissonSubsampling", false]], "populate_feature() (brails.scrapers.asset_data_augmenter.assetdataaugmenter method)": [[289, "brails.scrapers.asset_data_augmenter.AssetDataAugmenter.populate_feature", false]], "populate_feature() (brails.scrapers.fema_firm_scraper.fema_firm_scraper.femafirmscraper method)": [[291, "brails.scrapers.fema_firm_scraper.fema_firm_scraper.FEMAFIRMScraper.populate_feature", false]], "populate_feature() (brails.scrapers.usgs_data_scrapers.nlcd_scraper.nlcdscraper method)": [[317, "brails.scrapers.usgs_data_scrapers.nlcd_scraper.NLCDScraper.populate_feature", false]], "populate_feature() (brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.usgselevationscraper method)": [[318, "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.USGSElevationScraper.populate_feature", false]], "positionembeddingrandom (class in brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder)": [[267, "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PositionEmbeddingRandom", false]], "postprocess_masks() (brails.processors.vlm_segmenter.segment_anything.modeling.sam.sam method)": [[268, "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam.postprocess_masks", false]], "postprocess_small_regions() (brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator.samautomaticmaskgenerator static method)": [[259, "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator.SamAutomaticMaskGenerator.postprocess_small_regions", false]], "ppm (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.PPM", false]], "ppmdeepsup (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.PPMDeepsup", false]], "pred_idx_to_labels() (in module brails.processors.vlm_image_classifier.clip.utils)": [[255, "brails.processors.vlm_image_classifier.clip.utils.pred_idx_to_labels", false]], "predict() (brails.processors.building_material_llm.building_material_llm.buildingmaterialllm method)": [[60, "brails.processors.building_material_llm.building_material_llm.BuildingMaterialLLM.predict", false]], "predict() (brails.processors.cons_type_classifier.constructiontypeclassifier.constypeclassifier method)": [[87, "brails.processors.cons_type_classifier.ConstructionTypeClassifier.ConsTypeClassifier.predict", false]], "predict() (brails.processors.facade_parser.facade_parser.facadeparser method)": [[89, "brails.processors.facade_parser.facade_parser.FacadeParser.predict", false]], "predict() (brails.processors.ffh_predictor_klepac.ffh_predictor_klepac.ffhpredictorklepac method)": [[91, "brails.processors.ffh_predictor_klepac.ffh_predictor_klepac.FFHPredictorKlepac.predict", false]], "predict() (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier method)": [[132, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.predict", false]], "predict() (brails.processors.gpt_base_model.gpt.gpt method)": [[200, "brails.processors.gpt_base_model.GPT.GPT.predict", false]], "predict() (brails.processors.image_classifier.image_classifier.imageclassifier method)": [[203, "brails.processors.image_classifier.image_classifier.ImageClassifier.predict", false]], "predict() (brails.processors.image_processor.imageprocessor method)": [[204, "brails.processors.image_processor.ImageProcessor.predict", false], [204, "id0", false]], "predict() (brails.processors.image_segmenter.image_segmenter.imagesegmenter method)": [[206, "brails.processors.image_segmenter.image_segmenter.ImageSegmenter.predict", false]], "predict() (brails.processors.nfloor_gpt.nfloor_gpt.nfloorgpt method)": [[208, "brails.processors.nFloor_gpt.nFloor_gpt.NFloorGPT.predict", false]], "predict() (brails.processors.occupancy_classifier.occupancy_classifier.occupancyclassifier method)": [[237, "brails.processors.occupancy_classifier.occupancy_classifier.OccupancyClassifier.predict", false], [237, "id0", false]], "predict() (brails.processors.other_idea.arial_processing.arialprocessing method)": [[239, "brails.processors.other_idea.arial_processing.ArialProcessing.predict", false]], "predict() (brails.processors.other_idea.street_processor.streetprocessor method)": [[240, "brails.processors.other_idea.street_processor.StreetProcessor.predict", false]], "predict() (brails.processors.roof_shape_classifier.roof_shape_classifier.roofshapeclassifier method)": [[242, "brails.processors.roof_shape_classifier.roof_shape_classifier.RoofShapeClassifier.predict", false]], "predict() (brails.processors.roof_shape_gpt.roof_shape_gpt.roofshapegpt method)": [[244, "brails.processors.roof_shape_gpt.roof_shape_gpt.RoofShapeGPT.predict", false]], "predict() (brails.processors.street_level_damage_detection.street_level_damage_detection.damagedetection_streetlevel method)": [[248, "brails.processors.street_level_damage_detection.street_level_damage_detection.DamageDetection_StreetLevel.predict", false]], "predict() (brails.processors.vlm_image_classifier.clipclassifier.clipclassifier method)": [[250, "brails.processors.vlm_image_classifier.CLIPClassifier.CLIPClassifier.predict", false]], "predict() (brails.processors.vlm_segmenter.segment_anything.predictor.sampredictor method)": [[270, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor.predict", false]], "predict() (brails.processors.vlm_segmenter.vlm_segmenter.vlmsegmenter method)": [[275, "brails.processors.vlm_segmenter.vlm_segmenter.VLMSegmenter.predict", false]], "predict() (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier method)": [[285, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.predict", false]], "predict_masks() (brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.maskdecoder method)": [[265, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.MaskDecoder.predict_masks", false]], "predict_masks() (brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.maskdecoderhq method)": [[266, "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.MaskDecoderHQ.predict_masks", false]], "predict_torch() (brails.processors.vlm_segmenter.segment_anything.predictor.sampredictor method)": [[270, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor.predict_torch", false]], "predict_wrapper() (in module brails.processors.vlm_image_classifier.clip.utils)": [[255, "brails.processors.vlm_image_classifier.clip.utils.predict_wrapper", false]], "predictions (brails.processors.facade_parser.facade_parser.facadeparser attribute)": [[89, "brails.processors.facade_parser.facade_parser.FacadeParser.predictions", false]], "preprocess() (brails.processors.vlm_segmenter.segment_anything.modeling.sam.sam method)": [[268, "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam.preprocess", false]], "preprocess_batch_img() (in module brails.processors.vlm_image_classifier.clip.utils)": [[255, "brails.processors.vlm_image_classifier.clip.utils.preprocess_batch_img", false]], "print_info() (brails.types.asset_inventory.asset method)": [[320, "brails.types.asset_inventory.Asset.print_info", false]], "print_info() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.print_info", false]], "print_info() (brails.types.image_set.image method)": [[321, "brails.types.image_set.Image.print_info", false]], "print_info() (brails.types.image_set.imageset method)": [[321, "brails.types.image_set.ImageSet.print_info", false]], "print_res (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[132, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.print_res", false]], "print_res (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier attribute)": [[285, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.print_res", false]], "process_range() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.process_range", false]], "prompt_and_save_caption() (in module brails.processors.gpt_base_model.utils)": [[201, "brails.processors.gpt_base_model.utils.prompt_and_save_caption", false]], "promptencoder (class in brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder)": [[267, "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PromptEncoder", false]], "put() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.futureresult method)": [[82, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.FutureResult.put", false]], "put() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.futureresult method)": [[108, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.FutureResult.put", false]], "put() (brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.futureresult method)": [[195, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.FutureResult.put", false]], "put() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.futureresult method)": [[231, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.FutureResult.put", false]], "quickgelu (class in brails.processors.vlm_image_classifier.clip.model)": [[253, "brails.processors.vlm_image_classifier.clip.model.QuickGELU", false]], "radam (class in brails.processors.foundation_classifier.attention_utils.radam)": [[94, "brails.processors.foundation_classifier.attention_utils.radam.RAdam", false]], "random_num_generator() (in module brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.random_num_generator", false]], "random_num_generator() (in module brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.random_num_generator", false]], "random_split() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset)": [[116, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.random_split", false]], "randomcropnumpy (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.RandomCropNumpy", false]], "randomcropnumpy (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.RandomCropNumpy", false]], "randomgaussianblurring (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.RandomGaussianBlurring", false]], "randomgaussianblurring (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.RandomGaussianBlurring", false]], "randomrotate (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.RandomRotate", false]], "randomrotate (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.RandomRotate", false]], "randomsampler (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler.RandomSampler", false]], "rapidutils (class in brails.utils.rapid_utils)": [[331, "brails.utils.rapid_utils.RAPIDUtils", false]], "read_from_csv() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.read_from_csv", false]], "regionboundary (class in brails.types.region_boundary)": [[322, "brails.types.region_boundary.RegionBoundary", false]], "regioninput (class in brails.types.region_boundary)": [[322, "brails.types.region_boundary.RegionInput", false]], "register_slave() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.syncmaster method)": [[82, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SyncMaster.register_slave", false]], "register_slave() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.syncmaster method)": [[108, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SyncMaster.register_slave", false]], "register_slave() (brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.syncmaster method)": [[195, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SyncMaster.register_slave", false]], "register_slave() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.syncmaster method)": [[231, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SyncMaster.register_slave", false]], "remove_asset() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.remove_asset", false]], "remove_features() (brails.types.asset_inventory.asset method)": [[320, "brails.types.asset_inventory.Asset.remove_features", false]], "remove_features() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.remove_features", false]], "remove_small_regions() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.amg.remove_small_regions", false]], "replicate() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.dataparallelwithcallback method)": [[83, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback.replicate", false]], "replicate() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.dataparallelwithcallback method)": [[109, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.DataParallelWithCallback.replicate", false]], "replicate() (brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.dataparallelwithcallback method)": [[196, "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback.replicate", false]], "replicate() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.dataparallelwithcallback method)": [[232, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback.replicate", false]], "reset() (brails.processors.foundation_classifier.lib.utils.averagemeter method)": [[140, "brails.processors.foundation_classifier.lib.utils.AverageMeter.reset", false]], "reset() (brails.processors.foundation_classifier.npid.npid_lib.utils.averagemeter method)": [[162, "brails.processors.foundation_classifier.npid.npid_lib.utils.AverageMeter.reset", false]], "reset_image() (brails.processors.vlm_segmenter.segment_anything.predictor.sampredictor method)": [[270, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor.reset_image", false]], "reset_parameters() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[81, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_parameters", false]], "reset_parameters() (brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[194, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_parameters", false]], "reset_parameters() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[230, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_parameters", false]], "reset_running_stats() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[81, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_running_stats", false]], "reset_running_stats() (brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[194, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_running_stats", false]], "reset_running_stats() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.batchnorm2dreimpl method)": [[230, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl.reset_running_stats", false]], "residualattentionblock (class in brails.processors.vlm_image_classifier.clip.model)": [[253, "brails.processors.vlm_image_classifier.clip.model.ResidualAttentionBlock", false]], "residualattentionmodel_92 (class in brails.processors.foundation_classifier.models.residual_attention_network)": [[144, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92", false]], "residualattentionmodel_92_32input (class in brails.processors.foundation_classifier.models.residual_attention_network)": [[144, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_32input", false]], "residualattentionmodel_92_32input_update (class in brails.processors.foundation_classifier.models.residual_attention_network)": [[144, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_32input_update", false]], "residualattentionmodel_92_small (class in brails.processors.foundation_classifier.models.residual_attention_network)": [[144, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_Small", false]], "residualattentionmodel_92_small_1d (class in brails.processors.foundation_classifier.models.residual_attention_network)": [[144, "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_Small_1D", false]], "residualblock (class in brails.processors.foundation_classifier.models.basic_layer)": [[143, "brails.processors.foundation_classifier.models.basic_layer.ResidualBlock", false]], "residualblock1d (class in brails.processors.foundation_classifier.models.basic_layer)": [[143, "brails.processors.foundation_classifier.models.basic_layer.ResidualBlock1D", false]], "resize_longest_image_size() (brails.processors.vlm_segmenter.segment_anything.utils.onnx.samonnxmodel static method)": [[273, "brails.processors.vlm_segmenter.segment_anything.utils.onnx.SamOnnxModel.resize_longest_image_size", false]], "resizelongestside (class in brails.processors.vlm_segmenter.segment_anything.utils.transforms)": [[274, "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide", false]], "resnet (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.Resnet", false]], "resnet (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet)": [[124, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.ResNet", false]], "resnet (class in brails.processors.foundation_classifier.models.resnet_applied)": [[145, "brails.processors.foundation_classifier.models.resnet_applied.ResNet", false]], "resnet (class in brails.processors.year_built_classifier.resnet)": [[277, "brails.processors.year_built_classifier.Resnet.ResNet", false]], "resnet101() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet)": [[124, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.resnet101", false]], "resnet101() (in module brails.processors.foundation_classifier.models.resnet_applied)": [[145, "brails.processors.foundation_classifier.models.resnet_applied.resnet101", false]], "resnet101() (in module brails.processors.year_built_classifier.resnet)": [[277, "brails.processors.year_built_classifier.Resnet.resnet101", false]], "resnet152() (in module brails.processors.foundation_classifier.models.resnet_applied)": [[145, "brails.processors.foundation_classifier.models.resnet_applied.resnet152", false]], "resnet152() (in module brails.processors.year_built_classifier.resnet)": [[277, "brails.processors.year_built_classifier.Resnet.resnet152", false]], "resnet18() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet)": [[124, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.resnet18", false]], "resnet18() (in module brails.processors.foundation_classifier.models.resnet_applied)": [[145, "brails.processors.foundation_classifier.models.resnet_applied.resnet18", false]], "resnet18() (in module brails.processors.year_built_classifier.resnet)": [[277, "brails.processors.year_built_classifier.Resnet.resnet18", false]], "resnet34() (in module brails.processors.foundation_classifier.models.resnet_applied)": [[145, "brails.processors.foundation_classifier.models.resnet_applied.resnet34", false]], "resnet34() (in module brails.processors.year_built_classifier.resnet)": [[277, "brails.processors.year_built_classifier.Resnet.resnet34", false]], "resnet50() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet)": [[124, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.resnet50", false]], "resnet50() (in module brails.processors.foundation_classifier.models.resnet_applied)": [[145, "brails.processors.foundation_classifier.models.resnet_applied.resnet50", false]], "resnet50() (in module brails.processors.year_built_classifier.resnet)": [[277, "brails.processors.year_built_classifier.Resnet.resnet50", false]], "resnetdilated (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ResnetDilated", false]], "resnext (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext)": [[125, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext.ResNeXt", false]], "resnext101() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext)": [[125, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext.resnext101", false]], "resnext101_32x8d() (in module brails.processors.year_built_classifier.resnet)": [[277, "brails.processors.year_built_classifier.Resnet.resnext101_32x8d", false]], "resnext50_32x4d() (in module brails.processors.year_built_classifier.resnet)": [[277, "brails.processors.year_built_classifier.Resnet.resnext50_32x4d", false]], "retrain() (brails.processors.cons_type_classifier.constructiontypeclassifier.constypeclassifier method)": [[87, "brails.processors.cons_type_classifier.ConstructionTypeClassifier.ConsTypeClassifier.retrain", false]], "retrain() (brails.processors.image_classifier.image_classifier.imageclassifier method)": [[203, "brails.processors.image_classifier.image_classifier.ImageClassifier.retrain", false]], "retrain() (brails.processors.occupancy_classifier.occupancy_classifier.occupancyclassifier method)": [[237, "brails.processors.occupancy_classifier.occupancy_classifier.OccupancyClassifier.retrain", false]], "retrain() (brails.processors.roof_shape_classifier.roof_shape_classifier.roofshapeclassifier method)": [[242, "brails.processors.roof_shape_classifier.roof_shape_classifier.RoofShapeClassifier.retrain", false]], "rle_to_mask() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.amg.rle_to_mask", false]], "roofshapeclassifier (class in brails.processors.roof_shape_classifier.roof_shape_classifier)": [[242, "brails.processors.roof_shape_classifier.roof_shape_classifier.RoofShapeClassifier", false]], "roofshapegpt (class in brails.processors.roof_shape_gpt.roof_shape_gpt)": [[244, "brails.processors.roof_shape_gpt.roof_shape_gpt.RoofShapeGPT", false]], "roofshapevlm (class in brails.processors.roof_shape_vlm.roof_shape_vlm)": [[246, "brails.processors.roof_shape_vlm.roof_shape_vlm.RoofShapeVLM", false]], "round() (in module brails.processors.vlm_image_classifier.clip.utils)": [[255, "brails.processors.vlm_image_classifier.clip.utils.round", false]], "round2nearest_multiple() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.basedataset method)": [[101, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.BaseDataset.round2nearest_multiple", false]], "round2nearest_multiple() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.maskbuilding method)": [[130, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding.round2nearest_multiple", false]], "round_filters() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.round_filters", false]], "round_filters() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.round_filters", false]], "round_filters() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.round_filters", false]], "round_repeats() (in module brails.processors.chimney_detector.lib.efficientnet.utils)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.round_repeats", false]], "round_repeats() (in module brails.processors.garage_detector.lib.efficientnet.utils)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.round_repeats", false]], "round_repeats() (in module brails.processors.nfloors_detector.lib.efficientnet.utils)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.round_repeats", false]], "run_master() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.syncmaster method)": [[82, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SyncMaster.run_master", false]], "run_master() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.syncmaster method)": [[108, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SyncMaster.run_master", false]], "run_master() (brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.syncmaster method)": [[195, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SyncMaster.run_master", false]], "run_master() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.syncmaster method)": [[231, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SyncMaster.run_master", false]], "run_on_one_image() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[257, "brails.processors.vlm_segmenter.grounded_sam_utils.run_on_one_image", false]], "run_slave() (brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.slavepipe method)": [[82, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SlavePipe.run_slave", false]], "run_slave() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.slavepipe method)": [[108, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SlavePipe.run_slave", false]], "run_slave() (brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.slavepipe method)": [[195, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SlavePipe.run_slave", false]], "run_slave() (brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.slavepipe method)": [[231, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SlavePipe.run_slave", false]], "sam (class in brails.processors.vlm_segmenter.segment_anything.modeling.sam)": [[268, "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam", false]], "samautomaticmaskgenerator (class in brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator)": [[259, "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator.SamAutomaticMaskGenerator", false]], "samonnxmodel (class in brails.processors.vlm_segmenter.segment_anything.utils.onnx)": [[273, "brails.processors.vlm_segmenter.segment_anything.utils.onnx.SamOnnxModel", false]], "sampler (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler.Sampler", false]], "sampredictor (class in brails.processors.vlm_segmenter.segment_anything.predictor)": [[270, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor", false]], "scatter() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel.userscattereddataparallel method)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel.UserScatteredDataParallel.scatter", false]], "score (brails.filters.house_view.house_view.filterdetectionresult attribute)": [[16, "brails.filters.house_view.house_view.FilterDetectionResult.score", false]], "score (brails.processors.vlm_segmenter.grounded_sam_utils.detectionresult attribute)": [[257, "brails.processors.vlm_segmenter.grounded_sam_utils.DetectionResult.score", false]], "se_ratio (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.se_ratio", false]], "se_ratio (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.se_ratio", false]], "se_ratio (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.se_ratio", false]], "secb_config() (in module brails.inferers.hazus_inferer_wind.windsecbrulesets)": [[42, "brails.inferers.hazus_inferer_wind.WindSECBRulesets.SECB_config", false]], "seed (brails.inferers.user_inferer.user_inferer.userinferer attribute)": [[57, "brails.inferers.user_inferer.user_inferer.UserInferer.seed", false]], "segm_transform() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.basedataset method)": [[101, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.BaseDataset.segm_transform", false]], "segment() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[257, "brails.processors.vlm_segmenter.grounded_sam_utils.segment", false]], "segmentationmodule (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.SegmentationModule", false]], "segmentationmodulebase (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.SegmentationModuleBase", false]], "segmentationutils (class in brails.utils.segmentation_utils)": [[332, "brails.utils.segmentation_utils.SegmentationUtils", false]], "select_masks() (brails.processors.vlm_segmenter.segment_anything.utils.onnx.samonnxmodel method)": [[273, "brails.processors.vlm_segmenter.segment_anything.utils.onnx.SamOnnxModel.select_masks", false]], "sequential_imputer() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[20, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.sequential_imputer", false]], "sequentialsampler (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler.SequentialSampler", false]], "serb_config() (in module brails.inferers.hazus_inferer_wind.windserbrulesets)": [[43, "brails.inferers.hazus_inferer_wind.WindSERBRulesets.SERB_config", false]], "set_directory() (brails.types.image_set.imageset method)": [[321, "brails.types.image_set.ImageSet.set_directory", false]], "set_image() (brails.processors.vlm_segmenter.segment_anything.predictor.sampredictor method)": [[270, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor.set_image", false]], "set_swish() (brails.processors.chimney_detector.lib.efficientnet.model.efficientnet method)": [[73, "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet.set_swish", false]], "set_swish() (brails.processors.chimney_detector.lib.efficientnet.model.mbconvblock method)": [[73, "brails.processors.chimney_detector.lib.efficientnet.model.MBConvBlock.set_swish", false]], "set_swish() (brails.processors.garage_detector.lib.efficientnet.model.efficientnet method)": [[186, "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet.set_swish", false]], "set_swish() (brails.processors.garage_detector.lib.efficientnet.model.mbconvblock method)": [[186, "brails.processors.garage_detector.lib.efficientnet.model.MBConvBlock.set_swish", false]], "set_swish() (brails.processors.nfloors_detector.lib.efficientnet.model.efficientnet method)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet.set_swish", false]], "set_swish() (brails.processors.nfloors_detector.lib.efficientnet.model.mbconvblock method)": [[222, "brails.processors.nfloors_detector.lib.efficientnet.model.MBConvBlock.set_swish", false]], "set_torch_image() (brails.processors.vlm_segmenter.segment_anything.predictor.sampredictor method)": [[270, "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor.set_torch_image", false]], "setup_logger() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.setup_logger", false]], "show_binary_mask() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[257, "brails.processors.vlm_segmenter.grounded_sam_utils.show_binary_mask", false]], "show_box() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[257, "brails.processors.vlm_segmenter.grounded_sam_utils.show_box", false]], "show_points() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[257, "brails.processors.vlm_segmenter.grounded_sam_utils.show_points", false]], "show_predictions() (brails.utils.plot_tools.plottools static method)": [[330, "brails.utils.plot_tools.PlotTools.show_predictions", false]], "simcenterinferer (class in brails.inferers.simcenter_inferer.simcenter_inferer)": [[53, "brails.inferers.simcenter_inferer.simCenter_inferer.SimCenterInferer", false]], "simpletokenizer (class in brails.processors.vlm_image_classifier.clip.simple_tokenizer)": [[254, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.SimpleTokenizer", false]], "skconv (class in brails.processors.foundation_classifier.models.sknet)": [[146, "brails.processors.foundation_classifier.models.sknet.SKConv", false]], "sknet (class in brails.processors.foundation_classifier.models.sknet)": [[146, "brails.processors.foundation_classifier.models.sknet.SKNet", false]], "sknet101() (in module brails.processors.foundation_classifier.models.sknet)": [[146, "brails.processors.foundation_classifier.models.sknet.SKNet101", false]], "sknet26() (in module brails.processors.foundation_classifier.models.sknet)": [[146, "brails.processors.foundation_classifier.models.sknet.SKNet26", false]], "sknet50() (in module brails.processors.foundation_classifier.models.sknet)": [[146, "brails.processors.foundation_classifier.models.sknet.SKNet50", false]], "skunit (class in brails.processors.foundation_classifier.models.sknet)": [[146, "brails.processors.foundation_classifier.models.sknet.SKUnit", false]], "slavepipe (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm)": [[82, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SlavePipe", false]], "slavepipe (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm)": [[108, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SlavePipe", false]], "slavepipe (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.comm)": [[195, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SlavePipe", false]], "slavepipe (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm)": [[231, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SlavePipe", false]], "sliding_window() (in module brails.processors.foundation_classifier.attention_utils.utils)": [[95, "brails.processors.foundation_classifier.attention_utils.utils.sliding_window", false]], "soft_labels (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder attribute)": [[280, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.soft_labels", false]], "spatialjoinmethods (class in brails.utils.spatial_join_methods.base)": [[334, "brails.utils.spatial_join_methods.base.SpatialJoinMethods", false]], "split (class in brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.Split", false]], "split (class in brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.Split", false]], "split_polygon_into_cells() (brails.utils.arcgisapi_service_helper.arcgisapiservicehelper method)": [[324, "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper.split_polygon_into_cells", false]], "spmb_config() (in module brails.inferers.hazus_inferer_wind.windspmbrulesets)": [[44, "brails.inferers.hazus_inferer_wind.WindSPMBRulesets.SPMB_config", false]], "step() (brails.processors.foundation_classifier.attention_utils.radam.adamw method)": [[94, "brails.processors.foundation_classifier.attention_utils.radam.AdamW.step", false]], "step() (brails.processors.foundation_classifier.attention_utils.radam.plainradam method)": [[94, "brails.processors.foundation_classifier.attention_utils.radam.PlainRAdam.step", false]], "step() (brails.processors.foundation_classifier.attention_utils.radam.radam method)": [[94, "brails.processors.foundation_classifier.attention_utils.radam.RAdam.step", false]], "street_images (brails.processors.facade_parser.facade_parser.facadeparser attribute)": [[89, "brails.processors.facade_parser.facade_parser.FacadeParser.street_images", false]], "streetprocessor (class in brails.processors.other_idea.street_processor)": [[240, "brails.processors.other_idea.street_processor.StreetProcessor", false]], "stride (brails.processors.chimney_detector.lib.efficientnet.utils.blockargs attribute)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs.stride", false]], "stride (brails.processors.garage_detector.lib.efficientnet.utils.blockargs attribute)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs.stride", false]], "stride (brails.processors.nfloors_detector.lib.efficientnet.utils.blockargs attribute)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs.stride", false]], "subset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset)": [[116, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.Subset", false]], "subsetrandomsampler (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler.SubsetRandomSampler", false]], "supported_asset_elevation_modes() (brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.usgselevationscraper static method)": [[318, "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.USGSElevationScraper.supported_asset_elevation_modes", false]], "swish (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.Swish", false]], "swish (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.Swish", false]], "swish (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.Swish", false]], "swishimplementation (class in brails.processors.chimney_detector.lib.efficientnet.utils)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.SwishImplementation", false]], "swishimplementation (class in brails.processors.garage_detector.lib.efficientnet.utils)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.SwishImplementation", false]], "swishimplementation (class in brails.processors.nfloors_detector.lib.efficientnet.utils)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.SwishImplementation", false]], "synchronizedbatchnorm1d (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm)": [[80, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm1d", false]], "synchronizedbatchnorm1d (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm)": [[107, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm.SynchronizedBatchNorm1d", false]], "synchronizedbatchnorm1d (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm)": [[193, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm1d", false]], "synchronizedbatchnorm1d (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm)": [[229, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm1d", false]], "synchronizedbatchnorm2d (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm)": [[80, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm2d", false]], "synchronizedbatchnorm2d (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm)": [[107, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm.SynchronizedBatchNorm2d", false]], "synchronizedbatchnorm2d (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm)": [[193, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm2d", false]], "synchronizedbatchnorm2d (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm)": [[229, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm2d", false]], "synchronizedbatchnorm3d (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm)": [[80, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm3d", false]], "synchronizedbatchnorm3d (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm)": [[107, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm.SynchronizedBatchNorm3d", false]], "synchronizedbatchnorm3d (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm)": [[193, "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm3d", false]], "synchronizedbatchnorm3d (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm)": [[229, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm.SynchronizedBatchNorm3d", false]], "syncmaster (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm)": [[82, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SyncMaster", false]], "syncmaster (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm)": [[108, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SyncMaster", false]], "syncmaster (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.comm)": [[195, "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SyncMaster", false]], "syncmaster (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm)": [[231, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SyncMaster", false]], "template (brails.processors.vlm_image_classifier.clipclassifier.clipclassifier attribute)": [[250, "brails.processors.vlm_image_classifier.CLIPClassifier.CLIPClassifier.template", false]], "tensordataset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset)": [[116, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.TensorDataset", false]], "test() (in module brails.processors.year_built_classifier.lib.utils)": [[281, "brails.processors.year_built_classifier.lib.utils.test", false]], "test_list (brails.processors.foundation_classifier.npid.npid_datasets.cifar.cifar100instance attribute)": [[152, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance.test_list", false]], "test_list (brails.processors.foundation_classifier.npid.npid_datasets.cifar100instance attribute)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance.test_list", false]], "test_softlabels() (in module brails.processors.year_built_classifier.lib.utils)": [[281, "brails.processors.year_built_classifier.lib.utils.test_softlabels", false]], "test_transforms (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[132, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.test_transforms", false]], "test_transforms (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier attribute)": [[285, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.test_transforms", false]], "testdataset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset)": [[101, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.TestDataset", false]], "text_prompts (brails.processors.street_level_damage_detection.street_level_damage_detection.damagedetection_streetlevel attribute)": [[248, "brails.processors.street_level_damage_detection.street_level_damage_detection.DamageDetection_StreetLevel.text_prompts", false]], "tgz_md5 (brails.processors.foundation_classifier.npid.npid_datasets.cifar.cifar100instance attribute)": [[152, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance.tgz_md5", false]], "tgz_md5 (brails.processors.foundation_classifier.npid.npid_datasets.cifar100instance attribute)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance.tgz_md5", false]], "to_json() (brails.inferers.hazus_inferer_flood.hazus_inferer_flood.hazusinfererflood method)": [[28, "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood.to_json", false]], "to_json() (brails.inferers.hazus_inferer_wind.hazus_inferer_wind.hazusinfererwind method)": [[48, "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind.to_json", false]], "to_json() (brails.inferers.user_inferer.user_inferer.userinferer method)": [[57, "brails.inferers.user_inferer.user_inferer.UserInferer.to_json", false]], "to_numpy() (brails.processors.vlm_segmenter.segment_anything.utils.amg.maskdata method)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.amg.MaskData.to_numpy", false]], "to_tensor() (in module brails.processors.foundation_classifier.lib.custom_transforms)": [[138, "brails.processors.foundation_classifier.lib.custom_transforms.to_tensor", false]], "to_tensor() (in module brails.processors.foundation_classifier.npid.npid_lib.custom_transforms)": [[160, "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms.to_tensor", false]], "tokenize() (in module brails.processors.vlm_image_classifier.clip.clip)": [[252, "brails.processors.vlm_image_classifier.clip.clip.tokenize", false]], "torchtestcase (class in brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest)": [[84, "brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase", false]], "torchtestcase (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest)": [[110, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest.TorchTestCase", false]], "torchtestcase (class in brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest)": [[197, "brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase", false]], "torchtestcase (class in brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest)": [[233, "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase", false]], "train() (brails.processors.image_classifier.image_classifier.imageclassifier method)": [[203, "brails.processors.image_classifier.image_classifier.ImageClassifier.train", false]], "train() (brails.processors.image_segmenter.image_segmenter.imagesegmenter method)": [[206, "brails.processors.image_segmenter.image_segmenter.ImageSegmenter.train", false]], "train_data_dir (brails.processors.image_segmenter.image_segmenter.imagesegmenter attribute)": [[206, "brails.processors.image_segmenter.image_segmenter.ImageSegmenter.train_data_dir", false]], "train_list (brails.processors.foundation_classifier.npid.npid_datasets.cifar.cifar100instance attribute)": [[152, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance.train_list", false]], "train_list (brails.processors.foundation_classifier.npid.npid_datasets.cifar100instance attribute)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance.train_list", false]], "train_weights (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder attribute)": [[280, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.train_weights", false]], "traindataset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset)": [[101, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.TrainDataset", false]], "transform (brails.processors.foundation_classifier.utils.datasets.foundation_type_testset attribute)": [[172, "brails.processors.foundation_classifier.utils.Datasets.Foundation_Type_Testset.transform", false]], "transformer (class in brails.processors.vlm_image_classifier.clip.model)": [[253, "brails.processors.vlm_image_classifier.clip.model.Transformer", false]], "transforms (brails.processors.year_built_classifier.lib.datasets.yearbuiltfolder attribute)": [[280, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder.transforms", false]], "twowayattentionblock (class in brails.processors.vlm_segmenter.segment_anything.modeling.transformer)": [[269, "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.TwoWayAttentionBlock", false]], "twowaytransformer (class in brails.processors.vlm_segmenter.segment_anything.modeling.transformer)": [[269, "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.TwoWayTransformer", false]], "uncrop_boxes_xyxy() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.amg.uncrop_boxes_xyxy", false]], "uncrop_masks() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.amg.uncrop_masks", false]], "uncrop_points() (in module brails.processors.vlm_segmenter.segment_anything.utils.amg)": [[272, "brails.processors.vlm_segmenter.segment_anything.utils.amg.uncrop_points", false]], "unique() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils)": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.unique", false]], "unit_valid() (brails.utils.unit_converter.unitconverter static method)": [[338, "brails.utils.unit_converter.UnitConverter.unit_valid", false]], "unitconverter (class in brails.utils.unit_converter)": [[338, "brails.utils.unit_converter.UnitConverter", false]], "update() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.averagemeter method)": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.AverageMeter.update", false]], "update() (brails.processors.foundation_classifier.lib.utils.averagemeter method)": [[140, "brails.processors.foundation_classifier.lib.utils.AverageMeter.update", false]], "update() (brails.processors.foundation_classifier.npid.npid_lib.utils.averagemeter method)": [[162, "brails.processors.foundation_classifier.npid.npid_lib.utils.AverageMeter.update", false]], "update_filename() (brails.types.image_set.image method)": [[321, "brails.types.image_set.Image.update_filename", false]], "update_inventory() (brails.imputers.knn_imputer.knn_imputer.knnimputer method)": [[20, "brails.imputers.knn_imputer.knn_imputer.KnnImputer.update_inventory", false]], "update_properties() (brails.types.image_set.image method)": [[321, "brails.types.image_set.Image.update_properties", false]], "update_world_realization() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.update_world_realization", false]], "upernet (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.UPerNet", false]], "url (brails.processors.foundation_classifier.npid.npid_datasets.cifar.cifar100instance attribute)": [[152, "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance.url", false]], "url (brails.processors.foundation_classifier.npid.npid_datasets.cifar100instance attribute)": [[151, "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance.url", false]], "usa_footprintscraper (class in brails.scrapers.usa_footprint_scraper.usa_footprint_scraper)": [[314, "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper.USA_FootprintScraper", false]], "user_inferer() (in module brails.inferers.user_inferer.content_value_inferer)": [[55, "brails.inferers.user_inferer.content_value_inferer.user_inferer", false]], "user_inferer() (in module brails.inferers.user_inferer.floor_area_inferer)": [[56, "brails.inferers.user_inferer.floor_area_inferer.user_inferer", false]], "user_scattered_collate() (in module brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel.user_scattered_collate", false]], "userfootprint (class in brails.scrapers.user_footprints)": [[315, "brails.scrapers.user_footprints.UserFootprint", false]], "userinferer (class in brails.inferers.user_inferer.user_inferer)": [[57, "brails.inferers.user_inferer.user_inferer.UserInferer", false]], "userscattereddataparallel (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel)": [[112, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel.UserScatteredDataParallel", false]], "usgselevationscraper (class in brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper)": [[318, "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.USGSElevationScraper", false]], "valdataset (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset)": [[101, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.ValDataset", false]], "validate() (brails.inferers.hazus_inferer_wind.hazus_inferer_wind.hazusinfererwind method)": [[48, "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind.validate", false]], "validate_coordinates() (brails.utils.input_validator.inputvalidator static method)": [[327, "brails.utils.input_validator.InputValidator.validate_coordinates", false]], "validate_inventory() (brails.utils.inventory_validator.inventoryvalidator static method)": [[328, "brails.utils.inventory_validator.InventoryValidator.validate_inventory", false]], "value() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.averagemeter method)": [[129, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.AverageMeter.value", false]], "verify_and_download_models() (in module brails.processors.vlm_segmenter.grounded_sam_utils)": [[257, "brails.processors.vlm_segmenter.grounded_sam_utils.verify_and_download_models", false]], "visiontransformer (class in brails.processors.vlm_image_classifier.clip.model)": [[253, "brails.processors.vlm_image_classifier.clip.model.VisionTransformer", false]], "vlmsegmenter (class in brails.processors.vlm_segmenter.vlm_segmenter)": [[275, "brails.processors.vlm_segmenter.vlm_segmenter.VLMSegmenter", false]], "weightedrandomsampler (class in brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler)": [[118, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler.WeightedRandomSampler", false]], "weights_init() (brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.modelbuilder static method)": [[123, "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ModelBuilder.weights_init", false]], "whitespace_clean() (in module brails.processors.vlm_image_classifier.clip.simple_tokenizer)": [[254, "brails.processors.vlm_image_classifier.clip.simple_tokenizer.whitespace_clean", false]], "width_coefficient (brails.processors.chimney_detector.lib.efficientnet.utils.globalparams attribute)": [[74, "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams.width_coefficient", false]], "width_coefficient (brails.processors.garage_detector.lib.efficientnet.utils.globalparams attribute)": [[187, "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams.width_coefficient", false]], "width_coefficient (brails.processors.nfloors_detector.lib.efficientnet.utils.globalparams attribute)": [[223, "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams.width_coefficient", false]], "window_partition() (in module brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[264, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.window_partition", false]], "window_unpartition() (in module brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder)": [[264, "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.window_unpartition", false]], "wmuh_config() (in module brails.inferers.hazus_inferer_wind.windwmuhrulesets)": [[45, "brails.inferers.hazus_inferer_wind.WindWMUHRulesets.WMUH_config", false]], "work_dir (brails.processors.foundation_classifier.foundation_classifier.foundationelevationclassifier attribute)": [[132, "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier.work_dir", false]], "work_dir (brails.processors.year_built_classifier.year_built_classifier.yearbuiltclassifier attribute)": [[285, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier.work_dir", false]], "write_dict() (brails.processors.vlm_segmenter.vlm_segmenter.vlmsegmenter method)": [[275, "brails.processors.vlm_segmenter.vlm_segmenter.VLMSegmenter.write_dict", false]], "write_polygon_to_geojson() (brails.utils.geo_tools.geotools static method)": [[325, "brails.utils.geo_tools.GeoTools.write_polygon_to_geojson", false]], "write_to_geojson() (brails.types.asset_inventory.assetinventory method)": [[320, "brails.types.asset_inventory.AssetInventory.write_to_geojson", false]], "wsf_config() (in module brails.inferers.hazus_inferer_wind.windwsfrulesets)": [[46, "brails.inferers.hazus_inferer_wind.WindWSFRulesets.WSF_config", false]], "xmax (brails.filters.house_view.house_view.filterboundingbox attribute)": [[16, "brails.filters.house_view.house_view.FilterBoundingBox.xmax", false]], "xmax (brails.processors.vlm_segmenter.grounded_sam_utils.boundingbox attribute)": [[257, "brails.processors.vlm_segmenter.grounded_sam_utils.BoundingBox.xmax", false]], "xmin (brails.filters.house_view.house_view.filterboundingbox attribute)": [[16, "brails.filters.house_view.house_view.FilterBoundingBox.xmin", false]], "xmin (brails.processors.vlm_segmenter.grounded_sam_utils.boundingbox attribute)": [[257, "brails.processors.vlm_segmenter.grounded_sam_utils.BoundingBox.xmin", false]], "xyxy (brails.filters.house_view.house_view.filterboundingbox property)": [[16, "brails.filters.house_view.house_view.FilterBoundingBox.xyxy", false]], "xyxy (brails.processors.vlm_segmenter.grounded_sam_utils.boundingbox property)": [[257, "brails.processors.vlm_segmenter.grounded_sam_utils.BoundingBox.xyxy", false]], "yearbuiltclassifier (class in brails.processors.year_built_classifier.year_built_classifier)": [[285, "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier", false]], "yearbuiltfolder (class in brails.processors.year_built_classifier.lib.datasets)": [[280, "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder", false]], "ymax (brails.filters.house_view.house_view.filterboundingbox attribute)": [[16, "brails.filters.house_view.house_view.FilterBoundingBox.ymax", false]], "ymax (brails.processors.vlm_segmenter.grounded_sam_utils.boundingbox attribute)": [[257, "brails.processors.vlm_segmenter.grounded_sam_utils.BoundingBox.ymax", false]], "ymin (brails.filters.house_view.house_view.filterboundingbox attribute)": [[16, "brails.filters.house_view.house_view.FilterBoundingBox.ymin", false]], "ymin (brails.processors.vlm_segmenter.grounded_sam_utils.boundingbox attribute)": [[257, "brails.processors.vlm_segmenter.grounded_sam_utils.BoundingBox.ymin", false]]}, "objects": {"": [[10, 0, 0, "-", "brails"]], "brails": [[11, 0, 0, "-", "constants"], [12, 0, 0, "-", "exceptions"], [13, 0, 0, "-", "filters"], [17, 0, 0, "-", "imputers"], [21, 0, 0, "-", "inferers"], [58, 0, 0, "-", "processors"], [286, 0, 0, "-", "scrapers"], [319, 0, 0, "-", "types"], [323, 0, 0, "-", "utils"]], "brails.exceptions": [[12, 1, 1, "", "BrailsError"], [12, 1, 1, "", "NotFoundError"]], "brails.filters": [[14, 0, 0, "-", "filter"], [15, 0, 0, "-", "house_view"]], "brails.filters.filter": [[14, 2, 1, "", "Filter"]], "brails.filters.filter.Filter": [[14, 3, 1, "id0", "filter"]], "brails.filters.house_view": [[16, 0, 0, "-", "house_view"]], "brails.filters.house_view.house_view": [[16, 2, 1, "", "FilterBoundingBox"], [16, 2, 1, "", "FilterDetectionResult"], [16, 2, 1, "", "HouseView"], [16, 6, 1, "", "detect"]], "brails.filters.house_view.house_view.FilterBoundingBox": [[16, 4, 1, "", "xmax"], [16, 4, 1, "", "xmin"], [16, 5, 1, "", "xyxy"], [16, 4, 1, "", "ymax"], [16, 4, 1, "", "ymin"]], "brails.filters.house_view.house_view.FilterDetectionResult": [[16, 4, 1, "", "box"], [16, 3, 1, "", "from_dict"], [16, 4, 1, "", "label"], [16, 4, 1, "", "mask"], [16, 4, 1, "", "score"]], "brails.filters.house_view.house_view.HouseView": [[16, 3, 1, "", "filter"], [16, 3, 1, "", "filter1"]], "brails.imputers": [[18, 0, 0, "-", "imputation"], [19, 0, 0, "-", "knn_imputer"]], "brails.imputers.imputation": [[18, 2, 1, "", "Imputation"]], "brails.imputers.imputation.Imputation": [[18, 3, 1, "", "impute"]], "brails.imputers.knn_imputer": [[20, 0, 0, "-", "knn_imputer"]], "brails.imputers.knn_imputer.knn_imputer": [[20, 2, 1, "", "KnnImputer"]], "brails.imputers.knn_imputer.knn_imputer.KnnImputer": [[20, 3, 1, "", "category_in_df_to_indices"], [20, 3, 1, "", "clustering"], [20, 3, 1, "", "geospatial_knn"], [20, 3, 1, "", "impute"], [20, 3, 1, "", "invetory_to_df"], [20, 3, 1, "", "merge_two_json"], [20, 4, 1, "", "n_pw"], [20, 3, 1, "", "sequential_imputer"], [20, 3, 1, "", "update_inventory"]], "brails.inferers": [[22, 0, 0, "-", "hazus_inferer"], [25, 0, 0, "-", "hazus_inferer_earthquake"], [27, 0, 0, "-", "hazus_inferer_flood"], [29, 0, 0, "-", "hazus_inferer_wind"], [49, 0, 0, "-", "inference_engine"], [50, 0, 0, "-", "nlcd_inferer"], [52, 0, 0, "-", "simcenter_inferer"], [54, 0, 0, "-", "user_inferer"]], "brails.inferers.hazus_inferer": [[23, 0, 0, "-", "hazus_inferer"], [24, 0, 0, "-", "hazus_rulesets"]], "brails.inferers.hazus_inferer.hazus_inferer": [[23, 2, 1, "", "HazusInferer"]], "brails.inferers.hazus_inferer.hazus_inferer.HazusInferer": [[23, 3, 1, "", "add_features_to_asset"], [23, 3, 1, "", "check_keys"], [23, 3, 1, "", "flatten_array"], [23, 3, 1, "", "get_replacement_cost"], [23, 3, 1, "", "get_str_from_occ"], [23, 3, 1, "", "infer"], [23, 3, 1, "", "merge_two_json"], [23, 3, 1, "", "modulate_occ"], [23, 3, 1, "", "modulate_weights"]], "brails.inferers.hazus_inferer.hazus_rulesets": [[24, 6, 1, "", "get_hazus_base_replacement_cost"], [24, 6, 1, "", "get_hazus_height_classes"], [24, 6, 1, "", "get_hazus_height_classes_RES1"], [24, 6, 1, "", "get_hazus_income_to_const_class"], [24, 6, 1, "", "get_hazus_occ_type_mapping"], [24, 6, 1, "", "get_hazus_region_to_garage"], [24, 6, 1, "", "get_hazus_state_region_mapping"], [24, 6, 1, "", "get_hazus_year_classes"]], "brails.inferers.hazus_inferer_earthquake": [[26, 0, 0, "-", "hazus_inferer_earthquake"]], "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake": [[26, 2, 1, "", "HazusInfererEarthquake"]], "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake.HazusInfererEarthquake": [[26, 3, 1, "", "check_keys"], [26, 3, 1, "", "compute_n_possible_worlds"], [26, 3, 1, "", "get_era_height_foundation_class"], [26, 3, 1, "", "infer"], [26, 3, 1, "", "merge_two_json"]], "brails.inferers.hazus_inferer_flood": [[28, 0, 0, "-", "hazus_inferer_flood"]], "brails.inferers.hazus_inferer_flood.hazus_inferer_flood": [[28, 2, 1, "", "HazusInfererFlood"]], "brails.inferers.hazus_inferer_flood.hazus_inferer_flood.HazusInfererFlood": [[28, 3, 1, "", "auto_populate"], [28, 3, 1, "", "infer"], [28, 3, 1, "", "infer_building_one_by_one"], [28, 3, 1, "", "is_ready_to_infer"], [28, 3, 1, "", "merge_two_json"], [28, 3, 1, "", "to_json"]], "brails.inferers.hazus_inferer_wind": [[30, 0, 0, "-", "BuildingClassRulesets"], [31, 0, 0, "-", "WindCECBRulesets"], [32, 0, 0, "-", "WindCERBRulesets"], [33, 0, 0, "-", "WindEFRulesets"], [34, 0, 0, "-", "WindMECBRulesets"], [35, 0, 0, "-", "WindMERBRulesets"], [36, 0, 0, "-", "WindMHRulesets"], [37, 0, 0, "-", "WindMLRIRulesets"], [38, 0, 0, "-", "WindMLRMRulesets"], [39, 0, 0, "-", "WindMMUHRulesets"], [40, 0, 0, "-", "WindMSFRulesets"], [41, 0, 0, "-", "WindMetaVarRulesets"], [42, 0, 0, "-", "WindSECBRulesets"], [43, 0, 0, "-", "WindSERBRulesets"], [44, 0, 0, "-", "WindSPMBRulesets"], [45, 0, 0, "-", "WindWMUHRulesets"], [46, 0, 0, "-", "WindWSFRulesets"], [47, 0, 0, "-", "auto_HU_NJ"], [48, 0, 0, "-", "hazus_inferer_wind"]], "brails.inferers.hazus_inferer_wind.BuildingClassRulesets": [[30, 6, 1, "", "building_class"]], "brails.inferers.hazus_inferer_wind.WindCECBRulesets": [[31, 6, 1, "", "CECB_config"]], "brails.inferers.hazus_inferer_wind.WindCERBRulesets": [[32, 6, 1, "", "CERB_config"]], "brails.inferers.hazus_inferer_wind.WindEFRulesets": [[33, 6, 1, "", "HUEFFS_config"], [33, 6, 1, "", "HUEFH_config"], [33, 6, 1, "", "HUEFSS_config"], [33, 6, 1, "", "HUEFS_config"]], "brails.inferers.hazus_inferer_wind.WindMECBRulesets": [[34, 6, 1, "", "MECB_config"]], "brails.inferers.hazus_inferer_wind.WindMERBRulesets": [[35, 6, 1, "", "MERB_config"]], "brails.inferers.hazus_inferer_wind.WindMHRulesets": [[36, 6, 1, "", "MH_config"]], "brails.inferers.hazus_inferer_wind.WindMLRIRulesets": [[37, 6, 1, "", "MLRI_config"]], "brails.inferers.hazus_inferer_wind.WindMLRMRulesets": [[38, 6, 1, "", "MLRM_config"]], "brails.inferers.hazus_inferer_wind.WindMMUHRulesets": [[39, 6, 1, "", "MMUH_config"]], "brails.inferers.hazus_inferer_wind.WindMSFRulesets": [[40, 6, 1, "", "MSF_config"]], "brails.inferers.hazus_inferer_wind.WindMetaVarRulesets": [[41, 6, 1, "", "add_default"], [41, 6, 1, "", "global_rulesets"], [41, 6, 1, "", "is_ready_to_infer"]], "brails.inferers.hazus_inferer_wind.WindSECBRulesets": [[42, 6, 1, "", "SECB_config"]], "brails.inferers.hazus_inferer_wind.WindSERBRulesets": [[43, 6, 1, "", "SERB_config"]], "brails.inferers.hazus_inferer_wind.WindSPMBRulesets": [[44, 6, 1, "", "SPMB_config"]], "brails.inferers.hazus_inferer_wind.WindWMUHRulesets": [[45, 6, 1, "", "WMUH_config"]], "brails.inferers.hazus_inferer_wind.WindWSFRulesets": [[46, 6, 1, "", "WSF_config"]], "brails.inferers.hazus_inferer_wind.auto_HU_NJ": [[47, 6, 1, "", "auto_populate"]], "brails.inferers.hazus_inferer_wind.hazus_inferer_wind": [[48, 2, 1, "", "HazusInfererWind"]], "brails.inferers.hazus_inferer_wind.hazus_inferer_wind.HazusInfererWind": [[48, 3, 1, "", "correct"], [48, 3, 1, "", "infer"], [48, 3, 1, "", "infer_building_one_by_one"], [48, 3, 1, "", "merge_two_json"], [48, 3, 1, "", "to_json"], [48, 3, 1, "", "validate"]], "brails.inferers.inference_engine": [[49, 2, 1, "", "InferenceEngine"]], "brails.inferers.inference_engine.InferenceEngine": [[49, 3, 1, "", "infer"]], "brails.inferers.nlcd_inferer": [[51, 0, 0, "-", "nlcd_to_coarse_land_cover"]], "brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover": [[51, 2, 1, "", "NLCDToCoarseLandCover"]], "brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover.NLCDToCoarseLandCover": [[51, 3, 1, "", "infer"]], "brails.inferers.simcenter_inferer": [[53, 0, 0, "-", "simCenter_inferer"]], "brails.inferers.simcenter_inferer.simCenter_inferer": [[53, 2, 1, "", "SimCenterInferer"]], "brails.inferers.simcenter_inferer.simCenter_inferer.SimCenterInferer": [[53, 3, 1, "", "modulate_occ"], [53, 3, 1, "", "modulate_weights"]], "brails.inferers.user_inferer": [[55, 0, 0, "-", "content_value_inferer"], [56, 0, 0, "-", "floor_area_inferer"], [57, 0, 0, "-", "user_inferer"]], "brails.inferers.user_inferer.content_value_inferer": [[55, 6, 1, "", "user_inferer"]], "brails.inferers.user_inferer.floor_area_inferer": [[56, 6, 1, "", "user_inferer"]], "brails.inferers.user_inferer.user_inferer": [[57, 2, 1, "", "UserInferer"]], "brails.inferers.user_inferer.user_inferer.UserInferer": [[57, 3, 1, "", "infer"], [57, 3, 1, "", "merge_two_json"], [57, 4, 1, "", "n_pw"], [57, 4, 1, "", "seed"], [57, 3, 1, "", "to_json"]], "brails.processors": [[59, 0, 0, "-", "building_material_llm"], [61, 0, 0, "-", "chimney_detector"], [86, 0, 0, "-", "cons_type_classifier"], [88, 0, 0, "-", "facade_parser"], [90, 0, 0, "-", "ffh_predictor_klepac"], [92, 0, 0, "-", "foundation_classifier"], [174, 0, 0, "-", "garage_detector"], [199, 0, 0, "-", "gpt_base_model"], [202, 0, 0, "-", "image_classifier"], [204, 0, 0, "-", "image_processor"], [205, 0, 0, "-", "image_segmenter"], [207, 0, 0, "-", "nFloor_gpt"], [209, 0, 0, "-", "nFloor_vlm"], [211, 0, 0, "-", "nfloors_detector"], [236, 0, 0, "-", "occupancy_classifier"], [238, 0, 0, "-", "other_idea"], [241, 0, 0, "-", "roof_shape_classifier"], [243, 0, 0, "-", "roof_shape_gpt"], [245, 0, 0, "-", "roof_shape_vlm"], [247, 0, 0, "-", "street_level_damage_detection"], [249, 0, 0, "-", "vlm_image_classifier"], [256, 0, 0, "-", "vlm_segmenter"], [276, 0, 0, "-", "year_built_classifier"]], "brails.processors.building_material_llm": [[60, 0, 0, "-", "building_material_llm"]], "brails.processors.building_material_llm.building_material_llm": [[60, 2, 1, "", "BuildingMaterialLLM"]], "brails.processors.building_material_llm.building_material_llm.BuildingMaterialLLM": [[60, 3, 1, "", "predict"]], "brails.processors.chimney_detector": [[63, 0, 0, "-", "lib"]], "brails.processors.chimney_detector.lib": [[65, 0, 0, "-", "efficientdet"], [72, 0, 0, "-", "efficientnet"], [78, 0, 0, "-", "utils"]], "brails.processors.chimney_detector.lib.efficientdet": [[66, 0, 0, "-", "coco"], [67, 0, 0, "-", "config"], [71, 0, 0, "-", "utils"]], "brails.processors.chimney_detector.lib.efficientdet.coco": [[66, 2, 1, "", "COCO"]], "brails.processors.chimney_detector.lib.efficientdet.coco.COCO": [[66, 3, 1, "", "createIndex"], [66, 3, 1, "", "getAnnIds"], [66, 3, 1, "", "getCatIds"], [66, 3, 1, "", "getImgIds"], [66, 3, 1, "", "info"], [66, 3, 1, "", "loadAnns"], [66, 3, 1, "", "loadCats"], [66, 3, 1, "", "loadImgs"]], "brails.processors.chimney_detector.lib.efficientdet.utils": [[71, 2, 1, "", "Anchors"], [71, 2, 1, "", "BBoxTransform"], [71, 2, 1, "", "ClipBoxes"]], "brails.processors.chimney_detector.lib.efficientdet.utils.Anchors": [[71, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientdet.utils.BBoxTransform": [[71, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientdet.utils.ClipBoxes": [[71, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientnet": [[73, 0, 0, "-", "model"], [74, 0, 0, "-", "utils"], [75, 0, 0, "-", "utils_extra"]], "brails.processors.chimney_detector.lib.efficientnet.model": [[73, 2, 1, "", "EfficientNet"], [73, 2, 1, "", "MBConvBlock"]], "brails.processors.chimney_detector.lib.efficientnet.model.EfficientNet": [[73, 3, 1, "", "extract_features"], [73, 3, 1, "", "forward"], [73, 3, 1, "", "from_name"], [73, 3, 1, "", "from_pretrained"], [73, 3, 1, "", "get_image_size"], [73, 3, 1, "", "set_swish"]], "brails.processors.chimney_detector.lib.efficientnet.model.MBConvBlock": [[73, 3, 1, "", "forward"], [73, 4, 1, "", "has_se"], [73, 3, 1, "", "set_swish"]], "brails.processors.chimney_detector.lib.efficientnet.utils": [[74, 2, 1, "", "BlockArgs"], [74, 2, 1, "", "BlockDecoder"], [74, 2, 1, "", "Conv2dDynamicSamePadding"], [74, 2, 1, "", "GlobalParams"], [74, 2, 1, "", "Identity"], [74, 2, 1, "", "MemoryEfficientSwish"], [74, 2, 1, "", "Swish"], [74, 2, 1, "", "SwishImplementation"], [74, 6, 1, "", "drop_connect"], [74, 6, 1, "", "efficientnet"], [74, 6, 1, "", "efficientnet_params"], [74, 6, 1, "", "get_model_params"], [74, 6, 1, "", "get_same_padding_conv2d"], [74, 6, 1, "", "load_pretrained_weights"], [74, 6, 1, "", "round_filters"], [74, 6, 1, "", "round_repeats"]], "brails.processors.chimney_detector.lib.efficientnet.utils.BlockArgs": [[74, 4, 1, "", "expand_ratio"], [74, 4, 1, "", "id_skip"], [74, 4, 1, "", "input_filters"], [74, 4, 1, "", "kernel_size"], [74, 4, 1, "", "num_repeat"], [74, 4, 1, "", "output_filters"], [74, 4, 1, "", "se_ratio"], [74, 4, 1, "", "stride"]], "brails.processors.chimney_detector.lib.efficientnet.utils.BlockDecoder": [[74, 3, 1, "", "decode"], [74, 3, 1, "", "encode"]], "brails.processors.chimney_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding": [[74, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientnet.utils.GlobalParams": [[74, 4, 1, "", "batch_norm_epsilon"], [74, 4, 1, "", "batch_norm_momentum"], [74, 4, 1, "", "depth_coefficient"], [74, 4, 1, "", "depth_divisor"], [74, 4, 1, "", "drop_connect_rate"], [74, 4, 1, "", "dropout_rate"], [74, 4, 1, "", "image_size"], [74, 4, 1, "", "min_depth"], [74, 4, 1, "", "num_classes"], [74, 4, 1, "", "width_coefficient"]], "brails.processors.chimney_detector.lib.efficientnet.utils.Identity": [[74, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientnet.utils.MemoryEfficientSwish": [[74, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientnet.utils.Swish": [[74, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientnet.utils.SwishImplementation": [[74, 3, 1, "", "backward"], [74, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientnet.utils_extra": [[75, 2, 1, "", "Conv2dStaticSamePadding"], [75, 2, 1, "", "MaxPool2dStaticSamePadding"]], "brails.processors.chimney_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding": [[75, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding": [[75, 3, 1, "", "forward"]], "brails.processors.chimney_detector.lib.utils": [[79, 0, 0, "-", "sync_batchnorm"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm": [[80, 0, 0, "-", "batchnorm"], [81, 0, 0, "-", "batchnorm_reimpl"], [82, 0, 0, "-", "comm"], [83, 0, 0, "-", "replicate"], [84, 0, 0, "-", "unittest"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm": [[80, 2, 1, "", "SynchronizedBatchNorm1d"], [80, 2, 1, "", "SynchronizedBatchNorm2d"], [80, 2, 1, "", "SynchronizedBatchNorm3d"], [80, 6, 1, "", "convert_model"], [80, 6, 1, "", "patch_sync_batchnorm"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl": [[81, 2, 1, "", "BatchNorm2dReimpl"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl": [[81, 3, 1, "", "forward"], [81, 3, 1, "", "reset_parameters"], [81, 3, 1, "", "reset_running_stats"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm": [[82, 2, 1, "", "FutureResult"], [82, 2, 1, "", "SlavePipe"], [82, 2, 1, "", "SyncMaster"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.FutureResult": [[82, 3, 1, "", "get"], [82, 3, 1, "", "put"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SlavePipe": [[82, 3, 1, "", "run_slave"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm.SyncMaster": [[82, 5, 1, "", "nr_slaves"], [82, 3, 1, "", "register_slave"], [82, 3, 1, "", "run_master"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate": [[83, 2, 1, "", "CallbackContext"], [83, 2, 1, "", "DataParallelWithCallback"], [83, 6, 1, "", "execute_replication_callbacks"], [83, 6, 1, "", "patch_replication_callback"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback": [[83, 3, 1, "", "replicate"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest": [[84, 2, 1, "", "TorchTestCase"]], "brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase": [[84, 3, 1, "", "assertTensorClose"]], "brails.processors.cons_type_classifier": [[87, 0, 0, "-", "ConstructionTypeClassifier"]], "brails.processors.cons_type_classifier.ConstructionTypeClassifier": [[87, 2, 1, "", "ConsTypeClassifier"]], "brails.processors.cons_type_classifier.ConstructionTypeClassifier.ConsTypeClassifier": [[87, 3, 1, "", "predict"], [87, 3, 1, "", "retrain"]], "brails.processors.facade_parser": [[89, 0, 0, "-", "facade_parser"]], "brails.processors.facade_parser.facade_parser": [[89, 2, 1, "", "FacadeParser"]], "brails.processors.facade_parser.facade_parser.FacadeParser": [[89, 4, 1, "", "cam_elevs"], [89, 4, 1, "", "depthmaps"], [89, 4, 1, "", "footprints"], [89, 4, 1, "", "model_path"], [89, 3, 1, "", "predict"], [89, 4, 1, "", "predictions"], [89, 4, 1, "", "street_images"]], "brails.processors.ffh_predictor_klepac": [[91, 0, 0, "-", "ffh_predictor_klepac"]], "brails.processors.ffh_predictor_klepac.ffh_predictor_klepac": [[91, 2, 1, "", "FFHPredictorKlepac"]], "brails.processors.ffh_predictor_klepac.ffh_predictor_klepac.FFHPredictorKlepac": [[91, 3, 1, "", "predict"]], "brails.processors.foundation_classifier": [[93, 0, 0, "-", "attention_utils"], [96, 0, 0, "-", "csail_segmentation_tool"], [132, 0, 0, "-", "foundation_classifier"], [133, 0, 0, "-", "lib"], [141, 0, 0, "-", "models"], [147, 0, 0, "-", "npid"], [171, 0, 0, "-", "utils"]], "brails.processors.foundation_classifier.attention_utils": [[94, 0, 0, "-", "radam"], [95, 0, 0, "-", "utils"]], "brails.processors.foundation_classifier.attention_utils.radam": [[94, 2, 1, "", "AdamW"], [94, 2, 1, "", "PlainRAdam"], [94, 2, 1, "", "RAdam"]], "brails.processors.foundation_classifier.attention_utils.radam.AdamW": [[94, 3, 1, "", "step"]], "brails.processors.foundation_classifier.attention_utils.radam.PlainRAdam": [[94, 3, 1, "", "step"]], "brails.processors.foundation_classifier.attention_utils.radam.RAdam": [[94, 3, 1, "", "step"]], "brails.processors.foundation_classifier.attention_utils.utils": [[95, 6, 1, "", "construct_confusion_matrix_image"], [95, 6, 1, "", "evaluate"], [95, 6, 1, "", "sliding_window"]], "brails.processors.foundation_classifier.csail_segmentation_tool": [[97, 0, 0, "-", "csail_seg"], [130, 0, 0, "-", "csail_segmentation"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg": [[98, 0, 0, "-", "config"], [100, 0, 0, "-", "data"], [101, 0, 0, "-", "dataset"], [104, 0, 0, "-", "lib"], [120, 0, 0, "-", "models"], [129, 0, 0, "-", "utils"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config": [[99, 0, 0, "-", "defaults"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset": [[101, 2, 1, "", "BaseDataset"], [101, 2, 1, "", "TestDataset"], [101, 2, 1, "", "TrainDataset"], [101, 2, 1, "", "ValDataset"], [101, 6, 1, "", "imresize"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset.BaseDataset": [[101, 3, 1, "", "img_transform"], [101, 3, 1, "", "parse_input_list"], [101, 3, 1, "", "round2nearest_multiple"], [101, 3, 1, "", "segm_transform"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib": [[105, 0, 0, "-", "nn"], [113, 0, 0, "-", "utils"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn": [[106, 0, 0, "-", "modules"], [111, 0, 0, "-", "parallel"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules": [[107, 0, 0, "-", "batchnorm"], [108, 0, 0, "-", "comm"], [109, 0, 0, "-", "replicate"], [110, 0, 0, "-", "unittest"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm": [[107, 2, 1, "", "SynchronizedBatchNorm1d"], [107, 2, 1, "", "SynchronizedBatchNorm2d"], [107, 2, 1, "", "SynchronizedBatchNorm3d"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm": [[108, 2, 1, "", "FutureResult"], [108, 2, 1, "", "SlavePipe"], [108, 2, 1, "", "SyncMaster"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.FutureResult": [[108, 3, 1, "", "get"], [108, 3, 1, "", "put"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SlavePipe": [[108, 3, 1, "", "run_slave"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm.SyncMaster": [[108, 5, 1, "", "nr_slaves"], [108, 3, 1, "", "register_slave"], [108, 3, 1, "", "run_master"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate": [[109, 2, 1, "", "CallbackContext"], [109, 2, 1, "", "DataParallelWithCallback"], [109, 6, 1, "", "execute_replication_callbacks"], [109, 6, 1, "", "patch_replication_callback"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate.DataParallelWithCallback": [[109, 3, 1, "", "replicate"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest": [[110, 2, 1, "", "TorchTestCase"], [110, 6, 1, "", "as_numpy"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest.TorchTestCase": [[110, 3, 1, "", "assertTensorClose"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel": [[112, 0, 0, "-", "data_parallel"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel": [[112, 2, 1, "", "UserScatteredDataParallel"], [112, 6, 1, "", "async_copy_to"], [112, 6, 1, "", "user_scattered_collate"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel.UserScatteredDataParallel": [[112, 3, 1, "", "scatter"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils": [[119, 0, 0, "-", "th"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data": [[116, 0, 0, "-", "dataset"], [118, 0, 0, "-", "sampler"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset": [[116, 2, 1, "", "ConcatDataset"], [116, 2, 1, "", "Dataset"], [116, 2, 1, "", "Subset"], [116, 2, 1, "", "TensorDataset"], [116, 6, 1, "", "random_split"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset.ConcatDataset": [[116, 5, 1, "", "cummulative_sizes"], [116, 3, 1, "", "cumsum"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler": [[118, 2, 1, "", "BatchSampler"], [118, 2, 1, "", "RandomSampler"], [118, 2, 1, "", "Sampler"], [118, 2, 1, "", "SequentialSampler"], [118, 2, 1, "", "SubsetRandomSampler"], [118, 2, 1, "", "WeightedRandomSampler"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th": [[119, 6, 1, "", "as_numpy"], [119, 6, 1, "", "as_variable"], [119, 6, 1, "", "mark_volatile"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models": [[121, 0, 0, "-", "hrnet"], [122, 0, 0, "-", "mobilenet"], [123, 0, 0, "-", "models"], [124, 0, 0, "-", "resnet"], [125, 0, 0, "-", "resnext"], [126, 0, 0, "-", "utils"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet": [[121, 6, 1, "", "hrnetv2"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet": [[122, 6, 1, "", "mobilenetv2"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models": [[123, 2, 1, "", "C1"], [123, 2, 1, "", "C1DeepSup"], [123, 2, 1, "", "MobileNetV2Dilated"], [123, 2, 1, "", "ModelBuilder"], [123, 2, 1, "", "PPM"], [123, 2, 1, "", "PPMDeepsup"], [123, 2, 1, "", "Resnet"], [123, 2, 1, "", "ResnetDilated"], [123, 2, 1, "", "SegmentationModule"], [123, 2, 1, "", "SegmentationModuleBase"], [123, 2, 1, "", "UPerNet"], [123, 6, 1, "", "conv3x3_bn_relu"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.C1": [[123, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.C1DeepSup": [[123, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.MobileNetV2Dilated": [[123, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ModelBuilder": [[123, 3, 1, "", "build_decoder"], [123, 3, 1, "", "build_encoder"], [123, 3, 1, "", "weights_init"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.PPM": [[123, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.PPMDeepsup": [[123, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.Resnet": [[123, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.ResnetDilated": [[123, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.SegmentationModule": [[123, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.SegmentationModuleBase": [[123, 3, 1, "", "pixel_acc"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models.UPerNet": [[123, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet": [[124, 2, 1, "", "ResNet"], [124, 6, 1, "", "resnet101"], [124, 6, 1, "", "resnet18"], [124, 6, 1, "", "resnet50"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet.ResNet": [[124, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext": [[125, 2, 1, "", "ResNeXt"], [125, 6, 1, "", "resnext101"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext.ResNeXt": [[125, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils": [[126, 6, 1, "", "load_url"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils": [[129, 2, 1, "", "AverageMeter"], [129, 1, 1, "", "NotSupportedCliException"], [129, 6, 1, "", "accuracy"], [129, 6, 1, "", "colorEncode"], [129, 6, 1, "", "find_recursive"], [129, 6, 1, "", "intersectionAndUnion"], [129, 6, 1, "", "parse_devices"], [129, 6, 1, "", "process_range"], [129, 6, 1, "", "setup_logger"], [129, 6, 1, "", "unique"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils.AverageMeter": [[129, 3, 1, "", "add"], [129, 3, 1, "", "average"], [129, 3, 1, "", "initialize"], [129, 3, 1, "", "update"], [129, 3, 1, "", "value"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation": [[130, 2, 1, "", "MaskBuilding"]], "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation.MaskBuilding": [[130, 4, 1, "", "colors"], [130, 4, 1, "", "config_file"], [130, 4, 1, "", "dec_weights"], [130, 4, 1, "", "enc_weights"], [130, 3, 1, "", "get_mask"], [130, 3, 1, "", "round2nearest_multiple"]], "brails.processors.foundation_classifier.foundation_classifier": [[132, 2, 1, "", "FoundationElevationClassifier"]], "brails.processors.foundation_classifier.foundation_classifier.FoundationElevationClassifier": [[132, 4, 1, "", "checkpoint"], [132, 4, 1, "", "checkpoints_dir"], [132, 4, 1, "", "classes"], [132, 4, 1, "", "device"], [132, 4, 1, "", "load_masks"], [132, 4, 1, "", "mask_buildings"], [132, 4, 1, "", "model_dir"], [132, 4, 1, "", "model_file"], [132, 3, 1, "", "predict"], [132, 4, 1, "", "print_res"], [132, 4, 1, "", "test_transforms"], [132, 4, 1, "", "work_dir"]], "brails.processors.foundation_classifier.lib": [[134, 0, 0, "-", "LinearAverage"], [135, 0, 0, "-", "NCEAverage"], [136, 0, 0, "-", "NCECriterion"], [137, 0, 0, "-", "alias_multinomial"], [138, 0, 0, "-", "custom_transforms"], [139, 0, 0, "-", "normalize"], [140, 0, 0, "-", "utils"]], "brails.processors.foundation_classifier.lib.LinearAverage": [[134, 2, 1, "", "LinearAverage"], [134, 2, 1, "", "LinearAverageOp"]], "brails.processors.foundation_classifier.lib.LinearAverage.LinearAverage": [[134, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.lib.LinearAverage.LinearAverageOp": [[134, 3, 1, "", "backward"], [134, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.lib.NCEAverage": [[135, 2, 1, "", "NCEAverage"], [135, 2, 1, "", "NCEFunction"]], "brails.processors.foundation_classifier.lib.NCEAverage.NCEAverage": [[135, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.lib.NCEAverage.NCEFunction": [[135, 3, 1, "", "backward"], [135, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.lib.NCECriterion": [[136, 2, 1, "", "NCECriterion"]], "brails.processors.foundation_classifier.lib.NCECriterion.NCECriterion": [[136, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.lib.alias_multinomial": [[137, 2, 1, "", "AliasMethod"]], "brails.processors.foundation_classifier.lib.alias_multinomial.AliasMethod": [[137, 3, 1, "", "cuda"], [137, 3, 1, "", "draw"]], "brails.processors.foundation_classifier.lib.custom_transforms": [[138, 2, 1, "", "AddGaussianNoise"], [138, 2, 1, "", "AddGaussianPoissonNoise"], [138, 2, 1, "", "AddSpeckleNoise"], [138, 2, 1, "", "BilinearResize"], [138, 2, 1, "", "CenterCropNumpy"], [138, 2, 1, "", "ElasticTransform"], [138, 2, 1, "", "EnhancedCompose"], [138, 2, 1, "", "MaxScaleNumpy"], [138, 2, 1, "", "MedianScaleNumpy"], [138, 2, 1, "", "Merge"], [138, 2, 1, "", "MutualExclude"], [138, 2, 1, "", "NormalizeNumpy"], [138, 2, 1, "", "PoissonSubsampling"], [138, 2, 1, "", "RandomCropNumpy"], [138, 2, 1, "", "RandomGaussianBlurring"], [138, 2, 1, "", "RandomRotate"], [138, 2, 1, "", "Split"], [138, 6, 1, "", "center_crop"], [138, 6, 1, "", "elastic_transform"], [138, 6, 1, "", "poisson_downsampling"], [138, 6, 1, "", "random_num_generator"], [138, 6, 1, "", "to_tensor"]], "brails.processors.foundation_classifier.lib.normalize": [[139, 2, 1, "", "Normalize"]], "brails.processors.foundation_classifier.lib.normalize.Normalize": [[139, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.lib.utils": [[140, 2, 1, "", "AverageMeter"]], "brails.processors.foundation_classifier.lib.utils.AverageMeter": [[140, 3, 1, "", "reset"], [140, 3, 1, "", "update"]], "brails.processors.foundation_classifier.models": [[142, 0, 0, "-", "attention_module"], [143, 0, 0, "-", "basic_layer"], [144, 0, 0, "-", "residual_attention_network"], [145, 0, 0, "-", "resnet_applied"], [146, 0, 0, "-", "sknet"]], "brails.processors.foundation_classifier.models.attention_module": [[142, 2, 1, "", "AttentionModule_pre"], [142, 2, 1, "", "AttentionModule_stage0"], [142, 2, 1, "", "AttentionModule_stage1"], [142, 2, 1, "", "AttentionModule_stage1_cifar"], [142, 2, 1, "", "AttentionModule_stage2"], [142, 2, 1, "", "AttentionModule_stage2_cifar"], [142, 2, 1, "", "AttentionModule_stage3"], [142, 2, 1, "", "AttentionModule_stage3_cifar"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_pre": [[142, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage0": [[142, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage1": [[142, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage1_cifar": [[142, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage2": [[142, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage2_cifar": [[142, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage3": [[142, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.attention_module.AttentionModule_stage3_cifar": [[142, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.basic_layer": [[143, 2, 1, "", "ResidualBlock"], [143, 2, 1, "", "ResidualBlock1D"]], "brails.processors.foundation_classifier.models.basic_layer.ResidualBlock": [[143, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.basic_layer.ResidualBlock1D": [[143, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.residual_attention_network": [[144, 2, 1, "", "DenseBlock"], [144, 2, 1, "", "MLP"], [144, 2, 1, "", "ResidualAttentionModel_92"], [144, 2, 1, "", "ResidualAttentionModel_92_32input"], [144, 2, 1, "", "ResidualAttentionModel_92_32input_update"], [144, 2, 1, "", "ResidualAttentionModel_92_Small"], [144, 2, 1, "", "ResidualAttentionModel_92_Small_1D"]], "brails.processors.foundation_classifier.models.residual_attention_network.DenseBlock": [[144, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.residual_attention_network.MLP": [[144, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92": [[144, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_32input": [[144, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_32input_update": [[144, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_Small": [[144, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.residual_attention_network.ResidualAttentionModel_92_Small_1D": [[144, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.resnet_applied": [[145, 2, 1, "", "ResNet"], [145, 6, 1, "", "resnet101"], [145, 6, 1, "", "resnet152"], [145, 6, 1, "", "resnet18"], [145, 6, 1, "", "resnet34"], [145, 6, 1, "", "resnet50"]], "brails.processors.foundation_classifier.models.resnet_applied.ResNet": [[145, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.sknet": [[146, 2, 1, "", "SKConv"], [146, 2, 1, "", "SKNet"], [146, 6, 1, "", "SKNet101"], [146, 6, 1, "", "SKNet26"], [146, 6, 1, "", "SKNet50"], [146, 2, 1, "", "SKUnit"]], "brails.processors.foundation_classifier.models.sknet.SKConv": [[146, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.sknet.SKNet": [[146, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.models.sknet.SKUnit": [[146, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.npid": [[151, 0, 0, "-", "npid_datasets"], [155, 0, 0, "-", "npid_lib"], [166, 0, 0, "-", "npid_toolbox"]], "brails.processors.foundation_classifier.npid.npid_datasets": [[151, 2, 1, "", "CIFAR100Instance"], [151, 2, 1, "", "CIFAR10Instance"], [151, 2, 1, "", "CombinedMaskDataset"], [151, 2, 1, "", "ImageFolderInstance"], [151, 2, 1, "", "MNISTInstance"], [151, 2, 1, "", "MaskFolderInstance"], [152, 0, 0, "-", "cifar"], [153, 0, 0, "-", "folder"], [154, 0, 0, "-", "mnist"]], "brails.processors.foundation_classifier.npid.npid_datasets.CIFAR100Instance": [[151, 4, 1, "", "base_folder"], [151, 4, 1, "", "filename"], [151, 4, 1, "", "test_list"], [151, 4, 1, "", "tgz_md5"], [151, 4, 1, "", "train_list"], [151, 4, 1, "", "url"]], "brails.processors.foundation_classifier.npid.npid_datasets.CombinedMaskDataset": [[151, 3, 1, "", "loader"]], "brails.processors.foundation_classifier.npid.npid_datasets.cifar": [[152, 2, 1, "", "CIFAR100Instance"], [152, 2, 1, "", "CIFAR10Instance"]], "brails.processors.foundation_classifier.npid.npid_datasets.cifar.CIFAR100Instance": [[152, 4, 1, "", "base_folder"], [152, 4, 1, "", "data"], [152, 4, 1, "", "filename"], [152, 4, 1, "", "test_list"], [152, 4, 1, "", "tgz_md5"], [152, 4, 1, "", "train_list"], [152, 4, 1, "", "url"]], "brails.processors.foundation_classifier.npid.npid_datasets.folder": [[153, 2, 1, "", "CombinedMaskDataset"], [153, 2, 1, "", "ImageFolderInstance"], [153, 2, 1, "", "MaskFolderInstance"]], "brails.processors.foundation_classifier.npid.npid_datasets.folder.CombinedMaskDataset": [[153, 3, 1, "", "loader"]], "brails.processors.foundation_classifier.npid.npid_datasets.mnist": [[154, 2, 1, "", "MNISTInstance"]], "brails.processors.foundation_classifier.npid.npid_lib": [[156, 0, 0, "-", "LinearAverage"], [157, 0, 0, "-", "NCEAverage"], [158, 0, 0, "-", "NCECriterion"], [159, 0, 0, "-", "alias_multinomial"], [160, 0, 0, "-", "custom_transforms"], [161, 0, 0, "-", "normalize"], [162, 0, 0, "-", "utils"]], "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage": [[156, 2, 1, "", "LinearAverage"], [156, 2, 1, "", "LinearAverageOp"]], "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.LinearAverage": [[156, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage.LinearAverageOp": [[156, 3, 1, "", "backward"], [156, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage": [[157, 2, 1, "", "NCEAverage"], [157, 2, 1, "", "NCEFunction"]], "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.NCEAverage": [[157, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage.NCEFunction": [[157, 3, 1, "", "backward"], [157, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.npid.npid_lib.NCECriterion": [[158, 2, 1, "", "NCECriterion"]], "brails.processors.foundation_classifier.npid.npid_lib.NCECriterion.NCECriterion": [[158, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial": [[159, 2, 1, "", "AliasMethod"]], "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial.AliasMethod": [[159, 3, 1, "", "cuda"], [159, 3, 1, "", "draw"]], "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms": [[160, 2, 1, "", "AddGaussianNoise"], [160, 2, 1, "", "AddGaussianPoissonNoise"], [160, 2, 1, "", "AddSpeckleNoise"], [160, 2, 1, "", "BilinearResize"], [160, 2, 1, "", "CenterCropNumpy"], [160, 2, 1, "", "ElasticTransform"], [160, 2, 1, "", "EnhancedCompose"], [160, 2, 1, "", "MaxScaleNumpy"], [160, 2, 1, "", "MedianScaleNumpy"], [160, 2, 1, "", "Merge"], [160, 2, 1, "", "MutualExclude"], [160, 2, 1, "", "NormalizeNumpy"], [160, 2, 1, "", "PoissonSubsampling"], [160, 2, 1, "", "RandomCropNumpy"], [160, 2, 1, "", "RandomGaussianBlurring"], [160, 2, 1, "", "RandomRotate"], [160, 2, 1, "", "Split"], [160, 6, 1, "", "center_crop"], [160, 6, 1, "", "elastic_transform"], [160, 6, 1, "", "poisson_downsampling"], [160, 6, 1, "", "random_num_generator"], [160, 6, 1, "", "to_tensor"]], "brails.processors.foundation_classifier.npid.npid_lib.normalize": [[161, 2, 1, "", "Normalize"]], "brails.processors.foundation_classifier.npid.npid_lib.normalize.Normalize": [[161, 3, 1, "", "forward"]], "brails.processors.foundation_classifier.npid.npid_lib.utils": [[162, 2, 1, "", "AverageMeter"]], "brails.processors.foundation_classifier.npid.npid_lib.utils.AverageMeter": [[162, 3, 1, "", "reset"], [162, 3, 1, "", "update"]], "brails.processors.foundation_classifier.utils": [[172, 0, 0, "-", "Datasets"]], "brails.processors.foundation_classifier.utils.Datasets": [[172, 2, 1, "", "Foundation_Type_Binary"], [172, 2, 1, "", "Foundation_Type_Testset"]], "brails.processors.foundation_classifier.utils.Datasets.Foundation_Type_Testset": [[172, 4, 1, "", "filenames"], [172, 4, 1, "", "img_paths"], [172, 4, 1, "", "load_masks"], [172, 4, 1, "", "mask_buildings"], [172, 4, 1, "", "mask_paths"], [172, 4, 1, "", "transform"]], "brails.processors.garage_detector": [[176, 0, 0, "-", "lib"]], "brails.processors.garage_detector.lib": [[178, 0, 0, "-", "efficientdet"], [185, 0, 0, "-", "efficientnet"], [191, 0, 0, "-", "utils"]], "brails.processors.garage_detector.lib.efficientdet": [[179, 0, 0, "-", "coco"], [180, 0, 0, "-", "config"], [184, 0, 0, "-", "utils"]], "brails.processors.garage_detector.lib.efficientdet.coco": [[179, 2, 1, "", "COCO"]], "brails.processors.garage_detector.lib.efficientdet.coco.COCO": [[179, 3, 1, "", "createIndex"], [179, 3, 1, "", "getAnnIds"], [179, 3, 1, "", "getCatIds"], [179, 3, 1, "", "getImgIds"], [179, 3, 1, "", "info"], [179, 3, 1, "", "loadAnns"], [179, 3, 1, "", "loadCats"], [179, 3, 1, "", "loadImgs"]], "brails.processors.garage_detector.lib.efficientdet.utils": [[184, 2, 1, "", "Anchors"], [184, 2, 1, "", "BBoxTransform"], [184, 2, 1, "", "ClipBoxes"]], "brails.processors.garage_detector.lib.efficientdet.utils.Anchors": [[184, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientdet.utils.BBoxTransform": [[184, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientdet.utils.ClipBoxes": [[184, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientnet": [[186, 0, 0, "-", "model"], [187, 0, 0, "-", "utils"], [188, 0, 0, "-", "utils_extra"]], "brails.processors.garage_detector.lib.efficientnet.model": [[186, 2, 1, "", "EfficientNet"], [186, 2, 1, "", "MBConvBlock"]], "brails.processors.garage_detector.lib.efficientnet.model.EfficientNet": [[186, 3, 1, "", "extract_features"], [186, 3, 1, "", "forward"], [186, 3, 1, "", "from_name"], [186, 3, 1, "", "from_pretrained"], [186, 3, 1, "", "get_image_size"], [186, 3, 1, "", "set_swish"]], "brails.processors.garage_detector.lib.efficientnet.model.MBConvBlock": [[186, 3, 1, "", "forward"], [186, 4, 1, "", "has_se"], [186, 3, 1, "", "set_swish"]], "brails.processors.garage_detector.lib.efficientnet.utils": [[187, 2, 1, "", "BlockArgs"], [187, 2, 1, "", "BlockDecoder"], [187, 2, 1, "", "Conv2dDynamicSamePadding"], [187, 2, 1, "", "GlobalParams"], [187, 2, 1, "", "Identity"], [187, 2, 1, "", "MemoryEfficientSwish"], [187, 2, 1, "", "Swish"], [187, 2, 1, "", "SwishImplementation"], [187, 6, 1, "", "drop_connect"], [187, 6, 1, "", "efficientnet"], [187, 6, 1, "", "efficientnet_params"], [187, 6, 1, "", "get_model_params"], [187, 6, 1, "", "get_same_padding_conv2d"], [187, 6, 1, "", "load_pretrained_weights"], [187, 6, 1, "", "round_filters"], [187, 6, 1, "", "round_repeats"]], "brails.processors.garage_detector.lib.efficientnet.utils.BlockArgs": [[187, 4, 1, "", "expand_ratio"], [187, 4, 1, "", "id_skip"], [187, 4, 1, "", "input_filters"], [187, 4, 1, "", "kernel_size"], [187, 4, 1, "", "num_repeat"], [187, 4, 1, "", "output_filters"], [187, 4, 1, "", "se_ratio"], [187, 4, 1, "", "stride"]], "brails.processors.garage_detector.lib.efficientnet.utils.BlockDecoder": [[187, 3, 1, "", "decode"], [187, 3, 1, "", "encode"]], "brails.processors.garage_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding": [[187, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientnet.utils.GlobalParams": [[187, 4, 1, "", "batch_norm_epsilon"], [187, 4, 1, "", "batch_norm_momentum"], [187, 4, 1, "", "depth_coefficient"], [187, 4, 1, "", "depth_divisor"], [187, 4, 1, "", "drop_connect_rate"], [187, 4, 1, "", "dropout_rate"], [187, 4, 1, "", "image_size"], [187, 4, 1, "", "min_depth"], [187, 4, 1, "", "num_classes"], [187, 4, 1, "", "width_coefficient"]], "brails.processors.garage_detector.lib.efficientnet.utils.Identity": [[187, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientnet.utils.MemoryEfficientSwish": [[187, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientnet.utils.Swish": [[187, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientnet.utils.SwishImplementation": [[187, 3, 1, "", "backward"], [187, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientnet.utils_extra": [[188, 2, 1, "", "Conv2dStaticSamePadding"], [188, 2, 1, "", "MaxPool2dStaticSamePadding"]], "brails.processors.garage_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding": [[188, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding": [[188, 3, 1, "", "forward"]], "brails.processors.garage_detector.lib.utils": [[192, 0, 0, "-", "sync_batchnorm"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm": [[193, 0, 0, "-", "batchnorm"], [194, 0, 0, "-", "batchnorm_reimpl"], [195, 0, 0, "-", "comm"], [196, 0, 0, "-", "replicate"], [197, 0, 0, "-", "unittest"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm": [[193, 2, 1, "", "SynchronizedBatchNorm1d"], [193, 2, 1, "", "SynchronizedBatchNorm2d"], [193, 2, 1, "", "SynchronizedBatchNorm3d"], [193, 6, 1, "", "convert_model"], [193, 6, 1, "", "patch_sync_batchnorm"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl": [[194, 2, 1, "", "BatchNorm2dReimpl"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl": [[194, 3, 1, "", "forward"], [194, 3, 1, "", "reset_parameters"], [194, 3, 1, "", "reset_running_stats"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm": [[195, 2, 1, "", "FutureResult"], [195, 2, 1, "", "SlavePipe"], [195, 2, 1, "", "SyncMaster"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.FutureResult": [[195, 3, 1, "", "get"], [195, 3, 1, "", "put"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SlavePipe": [[195, 3, 1, "", "run_slave"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm.SyncMaster": [[195, 5, 1, "", "nr_slaves"], [195, 3, 1, "", "register_slave"], [195, 3, 1, "", "run_master"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate": [[196, 2, 1, "", "CallbackContext"], [196, 2, 1, "", "DataParallelWithCallback"], [196, 6, 1, "", "execute_replication_callbacks"], [196, 6, 1, "", "patch_replication_callback"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback": [[196, 3, 1, "", "replicate"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest": [[197, 2, 1, "", "TorchTestCase"]], "brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase": [[197, 3, 1, "", "assertTensorClose"]], "brails.processors.gpt_base_model": [[200, 0, 0, "-", "GPT"], [201, 0, 0, "-", "utils"]], "brails.processors.gpt_base_model.GPT": [[200, 2, 1, "", "GPT"]], "brails.processors.gpt_base_model.GPT.GPT": [[200, 3, 1, "", "predict"]], "brails.processors.gpt_base_model.utils": [[201, 6, 1, "", "encode_image"], [201, 6, 1, "", "find_json"], [201, 6, 1, "", "load_predictions_from_json"], [201, 6, 1, "", "prompt_and_save_caption"]], "brails.processors.image_classifier": [[203, 0, 0, "-", "image_classifier"]], "brails.processors.image_classifier.image_classifier": [[203, 2, 1, "", "ImageClassifier"]], "brails.processors.image_classifier.image_classifier.ImageClassifier": [[203, 3, 1, "", "predict"], [203, 3, 1, "", "retrain"], [203, 3, 1, "", "train"]], "brails.processors.image_processor": [[204, 2, 1, "", "ImageProcessor"]], "brails.processors.image_processor.ImageProcessor": [[204, 3, 1, "id0", "predict"]], "brails.processors.image_segmenter": [[206, 0, 0, "-", "image_segmenter"]], "brails.processors.image_segmenter.image_segmenter": [[206, 2, 1, "", "DatasetBinary"], [206, 2, 1, "", "DatasetRGB"], [206, 2, 1, "", "ImageSegmenter"]], "brails.processors.image_segmenter.image_segmenter.DatasetBinary": [[206, 3, 1, "", "__len__"], [206, 4, 1, "", "image_names"], [206, 4, 1, "", "mask_names"]], "brails.processors.image_segmenter.image_segmenter.DatasetRGB": [[206, 4, 1, "", "image_names"], [206, 4, 1, "", "mask_names"]], "brails.processors.image_segmenter.image_segmenter.ImageSegmenter": [[206, 4, 1, "", "batch_size"], [206, 4, 1, "", "classes"], [206, 4, 1, "", "device"], [206, 4, 1, "", "loss_history"], [206, 4, 1, "", "model_arch"], [206, 4, 1, "", "nepochs"], [206, 3, 1, "", "predict"], [206, 3, 1, "", "train"], [206, 4, 1, "", "train_data_dir"]], "brails.processors.nFloor_gpt": [[208, 0, 0, "-", "nFloor_gpt"]], "brails.processors.nFloor_gpt.nFloor_gpt": [[208, 2, 1, "", "NFloorGPT"]], "brails.processors.nFloor_gpt.nFloor_gpt.NFloorGPT": [[208, 3, 1, "", "predict"]], "brails.processors.nFloor_vlm": [[210, 0, 0, "-", "nFloor_vlm"]], "brails.processors.nFloor_vlm.nFloor_vlm": [[210, 2, 1, "", "NFloorVLM"]], "brails.processors.nfloors_detector": [[212, 0, 0, "-", "lib"]], "brails.processors.nfloors_detector.lib": [[214, 0, 0, "-", "efficientdet"], [221, 0, 0, "-", "efficientnet"], [227, 0, 0, "-", "utils"]], "brails.processors.nfloors_detector.lib.efficientdet": [[215, 0, 0, "-", "coco"], [216, 0, 0, "-", "config"], [220, 0, 0, "-", "utils"]], "brails.processors.nfloors_detector.lib.efficientdet.coco": [[215, 2, 1, "", "COCO"]], "brails.processors.nfloors_detector.lib.efficientdet.coco.COCO": [[215, 3, 1, "", "createIndex"], [215, 3, 1, "", "getAnnIds"], [215, 3, 1, "", "getCatIds"], [215, 3, 1, "", "getImgIds"], [215, 3, 1, "", "info"], [215, 3, 1, "", "loadAnns"], [215, 3, 1, "", "loadCats"], [215, 3, 1, "", "loadImgs"]], "brails.processors.nfloors_detector.lib.efficientdet.utils": [[220, 2, 1, "", "Anchors"], [220, 2, 1, "", "BBoxTransform"], [220, 2, 1, "", "ClipBoxes"]], "brails.processors.nfloors_detector.lib.efficientdet.utils.Anchors": [[220, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientdet.utils.BBoxTransform": [[220, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientdet.utils.ClipBoxes": [[220, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientnet": [[222, 0, 0, "-", "model"], [223, 0, 0, "-", "utils"], [224, 0, 0, "-", "utils_extra"]], "brails.processors.nfloors_detector.lib.efficientnet.model": [[222, 2, 1, "", "EfficientNet"], [222, 2, 1, "", "MBConvBlock"]], "brails.processors.nfloors_detector.lib.efficientnet.model.EfficientNet": [[222, 3, 1, "", "extract_features"], [222, 3, 1, "", "forward"], [222, 3, 1, "", "from_name"], [222, 3, 1, "", "from_pretrained"], [222, 3, 1, "", "get_image_size"], [222, 3, 1, "", "set_swish"]], "brails.processors.nfloors_detector.lib.efficientnet.model.MBConvBlock": [[222, 3, 1, "", "forward"], [222, 4, 1, "", "has_se"], [222, 3, 1, "", "set_swish"]], "brails.processors.nfloors_detector.lib.efficientnet.utils": [[223, 2, 1, "", "BlockArgs"], [223, 2, 1, "", "BlockDecoder"], [223, 2, 1, "", "Conv2dDynamicSamePadding"], [223, 2, 1, "", "GlobalParams"], [223, 2, 1, "", "Identity"], [223, 2, 1, "", "MemoryEfficientSwish"], [223, 2, 1, "", "Swish"], [223, 2, 1, "", "SwishImplementation"], [223, 6, 1, "", "drop_connect"], [223, 6, 1, "", "efficientnet"], [223, 6, 1, "", "efficientnet_params"], [223, 6, 1, "", "get_model_params"], [223, 6, 1, "", "get_same_padding_conv2d"], [223, 6, 1, "", "load_pretrained_weights"], [223, 6, 1, "", "round_filters"], [223, 6, 1, "", "round_repeats"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockArgs": [[223, 4, 1, "", "expand_ratio"], [223, 4, 1, "", "id_skip"], [223, 4, 1, "", "input_filters"], [223, 4, 1, "", "kernel_size"], [223, 4, 1, "", "num_repeat"], [223, 4, 1, "", "output_filters"], [223, 4, 1, "", "se_ratio"], [223, 4, 1, "", "stride"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.BlockDecoder": [[223, 3, 1, "", "decode"], [223, 3, 1, "", "encode"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.Conv2dDynamicSamePadding": [[223, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.GlobalParams": [[223, 4, 1, "", "batch_norm_epsilon"], [223, 4, 1, "", "batch_norm_momentum"], [223, 4, 1, "", "depth_coefficient"], [223, 4, 1, "", "depth_divisor"], [223, 4, 1, "", "drop_connect_rate"], [223, 4, 1, "", "dropout_rate"], [223, 4, 1, "", "image_size"], [223, 4, 1, "", "min_depth"], [223, 4, 1, "", "num_classes"], [223, 4, 1, "", "width_coefficient"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.Identity": [[223, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.MemoryEfficientSwish": [[223, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.Swish": [[223, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientnet.utils.SwishImplementation": [[223, 3, 1, "", "backward"], [223, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientnet.utils_extra": [[224, 2, 1, "", "Conv2dStaticSamePadding"], [224, 2, 1, "", "MaxPool2dStaticSamePadding"]], "brails.processors.nfloors_detector.lib.efficientnet.utils_extra.Conv2dStaticSamePadding": [[224, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.efficientnet.utils_extra.MaxPool2dStaticSamePadding": [[224, 3, 1, "", "forward"]], "brails.processors.nfloors_detector.lib.utils": [[228, 0, 0, "-", "sync_batchnorm"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm": [[229, 0, 0, "-", "batchnorm"], [230, 0, 0, "-", "batchnorm_reimpl"], [231, 0, 0, "-", "comm"], [232, 0, 0, "-", "replicate"], [233, 0, 0, "-", "unittest"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm": [[229, 2, 1, "", "SynchronizedBatchNorm1d"], [229, 2, 1, "", "SynchronizedBatchNorm2d"], [229, 2, 1, "", "SynchronizedBatchNorm3d"], [229, 6, 1, "", "convert_model"], [229, 6, 1, "", "patch_sync_batchnorm"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl": [[230, 2, 1, "", "BatchNorm2dReimpl"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl.BatchNorm2dReimpl": [[230, 3, 1, "", "forward"], [230, 3, 1, "", "reset_parameters"], [230, 3, 1, "", "reset_running_stats"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm": [[231, 2, 1, "", "FutureResult"], [231, 2, 1, "", "SlavePipe"], [231, 2, 1, "", "SyncMaster"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.FutureResult": [[231, 3, 1, "", "get"], [231, 3, 1, "", "put"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SlavePipe": [[231, 3, 1, "", "run_slave"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm.SyncMaster": [[231, 5, 1, "", "nr_slaves"], [231, 3, 1, "", "register_slave"], [231, 3, 1, "", "run_master"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate": [[232, 2, 1, "", "CallbackContext"], [232, 2, 1, "", "DataParallelWithCallback"], [232, 6, 1, "", "execute_replication_callbacks"], [232, 6, 1, "", "patch_replication_callback"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate.DataParallelWithCallback": [[232, 3, 1, "", "replicate"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest": [[233, 2, 1, "", "TorchTestCase"]], "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest.TorchTestCase": [[233, 3, 1, "", "assertTensorClose"]], "brails.processors.occupancy_classifier": [[237, 0, 0, "-", "occupancy_classifier"]], "brails.processors.occupancy_classifier.occupancy_classifier": [[237, 2, 1, "", "OccupancyClassifier"]], "brails.processors.occupancy_classifier.occupancy_classifier.OccupancyClassifier": [[237, 3, 1, "id0", "predict"], [237, 3, 1, "", "retrain"]], "brails.processors.other_idea": [[239, 0, 0, "-", "arial_processing"], [240, 0, 0, "-", "street_processor"]], "brails.processors.other_idea.arial_processing": [[239, 2, 1, "", "ArialProcessing"]], "brails.processors.other_idea.arial_processing.ArialProcessing": [[239, 3, 1, "", "predict"]], "brails.processors.other_idea.street_processor": [[240, 2, 1, "", "StreetProcessor"]], "brails.processors.other_idea.street_processor.StreetProcessor": [[240, 3, 1, "", "predict"]], "brails.processors.roof_shape_classifier": [[242, 0, 0, "-", "roof_shape_classifier"]], "brails.processors.roof_shape_classifier.roof_shape_classifier": [[242, 2, 1, "", "RoofShapeClassifier"]], "brails.processors.roof_shape_classifier.roof_shape_classifier.RoofShapeClassifier": [[242, 3, 1, "", "predict"], [242, 3, 1, "", "retrain"]], "brails.processors.roof_shape_gpt": [[244, 0, 0, "-", "roof_shape_gpt"]], "brails.processors.roof_shape_gpt.roof_shape_gpt": [[244, 2, 1, "", "RoofShapeGPT"]], "brails.processors.roof_shape_gpt.roof_shape_gpt.RoofShapeGPT": [[244, 3, 1, "", "predict"]], "brails.processors.roof_shape_vlm": [[246, 0, 0, "-", "roof_shape_vlm"]], "brails.processors.roof_shape_vlm.roof_shape_vlm": [[246, 2, 1, "", "RoofShapeVLM"]], "brails.processors.street_level_damage_detection": [[248, 0, 0, "-", "street_level_damage_detection"]], "brails.processors.street_level_damage_detection.street_level_damage_detection": [[248, 2, 1, "", "DamageDetection_StreetLevel"]], "brails.processors.street_level_damage_detection.street_level_damage_detection.DamageDetection_StreetLevel": [[248, 4, 1, "", "classes"], [248, 3, 1, "", "predict"], [248, 4, 1, "", "text_prompts"]], "brails.processors.vlm_image_classifier": [[250, 0, 0, "-", "CLIPClassifier"], [251, 0, 0, "-", "clip"]], "brails.processors.vlm_image_classifier.CLIPClassifier": [[250, 2, 1, "", "CLIPClassifier"]], "brails.processors.vlm_image_classifier.CLIPClassifier.CLIPClassifier": [[250, 4, 1, "", "batch_size"], [250, 4, 1, "", "device"], [250, 4, 1, "", "model_arch"], [250, 3, 1, "", "predict"], [250, 4, 1, "", "template"]], "brails.processors.vlm_image_classifier.clip": [[252, 0, 0, "-", "clip"], [253, 0, 0, "-", "model"], [254, 0, 0, "-", "simple_tokenizer"], [255, 0, 0, "-", "utils"]], "brails.processors.vlm_image_classifier.clip.clip": [[252, 6, 1, "", "available_models"], [252, 6, 1, "", "load"], [252, 6, 1, "", "tokenize"]], "brails.processors.vlm_image_classifier.clip.model": [[253, 2, 1, "", "AttentionPool2d"], [253, 2, 1, "", "Bottleneck"], [253, 2, 1, "", "CLIP"], [253, 2, 1, "", "LayerNorm"], [253, 2, 1, "", "ModifiedResNet"], [253, 2, 1, "", "QuickGELU"], [253, 2, 1, "", "ResidualAttentionBlock"], [253, 2, 1, "", "Transformer"], [253, 2, 1, "", "VisionTransformer"], [253, 6, 1, "", "build_model"], [253, 6, 1, "", "convert_weights"]], "brails.processors.vlm_image_classifier.clip.model.AttentionPool2d": [[253, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.model.Bottleneck": [[253, 4, 1, "", "expansion"], [253, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.model.CLIP": [[253, 3, 1, "", "build_attention_mask"], [253, 5, 1, "", "dtype"], [253, 3, 1, "", "encode_image"], [253, 3, 1, "", "encode_text"], [253, 3, 1, "", "forward"], [253, 3, 1, "", "initialize_parameters"]], "brails.processors.vlm_image_classifier.clip.model.LayerNorm": [[253, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.model.ModifiedResNet": [[253, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.model.QuickGELU": [[253, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.model.ResidualAttentionBlock": [[253, 3, 1, "", "attention"], [253, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.model.Transformer": [[253, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.model.VisionTransformer": [[253, 3, 1, "", "forward"]], "brails.processors.vlm_image_classifier.clip.simple_tokenizer": [[254, 2, 1, "", "SimpleTokenizer"], [254, 6, 1, "", "basic_clean"], [254, 6, 1, "", "bytes_to_unicode"], [254, 6, 1, "", "default_bpe"], [254, 6, 1, "", "get_pairs"], [254, 6, 1, "", "whitespace_clean"]], "brails.processors.vlm_image_classifier.clip.simple_tokenizer.SimpleTokenizer": [[254, 3, 1, "", "bpe"], [254, 3, 1, "", "decode"], [254, 3, 1, "", "encode"]], "brails.processors.vlm_image_classifier.clip.utils": [[255, 6, 1, "", "aggregate_predictions"], [255, 6, 1, "", "compute_similarity"], [255, 6, 1, "", "pred_idx_to_labels"], [255, 6, 1, "", "predict_wrapper"], [255, 6, 1, "", "preprocess_batch_img"], [255, 6, 1, "", "round"]], "brails.processors.vlm_segmenter": [[257, 0, 0, "-", "grounded_sam_utils"], [258, 0, 0, "-", "segment_anything"], [275, 0, 0, "-", "vlm_segmenter"]], "brails.processors.vlm_segmenter.grounded_sam_utils": [[257, 2, 1, "", "BoundingBox"], [257, 2, 1, "", "DetectionResult"], [257, 6, 1, "", "build_models"], [257, 6, 1, "", "detect"], [257, 6, 1, "", "run_on_one_image"], [257, 6, 1, "", "segment"], [257, 6, 1, "", "show_binary_mask"], [257, 6, 1, "", "show_box"], [257, 6, 1, "", "show_points"], [257, 6, 1, "", "verify_and_download_models"]], "brails.processors.vlm_segmenter.grounded_sam_utils.BoundingBox": [[257, 4, 1, "", "xmax"], [257, 4, 1, "", "xmin"], [257, 5, 1, "", "xyxy"], [257, 4, 1, "", "ymax"], [257, 4, 1, "", "ymin"]], "brails.processors.vlm_segmenter.grounded_sam_utils.DetectionResult": [[257, 4, 1, "", "box"], [257, 3, 1, "", "from_dict"], [257, 4, 1, "", "label"], [257, 4, 1, "", "mask"], [257, 4, 1, "", "score"]], "brails.processors.vlm_segmenter.segment_anything": [[259, 0, 0, "-", "automatic_mask_generator"], [260, 0, 0, "-", "build_sam"], [261, 0, 0, "-", "build_sam_hq"], [262, 0, 0, "-", "modeling"], [270, 0, 0, "-", "predictor"], [271, 0, 0, "-", "utils"]], "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator": [[259, 2, 1, "", "SamAutomaticMaskGenerator"]], "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator.SamAutomaticMaskGenerator": [[259, 3, 1, "", "generate"], [259, 3, 1, "", "postprocess_small_regions"]], "brails.processors.vlm_segmenter.segment_anything.build_sam": [[260, 6, 1, "", "build_sam"], [260, 6, 1, "", "build_sam_vit_b"], [260, 6, 1, "", "build_sam_vit_h"], [260, 6, 1, "", "build_sam_vit_l"]], "brails.processors.vlm_segmenter.segment_anything.build_sam_hq": [[261, 6, 1, "", "build_sam_hq"], [261, 6, 1, "", "build_sam_hq_vit_b"], [261, 6, 1, "", "build_sam_hq_vit_h"], [261, 6, 1, "", "build_sam_hq_vit_l"]], "brails.processors.vlm_segmenter.segment_anything.modeling": [[263, 0, 0, "-", "common"], [264, 0, 0, "-", "image_encoder"], [265, 0, 0, "-", "mask_decoder"], [266, 0, 0, "-", "mask_decoder_hq"], [267, 0, 0, "-", "prompt_encoder"], [268, 0, 0, "-", "sam"], [269, 0, 0, "-", "transformer"]], "brails.processors.vlm_segmenter.segment_anything.modeling.common": [[263, 2, 1, "", "LayerNorm2d"], [263, 2, 1, "", "MLPBlock"]], "brails.processors.vlm_segmenter.segment_anything.modeling.common.LayerNorm2d": [[263, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.common.MLPBlock": [[263, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder": [[264, 2, 1, "", "Attention"], [264, 2, 1, "", "Block"], [264, 2, 1, "", "ImageEncoderViT"], [264, 2, 1, "", "PatchEmbed"], [264, 6, 1, "", "add_decomposed_rel_pos"], [264, 6, 1, "", "get_rel_pos"], [264, 6, 1, "", "window_partition"], [264, 6, 1, "", "window_unpartition"]], "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.Attention": [[264, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.Block": [[264, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.ImageEncoderViT": [[264, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder.PatchEmbed": [[264, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder": [[265, 2, 1, "", "MLP"], [265, 2, 1, "", "MaskDecoder"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.MLP": [[265, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder.MaskDecoder": [[265, 3, 1, "", "forward"], [265, 3, 1, "", "predict_masks"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq": [[266, 2, 1, "", "MLP"], [266, 2, 1, "", "MaskDecoderHQ"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.MLP": [[266, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq.MaskDecoderHQ": [[266, 3, 1, "", "forward"], [266, 3, 1, "", "predict_masks"]], "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder": [[267, 2, 1, "", "PositionEmbeddingRandom"], [267, 2, 1, "", "PromptEncoder"]], "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PositionEmbeddingRandom": [[267, 3, 1, "", "forward"], [267, 3, 1, "", "forward_with_coords"]], "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder.PromptEncoder": [[267, 3, 1, "", "forward"], [267, 3, 1, "", "get_dense_pe"]], "brails.processors.vlm_segmenter.segment_anything.modeling.sam": [[268, 2, 1, "", "Sam"]], "brails.processors.vlm_segmenter.segment_anything.modeling.sam.Sam": [[268, 5, 1, "", "device"], [268, 3, 1, "", "forward"], [268, 4, 1, "", "image_format"], [268, 4, 1, "", "mask_threshold"], [268, 3, 1, "", "postprocess_masks"], [268, 3, 1, "", "preprocess"]], "brails.processors.vlm_segmenter.segment_anything.modeling.transformer": [[269, 2, 1, "", "Attention"], [269, 2, 1, "", "TwoWayAttentionBlock"], [269, 2, 1, "", "TwoWayTransformer"]], "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.Attention": [[269, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.TwoWayAttentionBlock": [[269, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.modeling.transformer.TwoWayTransformer": [[269, 3, 1, "", "forward"]], "brails.processors.vlm_segmenter.segment_anything.predictor": [[270, 2, 1, "", "SamPredictor"]], "brails.processors.vlm_segmenter.segment_anything.predictor.SamPredictor": [[270, 5, 1, "", "device"], [270, 3, 1, "", "get_image_embedding"], [270, 3, 1, "", "predict"], [270, 3, 1, "", "predict_torch"], [270, 3, 1, "", "reset_image"], [270, 3, 1, "", "set_image"], [270, 3, 1, "", "set_torch_image"]], "brails.processors.vlm_segmenter.segment_anything.utils": [[272, 0, 0, "-", "amg"], [273, 0, 0, "-", "onnx"], [274, 0, 0, "-", "transforms"]], "brails.processors.vlm_segmenter.segment_anything.utils.amg": [[272, 2, 1, "", "MaskData"], [272, 6, 1, "", "area_from_rle"], [272, 6, 1, "", "batch_iterator"], [272, 6, 1, "", "batched_mask_to_box"], [272, 6, 1, "", "box_xyxy_to_xywh"], [272, 6, 1, "", "build_all_layer_point_grids"], [272, 6, 1, "", "build_point_grid"], [272, 6, 1, "", "calculate_stability_score"], [272, 6, 1, "", "coco_encode_rle"], [272, 6, 1, "", "generate_crop_boxes"], [272, 6, 1, "", "is_box_near_crop_edge"], [272, 6, 1, "", "mask_to_rle_pytorch"], [272, 6, 1, "", "remove_small_regions"], [272, 6, 1, "", "rle_to_mask"], [272, 6, 1, "", "uncrop_boxes_xyxy"], [272, 6, 1, "", "uncrop_masks"], [272, 6, 1, "", "uncrop_points"]], "brails.processors.vlm_segmenter.segment_anything.utils.amg.MaskData": [[272, 3, 1, "", "cat"], [272, 3, 1, "", "filter"], [272, 3, 1, "", "items"], [272, 3, 1, "", "to_numpy"]], "brails.processors.vlm_segmenter.segment_anything.utils.onnx": [[273, 2, 1, "", "SamOnnxModel"]], "brails.processors.vlm_segmenter.segment_anything.utils.onnx.SamOnnxModel": [[273, 3, 1, "", "forward"], [273, 3, 1, "", "mask_postprocessing"], [273, 3, 1, "", "resize_longest_image_size"], [273, 3, 1, "", "select_masks"]], "brails.processors.vlm_segmenter.segment_anything.utils.transforms": [[274, 2, 1, "", "ResizeLongestSide"]], "brails.processors.vlm_segmenter.segment_anything.utils.transforms.ResizeLongestSide": [[274, 3, 1, "", "apply_boxes"], [274, 3, 1, "", "apply_boxes_torch"], [274, 3, 1, "", "apply_coords"], [274, 3, 1, "", "apply_coords_torch"], [274, 3, 1, "", "apply_image"], [274, 3, 1, "", "apply_image_torch"], [274, 3, 1, "", "get_preprocess_shape"]], "brails.processors.vlm_segmenter.vlm_segmenter": [[275, 2, 1, "", "VLMSegmenter"]], "brails.processors.vlm_segmenter.vlm_segmenter.VLMSegmenter": [[275, 3, 1, "", "predict"], [275, 3, 1, "", "write_dict"]], "brails.processors.year_built_classifier": [[277, 0, 0, "-", "Resnet"], [279, 0, 0, "-", "lib"], [282, 0, 0, "-", "model"], [284, 0, 0, "-", "weights"], [285, 0, 0, "-", "year_built_classifier"]], "brails.processors.year_built_classifier.Resnet": [[277, 2, 1, "", "ResNet"], [277, 6, 1, "", "resnet101"], [277, 6, 1, "", "resnet152"], [277, 6, 1, "", "resnet18"], [277, 6, 1, "", "resnet34"], [277, 6, 1, "", "resnet50"], [277, 6, 1, "", "resnext101_32x8d"], [277, 6, 1, "", "resnext50_32x4d"]], "brails.processors.year_built_classifier.Resnet.ResNet": [[277, 3, 1, "", "forward"]], "brails.processors.year_built_classifier.lib": [[280, 0, 0, "-", "datasets"], [281, 0, 0, "-", "utils"]], "brails.processors.year_built_classifier.lib.datasets": [[280, 2, 1, "", "YearBuiltFolder"]], "brails.processors.year_built_classifier.lib.datasets.YearBuiltFolder": [[280, 3, 1, "", "__len__"], [280, 4, 1, "", "calc_perf"], [280, 4, 1, "", "class_weights"], [280, 4, 1, "", "classes"], [280, 4, 1, "", "filenames"], [280, 4, 1, "", "img_paths"], [280, 4, 1, "", "labels"], [280, 3, 1, "", "loader"], [280, 4, 1, "", "soft_labels"], [280, 4, 1, "", "train_weights"], [280, 4, 1, "", "transforms"]], "brails.processors.year_built_classifier.lib.utils": [[281, 6, 1, "", "construct_confusion_matrix_image"], [281, 6, 1, "", "cosine_anneal_schedule"], [281, 6, 1, "", "jigsaw_generator"], [281, 6, 1, "", "load_model"], [281, 6, 1, "", "model_info"], [281, 6, 1, "", "test"], [281, 6, 1, "", "test_softlabels"]], "brails.processors.year_built_classifier.model": [[282, 2, 1, "", "BasicConv"], [282, 2, 1, "", "PMG"]], "brails.processors.year_built_classifier.model.BasicConv": [[282, 3, 1, "", "forward"]], "brails.processors.year_built_classifier.model.PMG": [[282, 3, 1, "", "forward"]], "brails.processors.year_built_classifier.year_built_classifier": [[285, 2, 1, "", "YearBuiltClassifier"]], "brails.processors.year_built_classifier.year_built_classifier.YearBuiltClassifier": [[285, 4, 1, "", "checkpoint"], [285, 4, 1, "", "checkpoints_dir"], [285, 4, 1, "", "classes"], [285, 3, 1, "", "construct_confusion_matrix_image"], [285, 4, 1, "", "device"], [285, 3, 1, "", "evaluate_to_stats"], [285, 4, 1, "", "model"], [285, 4, 1, "", "model_file"], [285, 3, 1, "", "predict"], [285, 4, 1, "", "print_res"], [285, 4, 1, "", "test_transforms"], [285, 4, 1, "", "work_dir"]], "brails.scrapers": [[287, 0, 0, "-", "asce_hazard_data_scraper"], [289, 0, 0, "-", "asset_data_augmenter"], [290, 0, 0, "-", "fema_firm_scraper"], [292, 0, 0, "-", "footprint_scraper"], [293, 0, 0, "-", "google_satellite"], [295, 0, 0, "-", "google_streetview"], [297, 0, 0, "-", "image_scraper"], [298, 0, 0, "-", "ms_footprint_scraper"], [300, 0, 0, "-", "nbi_scraper"], [302, 0, 0, "-", "nsi_parser"], [304, 0, 0, "-", "nti_scraper"], [306, 0, 0, "-", "osm_footprint_scraper"], [308, 0, 0, "-", "osm_power_network_scraper"], [310, 0, 0, "-", "overture_maps_scraper"], [313, 0, 0, "-", "usa_footprint_scraper"], [315, 0, 0, "-", "user_footprints"], [316, 0, 0, "-", "usgs_data_scrapers"]], "brails.scrapers.asset_data_augmenter": [[289, 2, 1, "", "AssetDataAugmenter"]], "brails.scrapers.asset_data_augmenter.AssetDataAugmenter": [[289, 3, 1, "", "populate_feature"]], "brails.scrapers.fema_firm_scraper": [[291, 0, 0, "-", "fema_firm_scraper"]], "brails.scrapers.fema_firm_scraper.fema_firm_scraper": [[291, 2, 1, "", "FEMAFIRMScraper"]], "brails.scrapers.fema_firm_scraper.fema_firm_scraper.FEMAFIRMScraper": [[291, 3, 1, "", "get_available_attributes"], [291, 3, 1, "", "populate_feature"]], "brails.scrapers.footprint_scraper": [[292, 2, 1, "", "FootprintScraper"]], "brails.scrapers.footprint_scraper.FootprintScraper": [[292, 4, 1, "", "centroids"], [292, 4, 1, "", "footprints"], [292, 3, 1, "id0", "get_footprints"], [292, 4, 1, "", "name"]], "brails.scrapers.google_satellite": [[294, 0, 0, "-", "google_satellite"]], "brails.scrapers.google_satellite.google_satellite": [[294, 2, 1, "", "GoogleSatellite"]], "brails.scrapers.google_satellite.google_satellite.GoogleSatellite": [[294, 3, 1, "", "get_images"]], "brails.scrapers.google_streetview": [[296, 0, 0, "-", "google_streetview"]], "brails.scrapers.google_streetview.google_streetview": [[296, 2, 1, "", "GoogleStreetview"]], "brails.scrapers.google_streetview.google_streetview.GoogleStreetview": [[296, 4, 1, "", "api_key"], [296, 3, 1, "", "get_images"]], "brails.scrapers.image_scraper": [[297, 2, 1, "", "ImageScraper"]], "brails.scrapers.image_scraper.ImageScraper": [[297, 3, 1, "", "get_images"]], "brails.scrapers.ms_footprint_scraper": [[299, 0, 0, "-", "ms_footprint_handler"]], "brails.scrapers.ms_footprint_scraper.ms_footprint_handler": [[299, 2, 1, "", "MS_FootprintScraper"]], "brails.scrapers.ms_footprint_scraper.ms_footprint_handler.MS_FootprintScraper": [[299, 3, 1, "", "get_footprints"], [299, 4, 1, "", "length_unit"]], "brails.scrapers.nbi_scraper": [[301, 0, 0, "-", "nbi_scraper"]], "brails.scrapers.nbi_scraper.nbi_scraper": [[301, 2, 1, "", "NBIScraper"]], "brails.scrapers.nbi_scraper.nbi_scraper.NBIScraper": [[301, 3, 1, "", "get_assets"], [301, 4, 1, "", "inventory"], [301, 4, 1, "", "length_unit"]], "brails.scrapers.nsi_parser": [[303, 0, 0, "-", "nsi_parser"]], "brails.scrapers.nsi_parser.nsi_parser": [[303, 2, 1, "", "NSI_Parser"]], "brails.scrapers.nsi_parser.nsi_parser.NSI_Parser": [[303, 3, 1, "", "GetNSIData"], [303, 4, 1, "", "attributes"], [303, 4, 1, "", "brails2r2dmap"], [303, 4, 1, "", "footprints"], [303, 3, 1, "", "get_filtered_data_given_inventory"], [303, 3, 1, "", "get_raw_data"], [303, 4, 1, "", "nsi2brailsmap"]], "brails.scrapers.nti_scraper": [[305, 0, 0, "-", "nti_scraper"]], "brails.scrapers.nti_scraper.nti_scraper": [[305, 2, 1, "", "NTIScraper"]], "brails.scrapers.nti_scraper.nti_scraper.NTIScraper": [[305, 3, 1, "", "get_assets"], [305, 4, 1, "", "inventory"], [305, 4, 1, "", "length_unit"]], "brails.scrapers.osm_footprint_scraper": [[307, 0, 0, "-", "osm_footprint_scraper"]], "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper": [[307, 2, 1, "", "OSM_FootprintScraper"]], "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper.OSM_FootprintScraper": [[307, 3, 1, "", "get_footprints"], [307, 4, 1, "", "length_unit"]], "brails.scrapers.osm_power_network_scraper": [[309, 0, 0, "-", "osm_power_network_scraper"]], "brails.scrapers.osm_power_network_scraper.osm_power_network_scraper": [[309, 2, 1, "", "OSM_PowerNetworkScraper"]], "brails.scrapers.osm_power_network_scraper.osm_power_network_scraper.OSM_PowerNetworkScraper": [[309, 3, 1, "", "get_elements"], [309, 4, 1, "", "length_unit"]], "brails.scrapers.overture_maps_scraper": [[311, 0, 0, "-", "overture_maps_footprint_scraper"], [312, 0, 0, "-", "overture_maps_scraper"]], "brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper": [[311, 2, 1, "", "OvertureMapsFootprintScraper"]], "brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper.OvertureMapsFootprintScraper": [[311, 3, 1, "", "get_footprints"]], "brails.scrapers.overture_maps_scraper.overture_maps_scraper": [[312, 2, 1, "", "OvertureMapsScraper"]], "brails.scrapers.overture_maps_scraper.overture_maps_scraper.OvertureMapsScraper": [[312, 3, 1, "", "fetch_release_names"], [312, 3, 1, "", "normalize_bbox_order"]], "brails.scrapers.usa_footprint_scraper": [[314, 0, 0, "-", "usa_footprint_scraper"]], "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper": [[314, 2, 1, "", "USA_FootprintScraper"]], "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper.USA_FootprintScraper": [[314, 3, 1, "", "get_footprints"], [314, 4, 1, "", "length_unit"]], "brails.scrapers.user_footprints": [[315, 2, 1, "", "UserFootprint"]], "brails.scrapers.user_footprints.UserFootprint": [[315, 3, 1, "", "fetch_footprint_data"]], "brails.scrapers.usgs_data_scrapers": [[317, 0, 0, "-", "nlcd_scraper"], [318, 0, 0, "-", "usgs_elevation_scraper"]], "brails.scrapers.usgs_data_scrapers.nlcd_scraper": [[317, 2, 1, "", "NLCDScraper"]], "brails.scrapers.usgs_data_scrapers.nlcd_scraper.NLCDScraper": [[317, 3, 1, "", "populate_feature"]], "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper": [[318, 2, 1, "", "USGSElevationScraper"]], "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper.USGSElevationScraper": [[318, 3, 1, "", "fetch_all_elevations"], [318, 3, 1, "", "get_elevation_usgs"], [318, 3, 1, "", "get_region_elevation_data"], [318, 3, 1, "", "populate_feature"], [318, 3, 1, "", "supported_asset_elevation_modes"]], "brails.types": [[320, 0, 0, "-", "asset_inventory"], [321, 0, 0, "-", "image_set"], [322, 0, 0, "-", "region_boundary"]], "brails.types.asset_inventory": [[320, 2, 1, "", "Asset"], [320, 2, 1, "", "AssetInventory"], [320, 6, 1, "", "clean_floats"]], "brails.types.asset_inventory.Asset": [[320, 3, 1, "", "add_features"], [320, 3, 1, "", "get_centroid"], [320, 3, 1, "", "print_info"], [320, 3, 1, "", "remove_features"]], "brails.types.asset_inventory.AssetInventory": [[320, 3, 1, "", "add_asset"], [320, 3, 1, "", "add_asset_coordinates"], [320, 3, 1, "", "add_asset_features"], [320, 3, 1, "", "add_asset_features_from_csv"], [320, 3, 1, "", "add_model_predictions"], [320, 3, 1, "", "change_feature_names"], [320, 3, 1, "", "convert_polygons_to_centroids"], [320, 3, 1, "", "get_asset_coordinates"], [320, 3, 1, "", "get_asset_features"], [320, 3, 1, "", "get_asset_ids"], [320, 3, 1, "", "get_coordinates"], [320, 3, 1, "", "get_dataframe"], [320, 3, 1, "", "get_extent"], [320, 3, 1, "", "get_geojson"], [320, 3, 1, "", "get_multi_keys"], [320, 3, 1, "", "get_n_pw"], [320, 3, 1, "", "get_random_sample"], [320, 3, 1, "", "get_world_realization"], [320, 3, 1, "", "join"], [320, 3, 1, "", "print_info"], [320, 3, 1, "", "read_from_csv"], [320, 3, 1, "", "remove_asset"], [320, 3, 1, "", "remove_features"], [320, 3, 1, "", "update_world_realization"], [320, 3, 1, "", "write_to_geojson"]], "brails.types.image_set": [[321, 2, 1, "", "Image"], [321, 2, 1, "", "ImageSet"]], "brails.types.image_set.Image": [[321, 3, 1, "", "print_info"], [321, 3, 1, "", "update_filename"], [321, 3, 1, "", "update_properties"]], "brails.types.image_set.ImageSet": [[321, 3, 1, "", "add_image"], [321, 3, 1, "", "get_image"], [321, 3, 1, "", "print_info"], [321, 3, 1, "", "set_directory"]], "brails.types.region_boundary": [[322, 2, 1, "", "RegionBoundary"], [322, 2, 1, "", "RegionInput"]], "brails.types.region_boundary.RegionBoundary": [[322, 3, 1, "", "get_boundary"]], "brails.utils": [[324, 0, 0, "-", "arcgisapi_service_helper"], [325, 0, 0, "-", "geo_tools"], [326, 0, 0, "-", "importer"], [327, 0, 0, "-", "input_validator"], [328, 0, 0, "-", "inventory_validator"], [329, 0, 0, "-", "model_utils"], [330, 0, 0, "-", "plot_tools"], [331, 0, 0, "-", "rapid_utils"], [332, 0, 0, "-", "segmentation_utils"], [333, 0, 0, "-", "spatial_join_methods"], [338, 0, 0, "-", "unit_converter"]], "brails.utils.arcgisapi_service_helper": [[324, 2, 1, "", "ArcgisAPIServiceHelper"]], "brails.utils.arcgisapi_service_helper.ArcgisAPIServiceHelper": [[324, 3, 1, "", "categorize_and_split_cells"], [324, 3, 1, "", "download_all_attr_for_region"], [324, 3, 1, "", "download_all_attr_from_api"], [324, 3, 1, "", "download_attr_from_api"], [324, 3, 1, "", "fetch_api_fields"], [324, 3, 1, "", "fetch_data_for_cells"], [324, 3, 1, "", "fetch_max_records_per_query"], [324, 3, 1, "", "get_element_counts"], [324, 3, 1, "", "split_polygon_into_cells"]], "brails.utils.geo_tools": [[325, 2, 1, "", "GeoTools"]], "brails.utils.geo_tools.GeoTools": [[325, 3, 1, "", "bbox2poly"], [325, 3, 1, "", "geometry_to_list_of_lists"], [325, 3, 1, "", "haversine_dist"], [325, 3, 1, "", "match_points_to_polygons"], [325, 3, 1, "", "mesh_polygon"], [325, 3, 1, "", "plot_polygon_cells"], [325, 3, 1, "", "write_polygon_to_geojson"]], "brails.utils.importer": [[326, 2, 1, "", "Importer"]], "brails.utils.importer.Importer": [[326, 3, 1, "", "get_class"], [326, 3, 1, "", "get_object"]], "brails.utils.input_validator": [[327, 2, 1, "", "InputValidator"]], "brails.utils.input_validator.InputValidator": [[327, 3, 1, "", "is_box"], [327, 3, 1, "", "is_float"], [327, 3, 1, "", "is_image"], [327, 3, 1, "", "is_linestring"], [327, 3, 1, "", "is_multilinestring"], [327, 3, 1, "", "is_multipolygon"], [327, 3, 1, "", "is_point"], [327, 3, 1, "", "is_polygon"], [327, 3, 1, "", "validate_coordinates"]], "brails.utils.inventory_validator": [[328, 2, 1, "", "InventoryValidator"]], "brails.utils.inventory_validator.InventoryValidator": [[328, 3, 1, "", "is_inventory"], [328, 3, 1, "", "validate_inventory"]], "brails.utils.model_utils": [[329, 2, 1, "", "ModelUtils"]], "brails.utils.model_utils.ModelUtils": [[329, 3, 1, "", "get_model_path"]], "brails.utils.plot_tools": [[330, 2, 1, "", "PlotTools"]], "brails.utils.plot_tools.PlotTools": [[330, 3, 1, "", "plot_images"], [330, 3, 1, "", "show_predictions"]], "brails.utils.rapid_utils": [[331, 2, 1, "", "RAPIDUtils"]], "brails.utils.rapid_utils.RAPIDUtils": [[331, 3, 1, "", "extract_aerial_imagery"], [331, 3, 1, "", "get_mosaic_bbox_wgs84"]], "brails.utils.segmentation_utils": [[332, 2, 1, "", "SegmentationUtils"]], "brails.utils.segmentation_utils.SegmentationUtils": [[332, 3, 1, "", "create_overlaid_image"], [332, 3, 1, "", "decode_segmap"]], "brails.utils.spatial_join_methods": [[334, 0, 0, "-", "base"], [335, 0, 0, "-", "distance_based_point_matcher"], [336, 0, 0, "-", "get_points_in_polygons"], [337, 0, 0, "-", "get_points_near_polygons"]], "brails.utils.spatial_join_methods.base": [[334, 2, 1, "", "SpatialJoinMethods"]], "brails.utils.spatial_join_methods.base.SpatialJoinMethods": [[334, 3, 1, "", "execute"], [334, 3, 1, "", "join_inventories"]], "brails.utils.spatial_join_methods.distance_based_point_matcher": [[335, 2, 1, "", "DistanceBasedPointMatcher"]], "brails.utils.spatial_join_methods.get_points_in_polygons": [[336, 2, 1, "", "GetPointsInPolygons"]], "brails.utils.spatial_join_methods.get_points_in_polygons.GetPointsInPolygons": [[336, 3, 1, "", "_join_implementation"]], "brails.utils.spatial_join_methods.get_points_near_polygons": [[337, 2, 1, "", "GetPointsNearPolygons"]], "brails.utils.spatial_join_methods.get_points_near_polygons.GetPointsNearPolygons": [[337, 3, 1, "", "_join_implementation"]], "brails.utils.unit_converter": [[338, 2, 1, "", "UnitConverter"]], "brails.utils.unit_converter.UnitConverter": [[338, 3, 1, "", "convert_area"], [338, 3, 1, "", "convert_length"], [338, 3, 1, "", "convert_unit"], [338, 3, 1, "", "convert_weight"], [338, 3, 1, "", "get_supported_units"], [338, 3, 1, "", "get_unit_type"], [338, 3, 1, "", "normalize_unit"], [338, 3, 1, "", "parse_units"], [338, 3, 1, "", "unit_valid"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "exception", "Python exception"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:exception", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:function"}, "terms": {"": [2, 3, 5, 6, 8, 23, 53, 80, 107, 129, 193, 206, 229, 252, 253, 259, 268, 270, 299, 311, 315, 317, 318, 320, 322, 324, 325, 329, 331, 337, 338, 343], "0": [0, 1, 7, 8, 16, 20, 51, 66, 71, 73, 74, 80, 81, 83, 94, 107, 109, 110, 112, 116, 118, 129, 130, 134, 135, 138, 144, 156, 157, 160, 179, 184, 186, 187, 193, 194, 196, 206, 215, 220, 222, 223, 229, 230, 232, 252, 257, 259, 264, 267, 268, 270, 272, 282, 311, 312, 320, 324, 325, 327, 331], "00": [311, 318, 324, 329, 331], "000z": 318, "001": [94, 107, 110, 320], "0055": 320, "0058": 320, "006": 320, "0060": 320, "01": [7, 312, 331], "0142": 321, "02": [311, 312, 320, 324], "022": 8, "02409": 8, "03": [8, 137, 159, 312, 318], "031": 324, "04": [312, 329, 331], "0406417365415": 324, "0406430242604": 324, "0406440782071": 324, "0407349647641": 324, "0408091186429": 324, "0408560099184": 324, "04096427197": 324, "0409659050115": 324, "0409678617538": 324, "0409913987935": 324, "0409990828814": 324, "041": 324, "0410085657733": 324, "0410198786033": 324, "045": 8, "05": [80, 81, 107, 193, 194, 229, 230, 253, 312], "05072021484375": 8, "0522": [318, 325], "0589": 318, "06": [263, 312], "060014213001020": 8, "060014216002007": 8, "060014223003010": 8, "060014225001003": 8, "060014239021001": 8, "06001_34778": 8, "06001_548222": 8, "06001_559590": 8, "06001_730116": 8, "06001_813170": 8, "07": [134, 135, 156, 157, 311, 312, 324], "08": [94, 312, 318, 320], "09": [6, 312], "0bbb": 318, "1": [0, 1, 3, 4, 5, 6, 7, 8, 20, 23, 26, 28, 48, 51, 73, 74, 75, 80, 81, 83, 95, 101, 107, 109, 118, 123, 129, 134, 135, 138, 140, 143, 146, 156, 157, 160, 162, 186, 187, 188, 193, 194, 196, 203, 210, 222, 223, 224, 229, 230, 232, 237, 252, 253, 259, 267, 269, 270, 272, 277, 280, 282, 303, 312, 317, 318, 320, 321, 324, 325, 327, 330, 331, 332, 338, 344, 346], "10": [3, 5, 7, 80, 83, 107, 109, 118, 130, 138, 160, 193, 196, 203, 206, 229, 232, 254, 303, 312, 318, 320, 327, 332, 338, 344], "100": [0, 1, 5, 80, 87, 107, 151, 152, 193, 203, 206, 229, 237, 242, 318, 320, 324, 329, 331, 332, 338], "1000": [0, 73, 74, 124, 125, 138, 146, 160, 186, 187, 222, 223, 277, 324, 338], "1004": 8, "101": [124, 125, 145, 277], "102": 130, "1024": [123, 264, 266], "103": 268, "1034449096679": 8, "104": 51, "105": [51, 324], "106": 8, "10606032": 344, "1076": 338, "1080": 321, "10802": 7, "10b": 254, "11": [4, 130, 303, 312, 320, 324, 329, 338], "112": [130, 142], "1129": 3, "1146": 324, "116": 268, "118": [318, 324, 325], "1181": 6, "11it": 318, "12": [3, 8, 130, 264, 268, 312, 320, 321, 329], "120": 130, "122": [3, 6, 7, 8, 130, 312, 320, 322, 325, 327, 331], "12213443753": 321, "123": [268, 312, 320], "124": 320, "128": [0, 145], "1282028": 324, "12908634292": 331, "12it": 311, "13": [3, 7, 312], "1326": [3, 6], "133": 130, "13333": [3, 8], "1376": 324, "14": [7, 81, 142, 194, 230, 250, 312, 318, 324, 327], "140": 130, "1421632630": 331, "143": 130, "14492": 322, "148": 7, "1494": [3, 6], "15": [3, 130, 312, 320, 324], "150": [123, 130], "152": [145, 277, 324], "153": 130, "153727272727274": 324, "1539": 8, "1554": [3, 6], "15774": 322, "1592": 8, "16": [142, 146, 237, 250, 264, 312], "160": 130, "16019d7e3df5f24257cddd939b257f8d": [151, 152], "160262": 8, "1621843": [9, 343], "163": 130, "163881": 318, "165": 8, "1675": 3, "168116": 318, "1681703": 318, "1681829": 318, "1682373": 318, "17": [3, 6, 312], "170": 130, "173": 130, "17479": 8, "1773": 8, "1784": 7, "179966": 8, "18": [124, 145, 277, 312], "180": 130, "184": 130, "1866": [3, 8], "189018": 8, "19": [3, 7, 312], "190": 130, "1920": 321, "1939": 8, "194": 130, "194753": 8, "195": 8, "1954": 8, "1960": 285, "1969": 1, "1970": 1, "1975": [7, 285], "19786631e330df9f3622e5402b4a419a263a2c80": 264, "1979": 1, "1980": 1, "1985": 285, "1989": [1, 8], "1990": 1, "1992": 8, "1995": 285, "1999": 1, "1e": [80, 81, 83, 94, 107, 109, 193, 194, 196, 229, 230, 232, 253, 263], "1swb": 8, "1x": 267, "1x3xhxw": 270, "1xcxhxw": 270, "1xhxw": 270, "2": [1, 3, 4, 5, 6, 7, 8, 9, 51, 71, 74, 95, 118, 123, 134, 135, 138, 139, 146, 156, 157, 160, 161, 184, 187, 203, 206, 210, 220, 223, 237, 269, 272, 274, 303, 312, 317, 318, 320, 321, 324, 325, 327, 330, 331, 332, 338, 344, 346], "20": [0, 4, 6, 80, 107, 130, 193, 203, 229, 272, 312, 318, 320, 324], "200": [3, 6, 8, 130, 255, 320], "2000": [1, 318, 338], "2003": [138, 160], "20049": 318, "2005": 285, "2008": 324, "2009": 1, "2010": 1, "2013": [137, 159], "2015": 285, "2017": 346, "2018": [0, 1], "2020": 344, "2022": 318, "2023": 312, "2024": [7, 311, 312, 344], "2025": [8, 312, 318, 320, 346], "204": 130, "2048": [123, 269], "20it": 318, "21": [3, 4, 6, 312, 324], "2109": 324, "212": 130, "2131111": [9, 343], "214": 130, "22": [8, 311, 312, 318, 320, 324], "220": 130, "2204": 338, "22253183411836": 318, "224": [130, 253], "2240": 338, "22733": 322, "22it": 318, "23": [4, 6, 312], "230": 130, "23236": 6, "2341": 8, "2341962": 322, "235": 130, "236440": 7, "239": 8, "24": [3, 6, 7, 8, 324], "24068": 6, "243": 324, "243226233836": 324, "24332934719": 324, "243413068638": 324, "243415138653": 324, "243416898264": 324, "243492197701": 324, "2434982541": 324, "243501803082": 324, "243502997061": 324, "243522111045": 324, "243533076239": 324, "243541516086": 324, "243682323766": 324, "2437": [318, 325], "244": 324, "245": 130, "249638045616": [3, 6], "249704555083": [3, 6], "249751291732": [3, 6], "249817801199": [3, 6], "25": [6, 130, 257, 312, 322, 325, 332], "250": 130, "2500": 338, "251349037992": [3, 6], "251381955857": [3, 6], "251516845084": [3, 6], "251549765644": [3, 6], "2534638": 8, "2534705": 8, "2534913": 8, "253494": 8, "2535403": 8, "253547": 8, "2535494": 8, "2535939": 8, "2535946": 8, "2535993": 8, "2536127": 8, "2538454": [3, 8], "2538636": [3, 8], "2538841": [3, 8], "2539358": [3, 8], "2539784": [3, 8], "2540264": [3, 8], "2540337": [3, 8], "2540379": [3, 8], "255": [130, 270], "256": [123, 264, 265, 266, 268, 270], "2576": 324, "2582": 7, "25t00": 318, "26": [312, 324, 325], "260463864989": 6, "260480216124": 6, "260597977173": 6, "260614329206": 6, "262559": 8, "2625592": 8, "2654134": 8, "2654248": 8, "2654737": 8, "2654851": 8, "2669": 7, "27": [3, 324], "27000": 8, "2743469": [3, 8], "2743673": [3, 8], "2743867": [3, 8], "2743897": [3, 8], "2743974": 8, "2744387": [3, 8], "2744416": [3, 8], "2744612": [3, 8], "2744816": [3, 8], "27705": 8, "278": 7, "27968": 322, "2799116": 8, "279912": 8, "28": [142, 268, 317, 325], "28236720333845": 3, "2823711059354": 3, "28253856754118": 3, "28253945956331": 3, "28259568844234": 3, "28259869901714": 3, "2831763030742": 3, "2831818391027": 3, "2832593562512": 3, "2832648922797": 3, "2833528": 322, "284": 318, "28404": [3, 6], "286804056442": 6, "286829349408": 6, "286942660203": 6, "286967954066": 6, "29": [8, 318], "292": 324, "2927717": 8, "292788": 8, "2928486": 8, "2928649": 8, "29469": 3, "295": 324, "2973": [3, 8], "2989": [3, 8], "299": 324, "2d": [74, 80, 107, 187, 193, 223, 229, 272, 332], "2snb": 8, "2swb": 8, "2x3": 330, "3": [3, 4, 5, 7, 8, 16, 73, 74, 95, 118, 123, 130, 146, 186, 187, 210, 222, 223, 253, 255, 257, 264, 265, 266, 303, 318, 320, 322, 324, 325, 327, 330, 331, 332, 338], "30": [138, 160, 312, 320, 322, 332], "300": [0, 201], "3013": 318, "306": 8, "31": 130, "32": [125, 146, 203, 250, 259, 338], "320524": 8, "322763": 7, "3249": 7, "324kb": 329, "325kb": 329, "32k": 254, "33": 318, "334": 324, "336px": 250, "3389": 344, "33931": 318, "339it": 311, "34": [145, 277, 318, 324, 325], "341": 7, "3413333333333333": 259, "341454545454546": 324, "347": 325, "35": [80, 107, 193, 229, 257], "350": 8, "3522": 320, "352it": 318, "35547": [3, 8], "359933": 8, "36": 321, "360": [138, 160], "3601": 318, "36181": 311, "3686918": 322, "37": [3, 6, 7, 8, 312, 320, 322, 324, 325, 327], "375": [257, 268], "3753899307251": 8, "378037": 8, "379": 317, "37it": 324, "38": [320, 324, 327], "3824": 324, "384": 203, "385248": 324, "3882821": 318, "3882857": 318, "3883895": 318, "3883931": 318, "389506": 8, "39": [51, 311, 318, 320, 327, 338], "39104": 338, "392": 8, "395": [268, 320], "397": 331, "3d": [80, 107, 193, 229], "3dep": [2, 318], "3x3": 123, "3xhxw": 268, "4": [1, 3, 4, 5, 6, 7, 8, 71, 74, 95, 118, 130, 146, 184, 187, 220, 223, 253, 264, 270, 303, 311, 318, 320, 325, 327, 330, 338], "40": [4, 51, 312, 318, 320, 324], "4071135": 318, "4071579": 318, "4071755": 318, "40722": 318, "4094": 320, "4096": 123, "4097": 318, "41": 130, "4144": 320, "4180": 320, "4184": 318, "4190": 320, "41919999999999": 320, "4194": [320, 325], "419571": 7, "4196": 320, "42": [7, 318, 320, 330], "42452141999999": 7, "425334": 7, "4255108090909": 7, "42639508666667": 7, "42705018181817": 7, "42it": 318, "43": 320, "4326": [303, 325, 331], "435": 8, "43521675714284": 7, "44": [318, 320], "4411": 7, "45": [80, 107, 193, 229, 318], "456": 320, "457": 320, "46": 324, "463": 317, "4654": 7, "47": [320, 331], "473584913": 8, "474705763": 8, "474740175": 8, "475206003": 8, "475445345": 8, "479": 8, "48": [8, 320], "480": 321, "487907837328": 324, "49": 320, "499": 324, "49it": 311, "4d": [80, 107, 193, 229], "4o": [208, 244], "4th": 7, "5": [1, 8, 20, 51, 74, 80, 83, 95, 107, 109, 118, 130, 134, 135, 156, 157, 187, 193, 196, 203, 223, 229, 232, 280, 291, 303, 312, 318, 320, 325, 327, 330, 332, 338], "50": [0, 8, 20, 124, 130, 145, 203, 237, 277, 320, 332], "500": 20, "5000": 318, "503": 331, "51": 130, "512": [123, 338], "513": 324, "5147028043": 324, "51939999999999": 320, "520953": 320, "5280": 325, "5281": 344, "53": 268, "538": 317, "545": 324, "55": 6, "5500426357848": 318, "558706": 344, "56": [6, 142, 318], "56645584106445": 8, "57": [268, 318], "57it": 318, "58": 268, "59": 8, "5912666815452": 318, "5d": [80, 107, 193, 229], "5k": 254, "5th": 327, "6": [1, 3, 6, 8, 23, 28, 48, 53, 74, 118, 123, 130, 144, 146, 187, 223, 303, 312, 320, 330, 338, 344], "60it": 324, "61": 130, "62": 338, "625": 8, "635": 8, "638": 324, "64": [203, 253, 259, 267, 270, 277], "640": 321, "6506": 8, "65364074707031": 8, "66": 318, "661": 324, "6666": [3, 6], "6679": 321, "67": 324, "6749": 320, "675": 268, "68": 318, "68756": 318, "69423131358": 331, "69it": 318, "7": [6, 51, 74, 118, 130, 187, 223, 259, 303, 318, 331], "70": 130, "70804716657": 331, "71": [130, 318, 324], "7128": 320, "712900000000005": 320, "713": 317, "7130": 320, "71405070861817": 8, "72": [0, 8], "7271554": 329, "73": [312, 320], "73061": 320, "730610": 320, "739": 8, "74": [312, 320, 327], "75": [320, 321, 327, 332], "755": 320, "75d8d6da9513": 318, "76": [6, 320, 324, 327], "768": 264, "77": [252, 320, 324, 329], "7748": 320, "7749": [320, 325], "774950000000004": 320, "7750": 320, "7755": 320, "779": 324, "7799": 320, "78": 320, "7849": 320, "789": 320, "79": 320, "790": 320, "7977": 318, "79it": 331, "7nspwemp38bskcji": 324, "8": [0, 4, 5, 51, 74, 87, 118, 123, 130, 142, 187, 223, 237, 242, 252, 254, 257, 264, 303, 311, 312, 318, 320], "80": 130, "8084": 338, "81": [317, 324, 338], "81000": 8, "8128": 320, "82": [7, 130], "8288": 318, "8356877": 322, "849vvp4w": 8, "849vvpcg": 8, "849vvphp": 8, "849vvpjw": 8, "849vvpvc": 8, "85": [322, 325], "8512103598022": 8, "8517353439222": [3, 6], "8518000117672": [3, 6], "8518085710136": [3, 6], "8518732380851": [3, 6], "8549859": 8, "854993": 8, "8550463": 8, "8550534": 8, "8564399": 8, "8564404": 8, "856443": 8, "8564531": 8, "8564711": 8, "856479": 8, "85648153": 8, "8564912": 8, "8565177": 8, "8565272": 8, "8565277": 8, "8566": 320, "8599": 7, "85it": 324, "86": [324, 325], "863126736093584": 3, "86313236995723": 3, "86314179854076": 3, "86314364715192": 3, "86319887333546": 3, "86320635580323": 3, "86590688571429": 7, "86730380000001": 7, "8673577272146": 3, "86735994820125": 3, "86748674209271": 3, "86748896307548": 3, "869326593333334": 7, "86981550909091": 7, "87": 325, "870170718181825": 7, "8720097": [3, 8], "8720143": [3, 8], "8720287": [3, 8], "8720305": [3, 8], "8720353": [3, 8], "8720391": [3, 8], "872097621": 8, "8721725": [3, 8], "8721826": [3, 8], "8762541": 8, "8762696": 8, "8763047": 8, "8763201": 8, "8783233546667": 6, "8783452637543": 6, "8783862371837": 6, "8784081469617": 6, "879116732": 8, "879117": 8, "8794214649434": 6, "8794505676668": 6, "8794971468902": 6, "8795262510017": 6, "88": 259, "8821623": [3, 8], "8821659": [3, 8], "882245": [3, 8], "8822459": [3, 8], "882252355": 8, "8822577": [3, 8], "882258": [3, 8], "8823667": [3, 8], "8823889": [3, 8], "886": 8, "89": 324, "8918428029327": [3, 6], "8918864620566": [3, 6], "8919222669851": [3, 6], "891965925353": [3, 6], "894081": 8, "894081399": 8, "9": [51, 74, 94, 118, 130, 187, 223, 303, 312, 322, 325], "9004509815979": 8, "906": 320, "9066896": 322, "908": 324, "91": 324, "910": 324, "92": [130, 324], "925": 6, "93": 322, "933": 324, "935242": 320, "9361": 8, "93944549560547": 8, "93it": 324, "94": [318, 324], "940": 324, "943": 8, "95": [259, 318], "958384": 8, "96161651611328": 8, "966": 324, "9665": 324, "97": [320, 324], "992": 324, "9926392": 318, "9926423": 318, "992804": 318, "9928071": 318, "998": 7, "999": 94, "99it": 311, "9m": 329, "A": [0, 1, 2, 5, 20, 23, 26, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 57, 73, 81, 82, 89, 91, 94, 95, 108, 132, 172, 186, 194, 195, 203, 206, 210, 222, 230, 231, 242, 246, 248, 250, 252, 253, 259, 268, 270, 272, 280, 285, 291, 292, 294, 296, 299, 301, 303, 305, 307, 309, 311, 312, 314, 318, 320, 321, 322, 324, 325, 326, 327, 328, 330, 332, 334, 335, 336, 337, 338, 342, 344, 346], "AND": [0, 1, 346], "AS": [0, 1, 346], "And": 254, "As": [3, 8], "BE": [0, 1, 346], "BUT": [0, 1, 346], "BY": [0, 1, 346], "Be": [95, 327], "But": 2, "By": 6, "FOR": [0, 1, 346], "For": [0, 1, 6, 7, 8, 12, 20, 57, 80, 82, 107, 108, 193, 195, 229, 231, 270, 272, 318, 337, 342], "IF": [0, 1, 346], "IN": [0, 1, 346], "If": [0, 1, 4, 20, 51, 74, 89, 91, 118, 122, 124, 125, 132, 134, 135, 145, 156, 157, 187, 203, 206, 223, 237, 248, 250, 259, 268, 270, 277, 285, 291, 294, 296, 301, 303, 305, 312, 314, 318, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 334, 338], "In": [7, 8, 327], "It": [0, 1, 7, 9, 51, 74, 87, 89, 91, 132, 134, 135, 156, 157, 172, 187, 206, 223, 250, 273, 285, 292, 296, 299, 307, 309, 318, 320, 324, 326, 327, 330], "NO": [0, 1, 8, 346], "NOT": [0, 1, 321, 346], "No": [9, 311, 318, 343], "Not": [248, 327], "OF": [0, 1, 346], "ON": [0, 1, 346], "OR": [0, 1, 346], "On": 0, "One": [0, 30], "Or": [312, 322], "SUCH": [0, 1, 346], "THE": [0, 1, 346], "TO": [0, 1, 346], "That": [0, 1, 7], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 16, 20, 23, 26, 28, 47, 48, 49, 51, 57, 60, 71, 74, 75, 80, 82, 83, 89, 91, 95, 107, 108, 109, 132, 134, 135, 156, 157, 172, 184, 187, 188, 193, 195, 196, 203, 204, 206, 208, 220, 223, 224, 229, 231, 232, 237, 242, 244, 250, 252, 253, 254, 259, 268, 270, 272, 275, 280, 285, 289, 291, 292, 294, 299, 301, 303, 305, 307, 309, 311, 314, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 330, 331, 332, 334, 337, 338, 342, 346], "Then": [5, 320], "There": [0, 4, 7, 8, 74, 134, 135, 156, 157, 187, 223, 253], "These": [0, 2, 7, 74, 187, 223, 270], "To": [3, 4, 5, 6, 26, 51, 60, 204, 208, 237, 244, 254, 312, 320, 321, 322, 324, 325, 327, 329, 330, 344], "WITH": 8, "Will": 332, "With": [0, 1, 7, 80, 107, 193, 229], "_": [8, 51, 311, 317, 318, 320], "__data_parallel_replicate__": [83, 109, 196, 232], "__getitem__": [116, 206, 280], "__init__": [138, 160], "__iter__": 118, "__len__": [116, 118, 206, 280], "__main__": [3, 4, 5, 6, 8], "__name__": [3, 4, 5, 6, 8], "_comment": 6, "_join_implement": [335, 336, 337], "_prediction_result": [0, 1], "_slavepipebas": [82, 108, 195, 231], "_synchronizedbatchnorm": [80, 82, 107, 108, 193, 195, 229, 231], "a1": 51, "a101": 320, "a123": 320, "a2": 51, "a3": 51, "a4": 51, "abc": [6, 14, 18, 49, 204, 239, 240, 289, 292, 297, 312, 327, 334], "about": [1, 3, 9, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 66, 179, 215, 320, 321, 324], "abov": [0, 1, 2, 7, 73, 186, 222, 346], "absolut": 329, "abstract": [6, 14, 16, 18, 49, 82, 108, 116, 195, 204, 231, 239, 240, 289, 292, 297, 326, 334], "acceler": [80, 107, 193, 229], "accept": [74, 134, 135, 156, 157, 187, 223, 320], "access": [2, 4, 292, 312, 317, 318, 325, 326], "accident": 5, "accompani": [3, 8], "accord": [0, 264, 322], "accordingli": 1, "accur": [2, 318], "accuraci": [3, 5, 129, 203, 250, 318, 338], "acgtyr": [81, 194, 230], "acknowledg": 9, "across": [3, 80, 107, 193, 229, 318, 320, 324, 326, 338], "act": 263, "act_lay": 264, "action": 2, "activ": [1, 3, 263, 264, 265, 266, 267, 269], "actual": [1, 331], "ad": [49, 80, 107, 193, 229, 264, 289, 291, 318, 320, 321], "adam": 344, "adamw": 94, "adapt": [71, 184, 220], "add": [0, 1, 6, 23, 26, 28, 48, 49, 51, 57, 83, 109, 129, 138, 160, 196, 232, 269, 320, 321], "add_argu": [3, 4, 5, 6, 8], "add_asset": [51, 317, 320], "add_asset_coordin": 320, "add_asset_featur": 320, "add_asset_features_from_csv": 320, "add_decomposed_rel_po": 264, "add_default": 41, "add_featur": [303, 320], "add_features_to_asset": 23, "add_imag": 321, "add_model_predict": 320, "addgaussiannois": [138, 160], "addgaussianpoissonnois": [138, 160], "addit": [6, 23, 26, 28, 48, 49, 57, 285, 289, 303, 312, 314, 320], "addition": [53, 303, 320], "additional_featur": 320, "additional_properti": 321, "address": 4, "addspecklenois": [138, 160], "ade20k": 130, "adjust": [53, 330], "advanc": 268, "advis": [0, 1, 346], "advprop": [73, 74, 186, 187, 222, 223], "aerial": [2, 3, 4, 242, 246, 331], "aerial_from_rast": 2, "aerial_im": 4, "affin": [80, 83, 107, 109, 193, 196, 229, 232], "after": [1, 80, 82, 83, 89, 108, 109, 193, 195, 196, 203, 229, 231, 232, 264, 269, 320, 324], "afterward": [71, 74, 75, 81, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 194, 220, 223, 224, 230, 253, 263, 264, 265, 266, 269, 273, 277, 282], "again": [118, 320, 342], "against": [203, 317], "agg": 255, "agg_method": 255, "aggreg": 318, "aggregate_predict": 255, "agment": 20, "ahead": [83, 109, 196, 232], "ahsan": 344, "aid": 331, "aim": 47, "ain": 324, "alameda": [6, 311, 322], "algorithm": [2, 5, 9], "alia": [74, 137, 159, 187, 223, 338], "alias": [253, 338], "alias_multinomi": [133, 155], "aliasmethod": [137, 159], "all": [0, 1, 3, 6, 7, 66, 71, 74, 75, 80, 81, 82, 83, 107, 108, 109, 116, 118, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 179, 184, 187, 188, 193, 194, 195, 196, 215, 220, 223, 224, 229, 230, 231, 232, 252, 253, 263, 264, 265, 266, 269, 272, 273, 277, 282, 291, 312, 318, 320, 324, 326, 327, 330, 338, 346], "allow": [6, 8, 87, 91, 269, 270, 314, 321, 324, 331, 333, 338], "allow_mh_only_for_res2": 53, "along": [1, 116, 325, 330], "alongsid": 330, "alpha": [138, 160, 312, 332], "alreadi": [268, 270, 321, 329], "also": [0, 3, 8, 74, 80, 81, 87, 107, 134, 135, 156, 157, 172, 187, 193, 194, 223, 229, 230, 273, 311, 320, 327], "although": [71, 74, 75, 81, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 194, 220, 223, 224, 230, 253, 263, 264, 265, 266, 269, 273, 277, 282], "alwai": [0, 3, 118], "ambigu": [270, 320], "amg": 271, "among": [7, 83, 109, 196, 232], "amount": 0, "an": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 14, 16, 18, 20, 49, 51, 73, 74, 80, 82, 83, 89, 91, 107, 108, 109, 116, 118, 132, 134, 135, 138, 156, 157, 160, 186, 187, 193, 195, 196, 203, 204, 206, 222, 223, 229, 231, 232, 237, 248, 250, 252, 253, 257, 259, 269, 270, 272, 280, 285, 291, 292, 294, 296, 297, 299, 301, 303, 305, 307, 309, 311, 312, 314, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 338, 342, 344], "anaconda3": [130, 138, 160, 254], "analys": 7, "analysi": [2, 138, 160, 292, 303, 318, 323, 325, 333], "analyz": [2, 3, 4, 8], "anchor": [71, 184, 220], "anchor_box": [71, 184, 220], "anchor_config": [71, 184, 220], "anchor_scal": [71, 184, 220], "angel": [324, 325], "angl": [2, 89], "angle_rang": [138, 160], "ani": [0, 1, 2, 3, 4, 6, 7, 74, 83, 91, 109, 134, 135, 156, 157, 187, 196, 203, 223, 232, 259, 269, 280, 292, 318, 320, 321, 324, 326, 327, 328, 330, 337, 342, 343, 346], "ann": [66, 179, 215], "annot": [66, 179, 215], "annotation_fil": [66, 179, 215], "anoth": [118, 320, 338], "ant": 203, "anti": 253, "apart": 0, "api": [4, 5, 9, 291, 296, 307, 309, 314, 323, 324, 342], "api_endpoint": 324, "api_endpoint_url": 324, "api_help": 324, "api_kei": [4, 5, 200, 201, 208, 244, 296], "api_key_dir": [4, 5], "api_key_path": 4, "api_tool": 324, "apidoc": [9, 342], "apikei": [4, 5], "appdata": 6, "appeal": [323, 330], "append": 12, "appli": [4, 5, 73, 80, 107, 132, 138, 160, 172, 186, 193, 203, 206, 222, 229, 267, 280, 320], "applic": [5, 6, 7, 9, 12, 253, 303, 329, 331, 342, 344], "apploc": 9, "apply_box": 274, "apply_boxes_torch": 274, "apply_coord": 274, "apply_coords_torch": 274, "apply_imag": 274, "apply_image_torch": 274, "approach": [0, 6, 322], "approxim": [0, 324], "ar": [0, 1, 2, 3, 4, 5, 7, 8, 9, 51, 74, 80, 83, 89, 91, 107, 109, 118, 129, 132, 134, 135, 156, 157, 187, 193, 196, 203, 204, 206, 223, 229, 232, 242, 248, 250, 253, 267, 268, 270, 280, 285, 289, 294, 303, 311, 312, 314, 318, 320, 321, 324, 325, 326, 327, 329, 330, 331, 333, 337, 338, 342, 343, 346], "ar_revert": 324, "ar_subtrv": 324, "arbitrari": [0, 74, 134, 135, 156, 157, 187, 223], "arcgi": [323, 324], "arcgisapi_service_help": 323, "arcgisapiservicehelp": [323, 324], "arcgisonlin": 324, "arch": 123, "architectur": [1, 203, 206, 250], "area": [2, 3, 6, 66, 172, 179, 215, 259, 297, 303, 307, 309, 311, 314, 315, 318, 322, 323, 324, 325, 338], "area_from_rl": 272, "area_thresh": 272, "arearng": [66, 179, 215], "arg": [3, 4, 5, 6, 8, 71, 74, 75, 134, 135, 151, 153, 156, 157, 184, 187, 188, 220, 223, 224, 253, 272, 275], "argpars": [3, 4, 5, 6, 8], "args__": [87, 203, 210, 242], "argument": [1, 3, 4, 5, 6, 8, 74, 83, 109, 134, 135, 156, 157, 187, 196, 223, 232, 301, 305, 314, 325], "argumentpars": [3, 4, 5, 6, 8], "arial_process": 238, "arialprocess": 239, "aris": [0, 1, 346], "around": [242, 254, 259, 272], "arr": 23, "arrai": [16, 66, 71, 95, 130, 138, 160, 179, 184, 204, 215, 220, 257, 259, 270, 274, 280, 332], "as_numpi": [110, 119], "as_vari": 119, "asce_hazard_data_scrap": 286, "aspect": [324, 330], "assembl": 116, "asserttensorclos": [84, 110, 197, 233], "assess": [2, 26, 47], "assessor": 6, "asset": [3, 4, 5, 6, 7, 8, 9, 18, 20, 23, 26, 28, 47, 48, 49, 51, 57, 289, 291, 294, 296, 297, 301, 303, 305, 311, 317, 318, 320, 324, 331, 333, 334, 342], "asset1": [317, 320], "asset2": [317, 320], "asset3": 320, "asset_data_augment": 286, "asset_id": [51, 320], "asset_inventori": [6, 7, 51, 317, 318, 319, 328, 331], "assetdataaugment": [289, 291, 317, 318], "assetinventori": [3, 4, 5, 6, 7, 8, 18, 20, 23, 26, 28, 48, 49, 51, 57, 289, 291, 292, 294, 296, 297, 299, 301, 303, 305, 307, 309, 311, 314, 317, 318, 320, 323, 328, 331, 333, 334, 342], "assetinvetori": 18, "assign": [0, 1, 51, 83, 109, 196, 232, 280, 291, 317, 320], "associ": [4, 172, 299, 307, 309, 314, 318, 320, 321, 330, 335, 337], "assum": [303, 321, 324, 327, 331, 332], "assumpt": [1, 47, 324], "async_copy_to": 112, "atlant": 47, "atol": [110, 272], "atrribut": [307, 309], "attempt": [5, 60, 208, 237, 244, 246, 320], "attend": 269, "attent": [0, 253, 264, 269], "attention_downsample_r": 269, "attention_modul": 141, "attention_util": 92, "attentionmodule_pr": 142, "attentionmodule_stage0": 142, "attentionmodule_stage1": 142, "attentionmodule_stage1_cifar": 142, "attentionmodule_stage2": 142, "attentionmodule_stage2_cifar": 142, "attentionmodule_stage3": 142, "attentionmodule_stage3_cifar": 142, "attentionpool2d": 253, "attn": 264, "attn_mask": 253, "attribut": [2, 7, 23, 26, 28, 48, 53, 74, 89, 91, 134, 135, 151, 153, 156, 157, 187, 223, 250, 291, 292, 299, 303, 307, 309, 311, 314, 320, 324, 330, 335], "attribute_nam": 330, "attributes__": [203, 210, 242, 246], "attrmap": 315, "aug": [7, 255], "augment": [49, 203, 289, 291, 318], "augmentfil": 6, "authent": 296, "author": [81, 194, 230, 343], "auto": 47, "auto_hu_nj": 29, "auto_popul": [28, 47], "autograd": [74, 80, 107, 134, 135, 156, 157, 187, 193, 223, 229], "autom": [0, 2, 6, 91], "automat": [1, 2, 3, 6, 74, 91, 134, 135, 156, 157, 187, 223, 331, 338], "automatic_mask_gener": 258, "automl": [71, 184, 220], "avail": [2, 3, 4, 5, 6, 8, 47, 89, 95, 203, 206, 250, 252, 291, 312, 320, 322, 323, 324, 329, 330, 333, 345], "available_featur": [28, 41], "available_model": 252, "averag": [129, 140, 162, 253, 318], "averagemet": [129, 140, 162], "avg_loss": 95, "avgjantemp": 48, "avgjantemp_kei": 48, "avgpool": 253, "avoid": [6, 95, 254, 311, 326, 327], "awai": 7, "ax": [138, 160, 257, 330], "axi": [95, 138, 160, 264], "b": [8, 20, 23, 26, 28, 48, 57, 110, 250, 264, 268, 269], "b0": [73, 186, 222], "b202": 320, "b590fbec": 318, "b7f7": 318, "b950": 264, "bacetin": [3, 4, 8, 130, 138, 160, 254, 311, 318, 331], "back": [82, 108, 195, 231, 311, 318], "backbon": [63, 176, 212], "background": [0, 270], "backoff": 324, "backward": [74, 134, 135, 156, 157, 187, 223], "balanc": 324, "bar": [277, 324], "barbaro": 344, "barf": 254, "base": [0, 6, 12, 14, 16, 18, 20, 23, 26, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 51, 53, 57, 60, 66, 71, 73, 74, 75, 80, 81, 82, 83, 84, 87, 89, 91, 94, 101, 107, 108, 109, 110, 112, 116, 118, 123, 124, 125, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 172, 179, 184, 186, 187, 188, 193, 194, 195, 196, 197, 200, 203, 204, 206, 208, 210, 215, 220, 222, 223, 224, 229, 230, 231, 232, 233, 237, 239, 240, 242, 244, 246, 248, 250, 253, 254, 257, 259, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 277, 280, 282, 285, 289, 291, 292, 294, 296, 297, 299, 301, 303, 305, 307, 309, 311, 312, 314, 315, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 343], "base_fold": [151, 152], "base_imag": 332, "basedataset": 101, "basegeometri": [322, 325], "baselin": 2, "basement": [28, 303], "basement_kei": 28, "basementtyp": 28, "basementtype_kei": 28, "basi": [6, 8], "basic": [3, 6, 7, 8, 272, 320], "basic_clean": 254, "basic_lay": 141, "basicconv": 282, "batch": [20, 80, 81, 87, 91, 107, 112, 118, 193, 194, 203, 206, 229, 230, 237, 242, 250, 265, 266, 268, 270, 272, 274, 311, 318], "batch_idx": 255, "batch_iter": 272, "batch_norm_epsilon": [74, 187, 223], "batch_norm_momentum": [74, 187, 223], "batch_per_gpu": 101, "batch_siz": [20, 80, 87, 107, 118, 193, 203, 206, 229, 237, 242, 250, 255, 272], "batched_input": 268, "batched_mask_to_box": 272, "batchnorm": [79, 81, 106, 192, 194, 228, 230], "batchnorm1d": [80, 107, 193, 229], "batchnorm2d": [80, 107, 193, 229], "batchnorm2dreimpl": [81, 194, 230], "batchnorm3d": [80, 107, 193, 229], "batchnorm_reimpl": [79, 192, 228], "batchsampl": 118, "batchsiz": [71, 184, 220], "bbox": [259, 312], "bbox2poli": 325, "bbox_wgs84": 331, "bboxtransform": [71, 184, 220], "beach": 318, "becaus": [0, 6, 80, 107, 193, 229], "bee": 203, "been": [270, 272, 342], "befor": [1, 5, 91, 203, 206, 248, 264, 268, 270, 318], "beforehand": 0, "begin": 2, "behav": [80, 107, 193, 229], "behavior": 6, "being": [8, 83, 109, 196, 204, 232, 254, 311, 318, 324, 327, 330, 342], "belong": 338, "below": [0, 2, 3, 4, 5, 7, 321, 324, 326, 344], "benefit": 6, "berkelei": [3, 5, 6, 8, 311, 322], "berkeley_build": 311, "best": [0, 132, 138, 160, 270], "beta": [80, 94, 107, 193, 229, 312], "better": [3, 7, 8, 270], "between": [1, 3, 73, 186, 222, 254, 272, 303, 320, 323, 325, 333, 334, 336, 338], "beyond": 327, "bfe_revert": 324, "bgr": 270, "bia": [74, 75, 187, 188, 223, 224, 253, 282], "bid": 8, "bilinear": 101, "bilinearres": [138, 160], "bim": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46], "bim_ap": 41, "bim_in": 41, "binari": [0, 1, 132, 206, 268, 270, 272, 330, 346], "binary_mask": 259, "black": 325, "bld_id": 324, "bldg_class": 30, "bldg_geom_subset": 20, "bldg_geometries_df": 20, "bldg_impu_subset": 20, "bldg_inde_subset": 20, "bldg_prel_subset": 20, "bldg_properties_df": 20, "bldg_properties_encod": 20, "bldgtype": 8, "bleed": 345, "blend": 332, "blob": [2, 71, 184, 220, 264], "block": [73, 74, 124, 125, 145, 186, 187, 222, 223, 264, 277, 318], "block_arg": [73, 186, 222], "blockarg": [73, 74, 186, 187, 222, 223], "blockdecod": [74, 187, 223], "blocks_arg": [73, 74, 186, 187, 222, 223], "blog": [137, 159], "blue": 325, "blur": [138, 160], "bn": [123, 282], "bool": [73, 87, 118, 122, 124, 125, 132, 145, 172, 186, 203, 206, 222, 237, 242, 252, 265, 266, 268, 270, 277, 280, 285, 312, 318, 320, 321, 324, 327, 328, 329, 330, 331, 338], "boolean": [66, 74, 80, 107, 134, 135, 156, 157, 179, 187, 193, 215, 223, 229, 320, 327], "both": [2, 4, 6, 91, 116, 206, 267, 274, 307, 309, 330, 344], "bottleneck": [73, 186, 222, 253], "bottom": 330, "bound": [2, 291, 303, 307, 309, 312, 314, 315, 320, 322, 324, 325, 331], "boundari": [3, 292, 299, 301, 303, 305, 307, 311, 314, 318, 320, 322, 324, 325], "boundaryregion": 3, "boundingbox": [6, 257], "box": [16, 71, 184, 220, 257, 259, 265, 266, 267, 268, 270, 272, 274, 291, 303, 307, 312, 315, 320, 322, 324, 325, 327, 331], "box_nms_thresh": 259, "box_threshold": 257, "box_xyxi": 272, "box_xyxy_to_xywh": 272, "bpe": 254, "bpe_path": 254, "bpe_simple_vocab_16e6": 254, "bpoli": [324, 325], "bpoly_long": 325, "brail": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 339, 340, 341, 342, 343, 344, 345, 346], "brails2r2dmap": 303, "brails_download_imag": 4, "brails_eq_building_inventory_cr": 2, "brails_filt": 5, "brails_footprint": 3, "brails_footprint_name_input": 2, "brails_hu_building_inventory_cr": 2, "brails_imagery_pipelin": 2, "brails_nsi": 8, "brails_nsi_integr": 2, "brails_power_network": 2, "brails_vers": 320, "brailserror": [12, 326], "brailsplusplu": [0, 2, 345], "bridg": [301, 320, 324], "broader": 318, "bsd": [3, 4, 6, 7, 8, 9, 346], "buffer": 320, "buid": 47, "buidl": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46], "build": [0, 1, 2, 4, 5, 6, 7, 8, 9, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 60, 74, 89, 91, 132, 172, 187, 210, 223, 237, 248, 285, 292, 294, 296, 299, 303, 307, 311, 314, 318, 320, 321, 324, 331, 342], "build_all_layer_point_grid": 272, "build_attention_mask": 253, "build_decod": 123, "build_encod": 123, "build_model": [253, 257], "build_point_grid": 272, "build_sam": 258, "build_sam_hq": 258, "build_sam_hq_vit_b": 261, "build_sam_hq_vit_h": 261, "build_sam_hq_vit_l": 261, "build_sam_vit_b": 260, "build_sam_vit_h": 260, "build_sam_vit_l": 260, "building1": 320, "building2": 320, "building_class": 30, "building_footprint": 324, "building_front": 321, "building_material_llm": 58, "building_part": 311, "buildingclassruleset": 29, "buildingheight": [3, 6, 8, 89], "buildinginventori": 6, "buildingmaterialllm": 60, "buildingtyp": 48, "buildingtype_kei": 48, "built": [2, 12, 16, 74, 80, 107, 187, 193, 223, 229, 257, 280, 285, 314, 342, 344], "busi": [0, 1, 346], "bx": 267, "bx1xhxw": [268, 270], "bx4": [268, 270, 274], "bxc": [268, 270], "bxcxhxw": [268, 270, 274], "bxn": [268, 270], "bxnx": 267, "bxnx2": [268, 270], "byte": [254, 320], "bytearrai": 320, "bytes_to_unicod": 254, "c": [0, 1, 8, 80, 107, 138, 151, 152, 160, 193, 229, 264, 268, 270, 346], "c1": 123, "c1deepsup": 123, "c1xc2x": 272, "c4e855863085": 318, "ca": [3, 4, 5, 6, 8, 311, 322, 324, 325], "cach": [91, 252], "calc": 1, "calc_perf": 280, "calcul": [74, 80, 91, 95, 107, 187, 193, 223, 229, 264, 270, 272, 280, 311, 320, 325], "calculate_all_dist": 166, "calculate_stability_scor": 272, "california": [0, 1, 6, 311, 322, 324, 346], "call": [0, 71, 73, 74, 75, 80, 81, 82, 83, 107, 108, 109, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 186, 187, 188, 193, 194, 195, 196, 204, 220, 222, 223, 224, 229, 230, 231, 232, 248, 250, 253, 263, 264, 265, 266, 268, 269, 273, 277, 282, 318, 320], "callabl": [94, 172, 252, 324], "callback": [82, 83, 108, 109, 195, 196, 231, 232], "callbackcontext": [83, 109, 196, 232], "caller": [14, 16, 297], "cam_elev": [89, 321], "camelev": 89, "camera": [1, 89, 296, 321], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 74, 82, 83, 87, 108, 109, 132, 134, 135, 138, 156, 157, 160, 172, 187, 195, 196, 223, 231, 232, 252, 268, 270, 285, 311, 318, 320, 321, 322, 324, 326, 327, 328, 342, 345], "cannot": [118, 326, 327], "capabl": [2, 3], "captur": 2, "care": [71, 74, 75, 81, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 194, 220, 223, 224, 230, 253, 263, 264, 265, 266, 269, 273, 277, 282], "case": [6, 12, 80, 107, 138, 160, 193, 229, 252, 338], "cat": [66, 179, 215, 272], "categor": [324, 330], "categori": [0, 1, 51, 338], "categorize_and_split_cel": 324, "category_in_df_to_indic": 20, "catid": [66, 179, 215], "catnm": [66, 179, 215], "caus": [0, 1, 346], "cbfip": 8, "cd": [0, 1], "cecb": 31, "cecb_config": 31, "cell": [6, 291, 301, 305, 314, 324, 325], "cells_to_keep": 324, "cells_to_split": 324, "censu": 324, "center": [5, 138, 160, 342], "center_crop": [138, 160], "center_crop_s": [138, 160], "centercrop": [138, 160], "centercropnumpi": [138, 160], "centimet": 338, "centimetr": 338, "centroid": [292, 317, 318, 320, 325, 337], "centroid_elev": 318, "cerb": 32, "cerb_config": 32, "certain": [7, 342], "cetin": 344, "chang": [5, 253, 320], "change_feature_nam": 320, "channel": [138, 160], "charact": 254, "characterist": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 303], "charl": 344, "check": [0, 325, 327, 328, 329, 338], "check_kei": [23, 26], "checkpoint": [0, 1, 132, 252, 260, 261, 285], "checkpoints_dir": [132, 285], "child": [80, 193, 229], "chimnei": 2, "chimney_detector": [2, 58], "choos": [1, 74, 187, 223], "chosen": [0, 1, 5], "cifar": [147, 151], "cifar10": [151, 152], "cifar100inst": [151, 152], "cifar10inst": [151, 152], "cite": 9, "citi": 28, "city_kei": 28, "class": [1, 3, 6, 8, 12, 14, 16, 18, 20, 23, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 51, 53, 57, 60, 66, 71, 73, 74, 75, 80, 81, 82, 83, 84, 87, 89, 91, 94, 95, 101, 107, 108, 109, 110, 112, 116, 118, 123, 124, 125, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 172, 179, 184, 186, 187, 188, 193, 194, 195, 196, 197, 200, 203, 204, 206, 208, 210, 215, 220, 222, 223, 224, 229, 230, 231, 232, 233, 237, 239, 240, 242, 244, 246, 248, 250, 253, 254, 257, 259, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 277, 280, 281, 282, 285, 289, 291, 292, 294, 296, 297, 299, 301, 303, 305, 307, 309, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 342], "class_nam": 326, "class_num": 146, "class_obj": 326, "class_to_cod": 257, "class_weight": 280, "classes_num": 282, "classif": [2, 87, 132, 203, 206, 210, 237, 242, 248, 250, 329, 330], "classifi": [0, 1, 2, 60, 87, 132, 172, 203, 208, 210, 237, 242, 244, 246, 248, 250, 280, 285], "classmethod": [16, 73, 186, 222, 257, 334], "classtyp": [6, 326], "claus": 346, "clean": [5, 338], "clean_featur": [26, 28, 48], "clean_float": 320, "cleaner": 330, "cleanli": 320, "clear": 328, "click": 270, "clip": [2, 210, 246, 248, 249, 250], "clipbox": [71, 184, 220], "clipclassifi": [60, 210, 246, 248, 249], "clone": [0, 1], "close": 327, "closest": [325, 337], "closur": 94, "cloud": 344, "cluster": 20, "cm": 338, "cm2": 338, "coars": 51, "coarse_land_cov": 51, "coarser": 51, "coco": [65, 178, 214], "coco_encode_rl": 272, "code": [0, 1, 3, 6, 7, 8, 51, 254, 318, 324, 329, 342, 346], "code_num": 324, "codebas": 6, "coeffici": [74, 187, 223], "col": [325, 330], "colab": 2, "collact": 320, "collect": [82, 91, 108, 195, 231, 285, 296, 320, 321, 323, 325, 331], "colmap": 6, "color": [129, 130, 270, 320], "colorencod": 129, "column": [7, 311, 320, 325, 330], "column_nam": 20, "com": [0, 1, 2, 71, 81, 121, 122, 184, 194, 220, 230, 264, 324, 345], "com4": 7, "combin": [0, 2, 74, 134, 135, 156, 157, 187, 223, 273], "combinedmaskdataset": [151, 153], "come": [7, 270], "comm": [79, 106, 192, 228], "comma": [0, 1], "command": [0, 1, 3, 4, 5, 6, 8], "commit": 5, "common": [80, 107, 193, 229, 262, 325, 336, 338, 342], "commun": [3, 9, 82, 108, 195, 231], "compar": 3, "compat": [74, 134, 135, 156, 157, 187, 223, 303, 338], "complet": [2, 6, 7, 203, 320, 324], "complex": 325, "compon": [9, 91, 132, 292], "compos": [132, 138, 160, 206, 285], "composit": 206, "comprehens": 2, "comput": [0, 2, 4, 71, 74, 75, 80, 81, 82, 107, 108, 123, 124, 125, 129, 132, 134, 135, 136, 139, 140, 142, 143, 144, 145, 146, 156, 157, 158, 161, 162, 184, 187, 188, 193, 194, 195, 206, 220, 223, 224, 229, 230, 231, 250, 253, 263, 264, 265, 266, 269, 272, 273, 274, 277, 282, 291, 318, 323, 324, 325, 329, 331], "computation": 89, "compute_n_possible_world": 26, "compute_similar": 255, "con_mat": [95, 281, 285], "concatdataset": 116, "concaten": [116, 272], "concept": 2, "conclus": 343, "concret": [311, 320, 334, 335, 336, 337], "concurr": 324, "condit": [0, 1, 66, 179, 215, 248, 250, 346], "conf": 340, "confer": [138, 160], "confid": 132, "config": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 65, 97, 130, 138, 160, 178, 214], "config_fil": 130, "configr": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46], "configur": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 71, 184, 220, 250, 291, 318, 322], "confirm": 327, "conflict": 326, "conform": 327, "confus": [1, 285, 327], "connect": [0, 73, 74, 186, 187, 222, 223, 324], "cons_type_classifi": 58, "consequ": 8, "consequenti": [0, 1, 346], "consist": [0, 1, 9, 95, 312, 318, 320, 338], "consol": 320, "constant": 10, "construct": [2, 6, 73, 87, 122, 124, 125, 145, 186, 222, 277, 285, 303, 307, 320], "construct_confusion_matrix_imag": [95, 281, 285], "construction_type_classifi": 2, "constructionclass": [23, 26], "constructionclass_kei": [23, 26], "constructiontypeclassifi": 86, "constyp": [7, 8], "constypeclassifi": 87, "consum": 89, "contact": [0, 1], "contain": [0, 1, 4, 7, 8, 47, 51, 73, 74, 87, 89, 91, 116, 132, 186, 187, 203, 206, 210, 222, 223, 237, 242, 246, 248, 250, 252, 253, 259, 270, 285, 289, 292, 297, 299, 301, 303, 305, 312, 314, 315, 318, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 333, 335, 336, 337, 342], "content": [7, 327, 331], "content_value_infer": 54, "context": [2, 74, 83, 109, 134, 135, 156, 157, 187, 196, 223, 232, 252], "context_length": [252, 253], "continu": [0, 1, 345], "contract": [0, 1, 346], "contrari": 7, "contribut": 3, "contributor": [0, 1, 3, 346], "control": [254, 273, 320], "conv2d": [74, 75, 187, 188, 223, 224], "conv2ddynamicsamepad": [74, 187, 223], "conv2dstaticsamepad": [75, 188, 224], "conv3x3_bn_relu": 123, "conv_out": 123, "convers": 338, "convert": [20, 51, 80, 193, 229, 252, 253, 280, 303, 318, 320, 322, 323, 325, 327, 332, 338], "convert_area": 338, "convert_length": 338, "convert_model": [80, 193, 229], "convert_polygons_to_centroid": 320, "convert_unit": 338, "convert_weight": [253, 338], "convolut": [73, 74, 123, 138, 160, 186, 187, 222, 223, 253], "coord": [257, 274, 318, 320, 322, 325, 327], "coordin": [2, 3, 6, 8, 259, 267, 274, 292, 294, 303, 311, 312, 315, 318, 320, 322, 325, 327, 331], "coordinatesin": 312, "coords_input": 267, "copi": [83, 95, 109, 196, 232, 320], "copy_id": [83, 109, 196, 232], "copyright": 9, "corner": [312, 327], "correa": 344, "correct": 48, "correl": [0, 20], "correspond": [6, 74, 134, 135, 156, 157, 187, 206, 223, 242, 248, 250, 254, 280, 296, 303, 320, 322, 325, 330, 336], "corrmat": 20, "corrupt": 327, "cosine_anneal_schedul": 281, "cost": [4, 303], "count": [320, 324], "counti": [6, 47, 311, 318, 322, 324], "cover": [1, 51, 317, 324, 331], "coverag": [3, 254], "cpu": [80, 107, 132, 193, 203, 206, 229, 250, 285], "cr": [320, 331], "creat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 74, 75, 83, 87, 109, 187, 188, 196, 223, 224, 232, 311, 312, 314, 317, 318, 320, 321, 323, 324, 325, 326, 330, 331, 332, 342], "create_correl": 20, "create_overlaid_imag": 332, "createindex": [66, 179, 215], "creation": [2, 342], "crit": 123, "criteria": 14, "criterion": [281, 335], "crop": [5, 91, 138, 160, 259, 272, 330], "crop_box": [259, 272], "crop_imag": 330, "crop_n_lay": 259, "crop_n_points_downscale_factor": 259, "crop_nms_thresh": 259, "crop_overlap_ratio": 259, "crowd": [66, 179, 215], "crs84": 320, "csail_seg": [96, 130], "csail_segment": 96, "csail_segmentation_tool": 92, "csv": [0, 1, 6, 7, 320], "csv_root_fold": [151, 153], "ctx": [74, 83, 109, 134, 135, 156, 157, 187, 196, 223, 232], "cuda": [132, 137, 159, 206, 252, 257, 285], "cummulative_s": 116, "cumsum": 116, "current": [0, 1, 4, 74, 129, 134, 135, 140, 156, 157, 162, 187, 223, 237, 270, 291, 303, 320, 332, 338], "curv": 206, "custom": [2, 12, 74, 83, 87, 109, 134, 135, 156, 157, 172, 187, 196, 210, 223, 232, 320, 329, 330], "custom_model": 91, "custom_transform": [133, 155], "customiz": 250, "cv": 259, "cxhxw": 270, "d": [80, 107, 116, 193, 229, 275], "d095e4b8": 318, "d_model": 253, "damag": [0, 1, 2, 26, 47, 248, 346], "damagedetection_streetlevel": 248, "data": [2, 3, 4, 5, 6, 7, 8, 18, 20, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 74, 82, 83, 87, 89, 95, 97, 108, 109, 113, 134, 135, 152, 156, 157, 172, 187, 195, 196, 203, 206, 223, 231, 232, 237, 242, 272, 280, 285, 289, 291, 292, 299, 301, 303, 305, 307, 309, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 331, 342, 346], "data_csv": [151, 153], "data_dir": [87, 237, 242], "data_parallel": [83, 109, 111, 196, 232], "data_sourc": 118, "data_tensor": 116, "databas": [2, 3, 7, 342], "datafram": [89, 320], "dataload": [114, 203, 285], "dataparallel": [80, 83, 107, 109, 193, 196, 229, 232], "dataparallelwithcallback": [83, 109, 196, 232], "dataset": [2, 3, 7, 8, 20, 51, 65, 87, 97, 114, 118, 151, 152, 153, 154, 171, 178, 203, 206, 214, 254, 279, 285, 291, 299, 311, 318, 323, 331], "dataset_ext": 331, "dataset_path": 331, "datasetbinari": 206, "datasetrgb": 206, "datatyp": 322, "de": [0, 1], "debug": 285, "dec_weight": 130, "decad": 1, "decent": 254, "decim": [89, 255, 318, 338], "decod": [74, 187, 223, 254, 273], "decode_box_output": [71, 184, 220], "decode_segmap": 332, "decoder_epoch_20": 130, "decompos": 264, "dedic": 4, "deep": [285, 327], "deep_sup_scal": 123, "deepen": 2, "deeplabv3_resnet101": 206, "def": [3, 4, 5, 6, 8, 74, 134, 135, 156, 157, 187, 223, 320], "default": [0, 1, 3, 4, 8, 51, 66, 80, 87, 91, 95, 98, 107, 132, 172, 179, 193, 203, 206, 210, 215, 229, 237, 242, 250, 252, 285, 291, 299, 301, 305, 307, 309, 311, 312, 314, 318, 320, 329, 330, 331, 332, 338], "default_bp": 254, "default_filenam": 329, "default_load": [151, 153], "default_model": 329, "defin": [6, 11, 12, 14, 49, 71, 74, 75, 81, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 194, 203, 204, 220, 223, 224, 230, 253, 263, 264, 265, 266, 269, 273, 277, 282, 289, 291, 292, 294, 296, 297, 299, 301, 303, 305, 307, 309, 311, 312, 314, 315, 318, 320, 321, 322, 324, 325, 327, 330, 334, 335, 336, 337, 338], "definit": 320, "deform": [138, 160], "degenerated_to_sgd": 94, "degre": [318, 325], "deierlein": 344, "deleg": 334, "demonstr": [3, 4, 5, 6, 7, 8, 9, 318], "denomin": [80, 107, 193, 229], "dens": 267, "dense_prompt_embed": [265, 266], "denseblock": 144, "dep_revert": 324, "depend": [259, 331], "depth": [74, 80, 89, 107, 187, 193, 223, 229, 264, 269, 296, 321, 324], "depth_coeffici": [74, 187, 223], "depth_divisor": [74, 187, 223], "depthmap": [89, 296], "deriv": [0, 1, 49, 132, 320, 338], "desc": [322, 324], "desc_long": 325, "descent": 203, "describ": [0, 1, 47, 138, 160, 315, 324, 327], "descript": [3, 4, 5, 6, 8, 30, 322, 324, 325, 329], "desert": 51, "design": [2, 5, 210, 250, 299, 318, 327, 330], "designlevel": 26, "designlevel_h": 48, "designlevel_h_kei": 48, "designlevel_kei": 26, "designsaf": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346], "designwindspe": 48, "designwindspeed_kei": 48, "desir": [1, 318, 338], "detail": [1, 2, 3, 51, 74, 82, 108, 134, 135, 156, 157, 187, 195, 223, 231, 265, 266, 273], "detect": [0, 1, 2, 8, 16, 91, 92, 257, 276, 327, 331, 338], "detection_dict": [16, 257], "detectionresult": 257, "detector_id": [16, 257], "detectron2": 91, "determiend": 268, "determin": [82, 108, 195, 231, 248, 267, 299, 324, 327, 342], "dev": 112, "develop": [6, 8, 9, 317, 342, 345], "deviat": [1, 80, 107, 193, 229, 318], "devic": [80, 82, 83, 107, 108, 109, 129, 130, 132, 193, 195, 196, 203, 206, 229, 231, 232, 250, 252, 253, 255, 257, 268, 270, 285], "device_id": [83, 109, 112, 196, 232], "df": 20, "dfirm_id": 324, "dh": [71, 184, 220], "dict": [3, 6, 8, 89, 91, 132, 203, 204, 206, 210, 237, 242, 246, 248, 250, 259, 268, 280, 285, 303, 318, 320, 321, 324, 325, 326, 330, 338], "dict_kei": 320, "dictgatherdataparallel": 112, "dictionari": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 71, 89, 91, 132, 184, 203, 206, 210, 220, 237, 242, 246, 248, 250, 259, 268, 285, 303, 318, 320, 321, 324, 325, 326, 330, 338], "differ": [0, 1, 3, 8, 80, 83, 87, 107, 109, 116, 193, 196, 203, 206, 229, 232, 267, 272, 323, 326, 338], "differenti": [74, 134, 135, 156, 157, 187, 223], "dilat": [74, 75, 187, 188, 223, 224, 282], "dilate_scal": 123, "dim": [0, 83, 109, 112, 196, 232, 264], "dimens": [0, 71, 80, 95, 107, 116, 184, 193, 220, 229, 270, 274], "dimension": [252, 320, 327], "dino": [16, 257], "dir_path": [5, 14, 16, 89, 91, 132, 285, 321, 330], "direct": [0, 1, 312, 322, 346], "directli": [5, 6, 8, 74, 134, 135, 156, 157, 187, 223, 268, 273, 312, 330, 337, 345], "directori": [5, 6, 7, 8, 14, 16, 87, 89, 91, 132, 172, 203, 206, 237, 242, 285, 294, 321, 326, 330, 331, 332], "dirnam": [7, 8], "disambigu": 268, "disclaim": [0, 1, 346], "disconnect": [259, 272], "discret": [137, 159], "discuss": [2, 318], "displai": [2, 132, 237, 277, 321, 324, 330], "distanc": [320, 325, 333, 335], "distance_based_point_match": 333, "distancebasedpointmatch": [333, 335], "distinct": 7, "distribut": [0, 1, 80, 107, 114, 193, 229, 324, 346], "distributed_rank": 129, "divid": [71, 184, 220, 314, 324, 325], "dl": 47, "dl_ap": 47, "do": [0, 1, 5, 6, 8, 270, 324, 343], "document": [0, 1, 2, 9, 138, 160, 311, 327, 331, 342, 346], "documentaion": [9, 342], "doe": [0, 1, 4, 8, 20, 89, 132, 203, 206, 285, 303, 312, 320, 321, 324, 325, 327, 329, 330, 332], "doi": 344, "done": [0, 7, 8, 9, 80, 107, 116, 193, 229, 237], "door": [91, 342], "download": [0, 1, 2, 3, 5, 9, 74, 91, 132, 151, 152, 154, 187, 203, 206, 223, 252, 277, 291, 294, 296, 299, 314, 317, 318, 324, 329], "download_all_attr_for_region": 324, "download_all_attr_from_api": 324, "download_attr_from_api": 324, "download_footprint": 3, "download_func": 324, "download_imag": 4, "download_root": 252, "download_url": [257, 329], "downloaded_data": 324, "downsample_r": 269, "downscal": 269, "downstream": 292, "draw": [118, 137, 159], "drawn": 118, "driven": 3, "drop": [73, 74, 118, 186, 187, 222, 223, 311], "drop_connect": [74, 187, 223], "drop_connect_r": [73, 74, 186, 187, 222, 223], "drop_last": 118, "dropout": 144, "dropout_p": 144, "dropout_r": [74, 187, 223], "dtype": [71, 130, 184, 220, 253, 332], "dual_zon": 324, "due": [3, 7, 324], "duplic": [259, 321, 326, 327], "dure": [0, 8, 74, 80, 82, 87, 107, 108, 132, 134, 135, 156, 157, 187, 193, 195, 203, 206, 223, 229, 231, 237, 242, 280], "dw": [71, 184, 220], "dx": [71, 184, 220], "dy": [71, 184, 220], "dynam": [3, 6, 74, 187, 223, 326], "e": [0, 1, 4, 7, 8, 20, 57, 66, 74, 87, 91, 129, 132, 134, 135, 138, 156, 157, 160, 179, 187, 203, 206, 215, 223, 285, 299, 303, 312, 314, 318, 320, 321, 322, 324, 325, 327, 330, 338, 342], "each": [0, 1, 2, 3, 5, 7, 8, 23, 26, 28, 48, 49, 51, 57, 74, 80, 82, 83, 89, 91, 107, 108, 109, 116, 132, 134, 135, 138, 156, 157, 160, 172, 187, 193, 195, 196, 203, 206, 223, 229, 231, 232, 237, 259, 268, 270, 272, 280, 285, 289, 291, 301, 303, 305, 314, 315, 317, 318, 320, 321, 324, 325, 327, 330, 331, 338, 342], "earli": [203, 206], "earth": 325, "easi": [80, 107, 193, 229], "easili": [2, 73, 186, 222], "east_build": 321, "east_view": 321, "eav": 89, "eb9058c3a382ffc7106e4002c42a8d85": [151, 152], "edg": [272, 320, 345], "edit": 259, "edu": [137, 151, 152, 159], "effect": [9, 237, 342], "effici": [5, 73, 137, 159, 186, 222, 291, 301, 305, 318], "efficientdet": [63, 176, 212], "efficientnet": [63, 176, 212], "efficientnet_param": [74, 187, 223], "efficientnetv2_": 203, "either": [0, 7, 74, 134, 135, 156, 157, 187, 206, 223, 285, 299, 312, 318, 322, 329, 333, 334, 338], "elast": [138, 160], "elastic_transform": [138, 160], "elastictransform": [138, 160], "element": [5, 12, 118, 138, 160, 268, 309, 312, 314, 320, 324, 325], "element_count": 324, "elementwise_affin": 253, "elev": [2, 89, 91, 132, 172, 291, 318, 324], "elevation_data": 318, "elhaddad": 344, "elif": 6, "elig": 320, "els": [5, 6], "emb": 267, "embed": [0, 264, 265, 266, 267, 269, 270], "embed_dim": [253, 264, 267], "embed_h": 267, "embed_w": 267, "embedding_dim": [263, 269], "embedding_h": 267, "embedding_w": 267, "empti": [1, 4, 206, 272, 285, 320, 325], "empty_asset": 320, "enabl": [2, 3, 6, 273, 330, 344], "enc_weight": 130, "encod": [4, 5, 74, 187, 223, 252, 254, 265, 266, 267, 269, 272, 273], "encode_imag": [201, 253], "encode_text": 253, "encoder_epoch_20": 130, "encourag": 3, "end": [254, 268], "end_idx": 101, "endors": [0, 1], "endpoint": [291, 324], "enforc": [7, 74, 134, 135, 156, 157, 187, 223, 328], "engin": 289, "enhanc": 250, "enhancedcompos": [138, 160], "enrich": 337, "ensur": [2, 5, 7, 89, 132, 237, 320, 324, 326, 327, 329, 338], "enter": [0, 1, 6, 8, 250], "entiti": 12, "entri": [4, 82, 89, 108, 195, 231, 315, 342], "env": [130, 138, 160, 254], "envelop": 324, "environ": [0, 1, 2, 342, 344], "ep": [80, 81, 83, 94, 107, 109, 193, 194, 196, 229, 230, 232, 253, 263], "epoch": [0, 1, 87, 95, 203, 206, 237, 242], "epsg": [303, 325, 331], "epsilon": [80, 107, 193, 229], "equal": [324, 327], "equival": [74, 83, 109, 134, 135, 156, 157, 187, 196, 223, 232, 320], "era": [285, 307], "erabuilt": [3, 7, 8], "error": [4, 8, 12, 301, 305, 312, 322, 324, 328, 338], "errormessag": 322, "ertugrul": 344, "es_toler": [203, 206], "especi": 320, "essenti": 324, "estim": [2, 7, 80, 91, 107, 193, 229], "etc": 320, "euclidean": [333, 335], "eval": [0, 97], "eval_multipro": 97, "evalu": [0, 1, 80, 95, 107, 193, 203, 229, 285, 330], "evaluate_to_stat": 285, "even": [0, 1, 325, 329, 346], "evenli": 272, "event": [0, 1, 346], "evergreen": 51, "everi": [6, 71, 74, 75, 81, 118, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 194, 220, 223, 224, 230, 253, 263, 264, 265, 266, 269, 273, 277, 282, 324], "everyth": [47, 342], "exact": 0, "exactli": [80, 107, 193, 229, 274, 312, 327], "exampl": [1, 3, 4, 5, 6, 7, 8, 9, 51, 73, 80, 82, 83, 91, 95, 107, 108, 109, 118, 138, 160, 186, 193, 195, 196, 222, 229, 231, 232, 291, 303, 311, 312, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 338, 342], "example__": 203, "example_imag": 332, "example_tiburon": 7, "exce": [320, 324], "exceed": [320, 324], "except": [4, 8, 10, 129, 320], "excess": 327, "excit": [73, 186, 222], "exclud": [268, 311, 320], "exclude_channel": [138, 160], "exclude_featur": 20, "exclus": [51, 116], "execut": [5, 6, 8, 57, 83, 109, 196, 232, 320, 334, 337], "execute_replication_callback": [83, 109, 196, 232], "exemplari": [0, 1, 346], "exist": [0, 1, 4, 5, 6, 7, 8, 83, 89, 109, 116, 132, 172, 196, 203, 206, 232, 285, 320, 321, 325, 326, 327, 329, 331, 332, 335, 344], "exist_ok": 8, "exp": [0, 1], "expand_ratio": [74, 187, 223], "expans": 253, "expect": [0, 7, 47, 80, 107, 193, 229, 270, 272, 274, 320, 322, 324, 328, 338], "expected_unit_typ": 338, "expens": 89, "experi": 1, "experiment": 1, "explain": 2, "explor": 2, "exponenti": 324, "export": [0, 1, 73, 74, 186, 187, 222, 223, 273, 311], "express": [0, 1, 343, 346], "ext": 129, "extend": [47, 74, 134, 135, 156, 157, 187, 223, 303, 311, 342], "extens": [321, 325, 327], "extent": [320, 331], "extent_custom": 320, "extent_default": 320, "extent_non": 320, "extern": 322, "extra": 273, "extract": [1, 2, 3, 5, 8, 73, 186, 222, 264, 292, 299, 303, 307, 309, 311, 320, 331], "extract_aerial_imageri": 331, "extract_featur": [73, 186, 222], "f": [3, 4, 5, 6, 7, 8, 324], "f0ef6b0ae62326f3e7ffdfab6717acfc": [151, 152], "f1": 0, "f369": 318, "facad": [2, 89], "facade_pars": [2, 58], "facadepars": 89, "facebookresearch": 264, "facil": [323, 331], "facilit": [4, 87], "factor": 342, "fail": [318, 320, 322, 324], "fall": [1, 311, 318, 325, 336], "fals": [20, 23, 26, 28, 48, 57, 66, 73, 74, 80, 83, 95, 107, 109, 118, 121, 122, 123, 124, 125, 129, 144, 145, 151, 152, 154, 172, 179, 186, 187, 193, 196, 215, 222, 223, 229, 232, 252, 257, 264, 265, 266, 269, 270, 273, 277, 280, 282, 285, 303, 312, 318, 320, 321, 324, 327, 328, 329, 330, 331, 338], "faq": 318, "fashion": [16, 257, 303], "faster": 20, "fbuil": 344, "fc_dim": 123, "fd_id": 8, "featur": [0, 1, 3, 6, 7, 8, 18, 20, 23, 26, 28, 48, 49, 51, 57, 71, 73, 91, 146, 184, 186, 220, 222, 285, 289, 303, 317, 318, 320, 324, 337, 338, 342], "feature_kei": 320, "feature_name_map": 320, "feature_s": 282, "featurecollect": 320, "features_to_remov": 320, "featureserv": 324, "feed_dict": 123, "feet": [89, 299, 303, 318, 325, 338], "fema": [3, 291, 314, 324], "fema_firm_scrap": 286, "femafirmscrap": 291, "fetch": [2, 291, 301, 303, 305, 312, 318, 322, 324], "fetch_all_elev": 318, "fetch_api_field": 324, "fetch_data_for_cel": 324, "fetch_footprint_data": 315, "fetch_max_records_per_queri": 324, "fetch_release_nam": 312, "fewer": [320, 325], "ffe": 320, "ffh": 91, "ffh_predictor_klepac": 58, "ffhpredictorklepac": 91, "field": [7, 8, 51, 74, 94, 187, 223, 291, 317, 320, 324, 342], "field_nam": 324, "figur": [285, 323, 330], "file": [0, 1, 4, 5, 6, 7, 8, 12, 47, 66, 74, 91, 132, 179, 187, 206, 215, 223, 237, 242, 252, 280, 285, 303, 315, 320, 321, 323, 324, 325, 326, 327, 329, 330, 331, 332], "file_path": [7, 8, 320], "filenam": [0, 1, 6, 91, 129, 151, 152, 172, 206, 280, 285, 321, 325, 329, 330], "filenotfounderror": [4, 5, 12, 89, 206], "filepath": [7, 257, 327], "fill": [2, 7, 18], "filter": [2, 6, 8, 9, 10, 66, 74, 179, 187, 215, 223, 259, 272, 303, 311, 342], "filter1": 16, "filter_hous": 5, "filterboundingbox": 16, "filterdetectionresult": 16, "filtered_imag": 5, "filtered_images_street": 5, "final": [0, 1, 73, 186, 222, 253, 274, 324], "final_cel": 324, "find": [2, 8, 311, 318, 325, 333, 336, 343], "find_json": 201, "find_recurs": 129, "fine": [203, 317], "finetun": 0, "firm": 291, "firm_scrap": 291, "firmett": 324, "firmzon": 8, "first": [1, 5, 7, 74, 82, 83, 91, 108, 109, 116, 134, 135, 156, 157, 187, 195, 196, 223, 231, 232, 311, 320, 324, 325, 326, 327, 338], "firstfloorelev": 28, "firstfloorelevation_kei": 28, "fit": [0, 1, 330, 346], "five": 51, "fix": 332, "fl": 318, "flag": [0, 314], "flat": [242, 320], "flatten": 320, "flatten_arrai": 23, "fld_ar_id": 324, "fld_zone": 324, "flexibl": 333, "float": [16, 66, 71, 73, 89, 91, 179, 184, 186, 206, 215, 220, 222, 257, 259, 274, 280, 285, 312, 318, 320, 325, 327, 331, 338], "float32": [71, 184, 220], "float64": 7, "flood_risk": 291, "floodtyp": 28, "floodtype_kei": 28, "floodzon": [28, 48], "floodzone_kei": [28, 48], "floor": [2, 91, 208, 210, 244, 303, 320], "floor_area_infer": 54, "florida": 318, "fly": [0, 116], "fmk": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346], "focu": [2, 9, 342], "focus": 2, "folder": [0, 1, 151, 206, 297], "folder_path": 201, "follow": [0, 1, 3, 4, 5, 6, 7, 8, 51, 74, 89, 91, 121, 122, 134, 135, 156, 157, 187, 223, 253, 259, 268, 318, 322, 331, 332, 338, 342, 346], "foot": 338, "footprint": [2, 4, 5, 6, 8, 9, 89, 292, 294, 296, 299, 303, 307, 311, 314, 315, 331], "footprint_scrap": 286, "footprintscrap": [8, 292, 299, 307, 314], "footprintsourc": 6, "forc": 329, "foreground": 270, "forest": 51, "form": [0, 1, 268, 270, 327, 338, 346], "format": [129, 250, 259, 268, 270, 272, 274, 280, 303, 312, 318, 320, 325, 327, 338], "former": [71, 74, 75, 81, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 194, 220, 223, 224, 230, 253, 263, 264, 265, 266, 269, 273, 277, 282], "formula": [74, 134, 135, 156, 157, 187, 223], "fort": 318, "forward": [71, 73, 74, 75, 81, 82, 108, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 186, 187, 188, 194, 195, 220, 222, 223, 224, 230, 231, 253, 263, 264, 265, 266, 267, 268, 269, 273, 277, 282], "forward_with_coord": 267, "found": [3, 4, 5, 6, 8, 12, 203, 206, 311, 318, 320, 321, 322, 324, 326, 327, 331, 334, 338], "found_ht": 8, "found_typ": 8, "foundat": [2, 3, 9, 172, 343], "foundation_classifi": 58, "foundation_type_binari": 172, "foundation_type_classifi": 2, "foundation_type_testset": 172, "foundationclassifi": 0, "foundationelevationclassifi": 132, "foundationtyp": 26, "foundationtype_kei": 26, "four": [3, 312, 327], "fourth": 327, "fp16": 253, "fp_inventori": 4, "fparea": [3, 6, 7, 8], "fpn_dim": 123, "fpn_inplan": 123, "fpsourc": 315, "frac": [80, 107, 193, 229], "frame": [268, 270], "framework": [6, 9, 342, 344], "francisco": 325, "frank": 344, "free": 1, "freez": 0, "frequenc": [3, 267, 280], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 30, 51, 71, 74, 80, 82, 87, 89, 91, 107, 108, 116, 118, 121, 122, 132, 137, 138, 159, 160, 172, 184, 187, 193, 195, 203, 210, 220, 223, 229, 231, 237, 242, 246, 248, 250, 264, 265, 266, 268, 270, 272, 280, 285, 291, 294, 296, 299, 301, 303, 305, 307, 309, 311, 312, 315, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 336, 337, 338, 342, 345], "from_channel": [138, 160], "from_dict": [16, 257], "from_nam": [73, 186, 222], "from_pretrain": [73, 186, 222], "from_unit": 338, "frontier": 344, "frozen": 0, "ft": [0, 3, 4, 5, 6, 8, 291, 299, 301, 303, 305, 307, 309, 311, 314, 315, 318, 331, 338], "ft2": 338, "ftmyerselevationmap": 318, "ftprntid": 8, "ftprntsrc": 8, "full": 3, "fulli": [0, 6], "function": [3, 4, 5, 6, 8, 16, 71, 73, 74, 75, 81, 83, 94, 109, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 151, 153, 156, 157, 158, 161, 184, 186, 187, 188, 194, 196, 206, 220, 222, 223, 224, 230, 232, 253, 257, 263, 264, 265, 266, 269, 273, 277, 282, 294, 303, 315, 318, 320, 322, 324, 325, 327, 330, 335, 336, 337, 338], "fund": 9, "further": [0, 270, 303], "fuse": 2, "futur": [82, 108, 195, 231], "futureresult": [82, 108, 195, 231], "g": [1, 7, 66, 74, 87, 91, 129, 132, 134, 135, 146, 156, 157, 179, 187, 203, 206, 215, 223, 285, 299, 312, 314, 318, 320, 321, 322, 324, 330, 338, 342, 344], "gabl": [7, 242, 320], "galleri": 9, "galveston": 318, "gamma": [80, 107, 193, 229], "gap": [4, 7, 255], "garag": 2, "garage_detector": [2, 58], "garagetyp": [23, 26], "garagetype_kei": [23, 26], "gararg": 303, "gather": [82, 108, 195, 231], "gaussian": [1, 138, 160], "gaussian_std": 280, "gcp": 6, "gcpkei": 6, "gelu": [263, 264, 265, 266, 267], "gen_method": 20, "gener": [0, 2, 3, 4, 7, 9, 20, 71, 132, 184, 220, 259, 267, 272, 303, 314, 318, 320, 324, 330, 342], "generate_crop_box": 272, "generate_csv": 171, "geo_tool": 323, "geograph": [3, 9, 292, 299, 301, 305, 309, 314, 317, 318, 320, 324, 325, 327, 342], "geojson": [7, 8, 303, 311, 315, 318, 320, 325], "geojson_dict": 320, "geojson_written": 320, "geom": [322, 325, 327], "geom_typ": 322, "geometr": 91, "geometri": [292, 309, 320, 322, 324, 325, 327, 331, 337], "geometry_to_list_of_list": 325, "geospati": [323, 325, 327], "geospatial_knn": 20, "geotool": [323, 324, 325, 327], "get": [2, 3, 4, 5, 8, 66, 74, 82, 89, 108, 179, 187, 195, 215, 223, 231, 264, 292, 294, 296, 303, 307, 309, 311, 312, 318, 320, 322, 324, 325, 331, 342], "get_asset": [301, 305], "get_asset_coordi": 320, "get_asset_coordin": 320, "get_asset_featur": [7, 320], "get_asset_id": 320, "get_available_attribut": 291, "get_boundari": [318, 322, 324], "get_centroid": 320, "get_class": [3, 4, 5, 6, 7, 8, 51, 291, 311, 312, 317, 318, 322, 324, 326, 330, 331], "get_coordin": 320, "get_datafram": 320, "get_dense_p": 267, "get_el": 309, "get_element_count": 324, "get_elevation_usg": 318, "get_era_height_foundation_class": 26, "get_ext": 320, "get_extended_featur": 303, "get_filtered_data_given_inventori": [8, 303], "get_footprint": [3, 4, 5, 6, 8, 292, 299, 307, 311, 314, 318, 331], "get_geojson": 320, "get_hazus_base_replacement_cost": 24, "get_hazus_height_class": 24, "get_hazus_height_classes_res1": 24, "get_hazus_income_to_const_class": 24, "get_hazus_occ_type_map": 24, "get_hazus_region_to_garag": 24, "get_hazus_state_region_map": 24, "get_hazus_year_class": 24, "get_imag": [4, 5, 294, 296, 297, 321, 330], "get_image_embed": 270, "get_image_s": [73, 186, 222], "get_mask": 130, "get_model_param": [74, 187, 223], "get_model_path": 329, "get_mosaic_bbox_wgs84": 331, "get_multi_kei": 320, "get_n_pw": 320, "get_object": 326, "get_pair": 254, "get_points_in_polygon": 333, "get_points_near_polygon": 333, "get_preprocess_shap": 274, "get_random_sampl": [3, 4, 5, 6, 8, 318, 320], "get_raw_data": [8, 303], "get_raw_data_given_boundari": 8, "get_region_elevation_data": 318, "get_rel_po": 264, "get_replacement_cost": 23, "get_same_padding_conv2d": [74, 187, 223], "get_str_from_occ": 23, "get_supported_unit": 338, "get_unit_typ": 338, "get_world_r": 320, "getannid": [66, 179, 215], "getcatid": [66, 179, 215], "getimgid": [66, 179, 215], "getnsidata": 303, "getpointsinpolygon": [320, 333, 335, 336, 337], "getpointsnearpolygon": [333, 337], "gfid": 324, "gi": 303, "gi_ap": 47, "git": [0, 1, 345], "github": [0, 1, 2, 71, 81, 121, 122, 184, 194, 220, 230, 264, 345], "gitignor": 5, "give": [2, 3, 80, 107, 193, 229, 270], "given": [3, 66, 74, 116, 118, 132, 134, 135, 138, 156, 157, 160, 172, 179, 187, 215, 223, 242, 248, 250, 252, 259, 265, 266, 268, 270, 274, 280, 292, 294, 296, 297, 301, 303, 305, 307, 309, 311, 314, 322, 324, 325, 326, 327, 328, 334, 342], "glimps": 2, "global": [3, 11, 74, 187, 223], "global_asset_indic": 23, "global_attn_index": 264, "global_param": [73, 74, 186, 187, 222, 223], "global_ruleset": 41, "globalid": 324, "globalparam": [73, 74, 186, 187, 222, 223], "go": 342, "goal": 7, "goe": 320, "good": [0, 1, 346], "googl": [1, 2, 4, 5, 6, 71, 184, 220, 294, 296], "google_satellit": [4, 286, 330], "google_satellite_class": 4, "google_street": [4, 5], "google_street_class": [4, 5], "google_streetview": 286, "googlesatellit": [4, 294, 330], "googlestreetview": [4, 5, 296], "gov": [318, 324], "gover": 9, "govindje": 344, "gp": 3, "gpt": [2, 199, 208, 244], "gpt_base_model": 58, "gpu": [0, 80, 89, 107, 193, 203, 206, 229, 250, 285], "gpu0": 129, "gpu1": 129, "grad": [74, 94, 134, 135, 156, 157, 187, 223], "grad_output": [74, 187, 223], "gradient": [74, 134, 135, 156, 157, 187, 203, 223], "gradoutput": [134, 135, 156, 157], "grain": 317, "gram": 338, "grant": [9, 343], "graphic": [3, 7, 8], "grassland": 51, "gregori": 344, "grid": [267, 272, 324, 325, 330], "ground": [1, 3, 16, 257, 285], "ground_elv": 8, "ground_elv_m": 8, "grounded_sam_util": 256, "grounding_dino_model": 257, "group": [74, 75, 125, 138, 160, 187, 188, 223, 224, 277, 282], "gstrt_4769427063_": 321, "gt_label": 255, "guarante": [83, 109, 196, 232, 324], "guo": 344, "gz": [151, 152, 254], "h": [0, 1, 80, 107, 138, 160, 193, 229, 264, 268, 269, 270, 274, 332, 344], "ha": [0, 1, 2, 6, 7, 71, 74, 118, 134, 135, 156, 157, 184, 187, 220, 223, 270, 272, 320, 325, 327, 342], "hackabl": 252, "hackish": [151, 153], "halv": 203, "hand": 2, "handl": [7, 74, 134, 135, 156, 157, 172, 187, 223, 253, 291, 301, 305, 307, 321, 324, 325, 330], "happen": [0, 1], "hard": 6, "harvard": [137, 159], "has_mask_input": 273, "has_part": 318, "has_s": [73, 186, 222], "hasgarag": 48, "hasgarage_kei": 48, "have": [1, 3, 5, 7, 8, 74, 83, 89, 109, 134, 135, 138, 156, 157, 160, 187, 196, 206, 223, 232, 269, 320, 325, 330], "haversin": 325, "haversine_dist": 325, "hazard": [9, 30, 324, 342, 344], "hazu": [23, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 53], "hazus_infer": 21, "hazus_inferer_earthquak": 21, "hazus_inferer_flood": 21, "hazus_inferer_wind": 21, "hazus_ruleset": 22, "hazusinfer": [23, 53], "hazusinfererearthquak": 26, "hazusinfererflood": 28, "hazusinfererwind": 48, "head": [203, 253, 264], "heatmap": 285, "hei": 342, "height": [2, 23, 48, 53, 71, 80, 89, 91, 107, 184, 193, 220, 229, 264, 299, 307, 314, 318, 320, 321, 324, 330], "height_kei": 48, "heightclass": 26, "heightclass_kei": 26, "help": [3, 4, 5, 6, 8], "helper": [74, 187, 223, 324], "herbac": 51, "here": [0, 3, 5, 6, 8], "heurist": [53, 91], "hhw": 8, "hidden": 330, "hidden_dim": [265, 266], "hidden_s": 144, "high": [272, 296, 342], "higher": 0, "hip": [7, 137, 159, 242, 320], "histori": 206, "hold": [0, 1, 291, 301, 305, 330], "holder": [0, 1, 346], "hole": [259, 272], "home": [130, 138, 160, 254, 311, 318, 331], "hook": [71, 74, 75, 81, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 194, 220, 223, 224, 230, 253, 263, 264, 265, 266, 269, 273, 277, 282], "hornauer": [0, 1, 344], "hous": [1, 5, 91], "house_view": 13, "houseview": [5, 16], "how": [2, 3, 4, 7, 8, 9, 289, 318, 320], "howev": [0, 1, 346], "hp": 264, "hp6g80pky0om7qvq": 324, "hq_featur": 266, "hq_token_onli": [265, 266, 270], "hrnet": 120, "hrnetv2": 121, "http": [0, 1, 2, 71, 81, 121, 122, 137, 151, 152, 159, 184, 194, 220, 230, 264, 318, 324, 329, 345], "httperror": 324, "huef": 33, "hueff": 33, "hueffs_config": 33, "huefh": 33, "huefh_config": 33, "huefs_config": 33, "huefss": 33, "huefss_config": 33, "human": [322, 325, 329, 338], "hurrican": [2, 47], "hw": [259, 264], "hwc": [259, 270], "hxwxc": 274, "hymenoptera_data": 203, "hyperparamet": [0, 203], "i": [2, 3, 4, 5, 6, 7, 8, 9, 12, 20, 47, 51, 57, 74, 80, 82, 83, 87, 89, 91, 107, 108, 109, 116, 118, 121, 122, 132, 134, 135, 138, 151, 152, 156, 157, 160, 172, 187, 193, 195, 196, 203, 206, 210, 223, 229, 231, 232, 237, 242, 248, 250, 252, 253, 254, 259, 267, 268, 270, 272, 273, 274, 275, 285, 291, 292, 294, 296, 299, 301, 303, 305, 307, 309, 311, 312, 314, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 342, 343, 345, 346], "id": [20, 66, 82, 108, 132, 179, 195, 215, 231, 320, 322, 324], "id_column": [7, 320], "id_skip": [74, 187, 223], "ident": [0, 1, 74, 187, 223], "identifi": [0, 2, 6, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 82, 89, 108, 195, 231, 285, 292, 320, 321, 322, 326, 330, 331, 336, 338, 342], "idx": [135, 157], "ignor": [71, 74, 75, 81, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 194, 220, 223, 224, 230, 253, 263, 264, 265, 266, 269, 273, 277, 282], "illustr": [3, 6, 8], "im": 101, "im_siz": 272, "imag": [1, 2, 3, 6, 9, 14, 16, 60, 71, 74, 87, 89, 91, 132, 138, 151, 153, 160, 172, 184, 187, 200, 203, 204, 206, 208, 220, 223, 237, 239, 242, 244, 246, 248, 250, 252, 253, 257, 259, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 280, 281, 285, 294, 296, 297, 314, 321, 323, 325, 327, 330, 331, 332, 342], "image_00x": [0, 1], "image_classifi": 58, "image_download": 2, "image_embed": [265, 266, 269, 273], "image_embedding_s": 267, "image_encod": [262, 268], "image_featur": 255, "image_filt": 5, "image_fold": [172, 280], "image_format": [268, 270], "image_nam": 206, "image_p": [265, 266, 269], "image_path": [16, 201], "image_processor": [2, 58], "image_resolut": 253, "image_s": [71, 74, 184, 187, 220, 223, 267], "image_scrap": 286, "image_segment": 58, "image_set": [7, 91, 319, 331], "imageclassifi": [87, 203, 237, 242], "imageencodervit": 264, "imagefold": [151, 153, 206], "imagefolderinst": [151, 153], "imagenet": [0, 122, 124, 145, 277], "imageprocess": 204, "imageprocessor": [89, 204], "imageri": [2, 3, 4, 5, 89, 132, 210, 237, 242, 246, 248, 294, 296, 331], "images_ari": 240, "images_raster_test": 331, "images_satellit": [4, 330], "images_street": [4, 5, 240], "imagescrap": [294, 296, 297], "imagesegment": 206, "imageset": [5, 7, 14, 16, 60, 89, 91, 132, 203, 204, 208, 237, 242, 244, 246, 248, 250, 275, 285, 294, 296, 297, 321, 330, 331, 342], "imagin": 6, "imdir": 206, "img": [66, 71, 101, 179, 184, 215, 220, 321], "img_fold": [0, 1], "img_kei": 201, "img_path": [172, 255, 280], "img_set": 321, "img_siz": 264, "img_sourc": 257, "img_transform": 101, "imgid": [66, 179, 215], "imlab": 129, "impact": [9, 344], "imperi": 338, "implement": [3, 14, 16, 49, 74, 80, 81, 82, 83, 107, 108, 109, 121, 122, 187, 193, 194, 195, 196, 204, 223, 229, 230, 231, 232, 272, 289, 292, 297, 312, 324, 334, 336], "implemented_architectur": 203, "impli": [0, 1, 346], "import": [0, 1, 2, 3, 4, 5, 7, 8, 9, 51, 80, 193, 229, 291, 311, 312, 317, 318, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 338], "impr": 129, "improv": [5, 203, 206, 320], "imput": [2, 4, 8, 9, 10, 342], "imputation_exampl": 2, "imputed_inventori": 7, "imres": 101, "in2": 338, "in_chan": 264, "in_channel": [73, 74, 75, 142, 143, 186, 187, 188, 222, 223, 224], "in_featur": 146, "in_plan": [123, 282], "inaccur": [80, 107, 193, 229], "inch": 338, "incident": [0, 1, 346], "includ": [0, 1, 2, 3, 5, 6, 8, 51, 82, 89, 108, 195, 231, 299, 303, 307, 309, 311, 312, 314, 317, 318, 320, 321, 324, 325, 327, 329, 342, 346], "include_existing_imag": 321, "include_featur": [23, 28, 48], "incom": [23, 26], "income_kei": [23, 26], "incomplet": 7, "ind": 8, "ind6": 8, "index": [7, 8, 9, 116, 118, 151, 153, 206, 280, 312, 320, 325], "index_select": 252, "indic": [116, 118, 252, 270, 272, 301, 305, 320, 324, 325, 327, 332], "indici": 320, "indirect": [0, 1, 346], "individu": [2, 138, 160, 280, 318, 321, 325], "inf": [66, 179, 215], "infer": [7, 10, 89, 91, 132, 289, 329, 342], "infer_building_one_by_on": [28, 48], "infer_detector": [63, 176, 212], "inference_engin": 21, "inferenceengin": [23, 26, 28, 48, 49, 51, 57], "inferred_featur": [28, 41], "info": [4, 66, 179, 215], "infom": 291, "inform": [0, 2, 3, 5, 8, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 66, 82, 83, 108, 109, 179, 195, 196, 215, 231, 232, 246, 273, 285, 292, 303, 311, 315, 317, 320, 321, 322, 324, 342], "infrastructur": 2, "infrequ": 3, "inherit": [6, 87, 335, 336, 337], "inidividu": 291, "initi": [3, 9, 10, 87, 91, 129, 203, 206, 210, 248, 303, 317, 320, 326], "initialize_paramet": 253, "inp": 129, "inplan": 253, "input": [2, 4, 6, 8, 71, 73, 74, 80, 89, 91, 107, 112, 129, 132, 134, 135, 156, 157, 184, 186, 187, 193, 203, 206, 220, 222, 223, 229, 237, 242, 250, 252, 259, 264, 265, 266, 267, 268, 270, 272, 274, 285, 303, 312, 315, 318, 320, 322, 323, 324, 325, 327, 328, 334, 338], "input_": [81, 194, 230], "input_data": [14, 16, 89, 91, 132, 237, 242, 285, 296, 299], "input_devic": 129, "input_dict": [60, 200, 208, 210, 244, 246, 248, 250, 275, 291, 301, 305, 307, 309, 311, 314, 317, 318, 322, 338], "input_dim": [265, 266], "input_filt": [74, 187, 223], "input_imag": 16, "input_image_s": [267, 273], "input_inventori": [18, 20, 23, 26, 28, 48, 49, 51, 57, 289, 291, 317, 318], "input_resolut": 253, "input_s": [144, 264, 268], "input_typ": 322, "input_valid": 323, "input_valu": 327, "inputs": [134, 135, 156, 157], "inputvalid": [323, 327], "insensit": 338, "insert": [6, 8], "insid": [74, 187, 223, 333, 337], "insight": 2, "instal": 9, "instanc": [3, 71, 74, 75, 80, 81, 95, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 151, 154, 156, 157, 158, 161, 184, 187, 188, 193, 194, 220, 223, 224, 229, 230, 237, 253, 263, 264, 265, 266, 269, 273, 277, 282, 291, 294, 296, 301, 305, 314, 318, 320, 326, 328, 334], "instanti": [6, 312, 326], "instead": [0, 8, 12, 71, 74, 75, 80, 81, 107, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 193, 194, 220, 223, 224, 229, 230, 253, 263, 264, 265, 266, 269, 270, 273, 277, 282], "instruct": 338, "int": [16, 20, 57, 66, 87, 89, 95, 118, 179, 203, 206, 210, 215, 237, 242, 250, 252, 257, 259, 264, 268, 270, 280, 285, 318, 320, 321, 322, 324, 325, 326, 330, 332, 338], "integ": [66, 71, 89, 116, 138, 160, 179, 184, 203, 215, 220, 320], "integr": [2, 6, 9, 320], "intend": [9, 74, 134, 135, 156, 157, 187, 223, 312, 329], "intens": 317, "interact": [2, 303, 314, 323, 324], "interchang": 3, "interest": [2, 3, 5, 8, 292, 299, 303, 307, 309, 311, 315, 324], "interfac": [204, 292, 296, 342], "interim": 296, "interm_embed": [265, 266], "intermedi": 132, "intern": [0, 138, 160, 320, 337, 338], "interp": 101, "interpret": 332, "interrupt": [0, 1, 346], "intersect": [311, 325], "intersectionandunion": 129, "introduc": 2, "intuit": 330, "inv": [51, 328], "invalid": [89, 206, 320, 322, 324, 325, 327, 328, 338], "invalid_id": 48, "invenntori": 7, "inventori": [2, 3, 4, 5, 6, 7, 8, 9, 18, 20, 23, 26, 28, 47, 48, 49, 51, 57, 289, 291, 292, 294, 296, 297, 299, 301, 303, 305, 307, 309, 311, 314, 315, 317, 318, 320, 328, 331, 334, 337, 342], "inventory1": 334, "inventory2": 334, "inventory_arrai": [55, 56], "inventory_cr": 2, "inventory_df": 26, "inventory_geojson": 320, "inventory_json": [28, 48], "inventory_subset": 8, "inventory_to_join": 320, "inventory_valid": 323, "inventoryvalid": [323, 328], "invert": [73, 186, 222], "investig": 1, "invetory_to_df": 20, "invok": [7, 82, 83, 108, 109, 195, 196, 231, 232], "iou": 272, "iou_head_depth": [265, 266], "iou_head_hidden_dim": [265, 266], "iou_pr": 273, "iou_predict": 268, "ipynb": 2, "is_box": 327, "is_box_near_crop_edg": 272, "is_categori": 20, "is_float": 327, "is_imag": 327, "is_inventori": 328, "is_linestr": 327, "is_multilinestr": 327, "is_multipolygon": 327, "is_point": 327, "is_polygon": 327, "is_ready_to_inf": [28, 41], "is_underground": 318, "is_valid_fil": [151, 153], "iscrowd": [66, 179, 215], "isinst": 322, "isol": 5, "isomorph": [83, 109, 196, 232], "issu": [7, 81, 194, 230, 311, 324, 327], "item": [51, 272, 320, 324], "iter": [116, 118, 268, 270, 318, 320], "ith": 272, "its": [0, 1, 2, 4, 6, 7, 8, 80, 91, 107, 118, 193, 229, 252, 289, 317, 320, 321, 322, 324, 325, 326, 327, 330, 331], "itself": [82, 108, 195, 231], "j": 344, "j2p": 8, "jigsaw_gener": 281, "jinyan": 344, "jit": 252, "join": [320, 333, 334, 335, 336, 337], "join_inventori": 334, "jpg": [0, 1, 129, 321, 327, 332], "json": [6, 7, 320, 324, 326], "json_cont": 201, "json_object": 326, "judg": 0, "jupyt": [2, 3, 7, 8], "just": [0, 1, 2, 5, 74, 134, 135, 156, 157, 187, 223, 237], "jvp": [74, 134, 135, 156, 157, 187, 223], "jxw": 8, "k": [7, 20, 135, 157, 264, 269], "k_h": 264, "k_nn": 20, "k_size": 264, "k_w": 264, "kareem": 344, "keep": [5, 80, 107, 193, 229, 272, 324], "keep_exist": [7, 320], "kei": [2, 3, 4, 5, 6, 8, 12, 71, 89, 91, 132, 184, 203, 204, 206, 220, 237, 242, 248, 250, 259, 264, 268, 269, 285, 296, 303, 318, 320, 321, 324, 326, 330, 338], "kept": [0, 80, 107, 193, 229, 324], "kera": [75, 188, 224], "kernel_s": [74, 75, 187, 188, 223, 224, 264, 282], "key_p": 269, "keyerror": 324, "keys_to_inf": 26, "kg": 338, "kijewski": 344, "kilogram": 338, "kilomet": 338, "kilometr": 338, "kincho": 344, "km": 338, "km2": 338, "knn": [0, 7], "knn_imput": 17, "knn_imputer_class": 7, "knnimput": [7, 20], "known": 268, "kriz": [151, 152], "kwarg": [53, 71, 74, 75, 101, 112, 121, 122, 124, 125, 134, 135, 138, 145, 151, 153, 156, 157, 160, 184, 187, 188, 220, 223, 224, 253, 272, 277], "l": [80, 107, 146, 193, 229, 250, 264], "label": [0, 1, 16, 30, 66, 116, 123, 129, 132, 179, 203, 206, 215, 248, 257, 267, 268, 270, 280, 285, 330, 332], "label_cod": 257, "label_encod": 20, "labelmap": 129, "lambda": 322, "land": [51, 317], "land_cov": [51, 317], "landcov": 51, "languag": 60, "larg": [2, 9, 60, 116, 254, 342], "larger": [2, 320], "largest": [71, 184, 220], "lariac2": 324, "lariac_d": 324, "lariac_sourc": 324, "last": [8, 95, 118, 274, 327], "last_lay": 144, "lat": [7, 8, 320, 325], "lat1": [312, 320, 327], "lat2": [312, 320, 327], "later": 0, "latest": [0, 311, 318, 345], "latitud": [303, 312, 315, 318, 320, 325, 327, 331], "latmax": 312, "latmin": 312, "latn": [320, 327], "latter": [7, 20, 71, 74, 75, 81, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 194, 220, 223, 224, 230, 253, 263, 264, 265, 266, 269, 273, 277, 282], "laura": 344, "law": 344, "layer": [0, 73, 80, 107, 124, 125, 145, 186, 193, 222, 229, 253, 264, 269, 272, 277, 291, 324], "layernorm": [253, 264], "layernorm2d": 263, "layout": 330, "lb": [311, 318, 338], "lead": 1, "learn": [2, 7, 203, 206, 285], "learnabl": [80, 107, 193, 229], "least": [320, 325, 327], "lee": 318, "left": 320, "len": [3, 4, 5, 6, 8, 116, 118, 324, 325], "len_unit": 324, "length": [3, 4, 5, 6, 8, 116, 118, 252, 254, 270, 274, 291, 301, 303, 305, 307, 309, 311, 314, 318, 320, 323, 331, 338], "length_unit": [299, 301, 303, 305, 307, 309, 314], "lengthi": 6, "lengthunit": [6, 303, 315], "less": [118, 320], "let": 2, "level": [2, 4, 5, 71, 89, 132, 184, 210, 220, 237, 248, 292, 296, 303, 327, 331, 342], "leverag": [2, 3, 285, 325], "lh": 264, "li": 320, "liabil": [0, 1, 346], "liabl": [0, 1, 346], "lib": [61, 92, 97, 130, 160, 174, 211, 254, 276], "licenc": 9, "licens": [3, 4, 6, 7, 8, 9], "lie": 337, "light": 51, "lightweight": 327, "like": [1, 7, 12, 74, 187, 223, 254, 320, 336, 342], "limit": [0, 1, 3, 326, 346], "limited_to_extension_typ": 321, "line": [0, 1, 3, 4, 5, 6, 8, 51, 309, 327, 338], "linear": [73, 186, 222], "linearaverag": [133, 155], "linearaverageop": [134, 156], "linestr": [320, 327], "link": [3, 7, 8], "list": [0, 1, 7, 71, 73, 74, 89, 116, 118, 132, 138, 160, 172, 184, 186, 187, 203, 206, 210, 220, 222, 223, 242, 246, 248, 250, 252, 254, 259, 268, 272, 280, 285, 291, 292, 303, 312, 315, 318, 320, 321, 324, 325, 327, 330, 338, 344, 346], "literatur": 7, "lo": [324, 325], "load": [0, 1, 3, 4, 66, 73, 74, 87, 91, 132, 172, 179, 186, 187, 203, 206, 215, 222, 223, 237, 250, 252, 280, 285, 311, 315, 317, 321, 331], "load_api_kei": 4, "load_fc": [74, 187, 223], "load_mask": [132, 172], "load_model": 281, "load_predictions_from_json": 201, "load_pretrained_weight": [74, 187, 223], "load_url": 126, "load_weight": [73, 186, 222], "loadann": [66, 179, 215], "loadcat": [66, 179, 215], "loader": [151, 153, 280], "loadimg": [66, 179, 215], "local": 329, "locat": [3, 4, 5, 6, 8, 138, 160, 203, 289, 296, 303, 315, 317, 321, 322, 330], "location_name_input": 322, "locationnam": [3, 4, 5, 6, 8, 311, 318, 322, 324], "locationpolygon": [322, 331], "log": [129, 324], "logfil": [0, 1], "logic": [312, 324, 334, 337], "logit": [73, 186, 222, 268, 270, 272], "lon": [7, 8, 320, 325], "lon1": [312, 320, 327], "lon2": [312, 320, 327], "long": [30, 252, 274], "long_coord": 325, "long_side_length": 274, "long_ton": 338, "longer": [1, 74, 134, 135, 156, 157, 187, 223, 252], "longest": 274, "longest_sid": 273, "longitud": [303, 312, 315, 318, 320, 325, 327, 331], "longtensor": 252, "lonmax": 312, "lonmin": 312, "lonn": [320, 327], "lookup": 254, "loop": 327, "loss": [0, 1, 2, 26, 47, 65, 87, 94, 178, 206, 214, 237, 242, 346], "loss_histori": 206, "low": [0, 268, 270, 272, 344], "low_dim": 145, "low_res_logit": 268, "lr": [94, 281], "lulc": 48, "lulc_kei": 48, "lw": 264, "m": [0, 1, 3, 6, 8, 80, 107, 123, 146, 193, 229, 299, 303, 318, 338], "m2": 338, "ma": 87, "mab": 87, "machin": 7, "mai": [0, 1, 3, 7, 8, 89, 95, 274, 318, 320, 331], "main": [0, 4, 5, 6, 7, 8, 82, 91, 108, 147, 195, 231, 321, 338], "main_stream": 112, "mainli": 9, "maintain": 330, "make": [1, 6, 23, 28, 48, 53, 87, 203, 204, 206, 210, 248, 250, 324, 325, 326, 344], "makedir": [7, 8], "manag": [203, 206, 320, 321, 324, 330], "mandatori": 0, "mani": [0, 1, 2, 4, 7, 74, 134, 135, 137, 156, 157, 159, 187, 223], "manipul": [95, 320, 321, 325], "manner": 116, "manual": 3, "map": [2, 3, 51, 74, 89, 91, 132, 187, 223, 242, 248, 250, 254, 264, 296, 303, 311, 312, 318, 320, 321, 324, 325, 326, 338], "map_loc": 126, "mapassessor": 6, "mapserv": 324, "mark": 324, "mark_volatil": 119, "marker_s": 257, "mask": [16, 20, 132, 151, 153, 172, 206, 257, 259, 265, 266, 267, 268, 270, 272, 273, 275, 323, 332], "mask_build": [132, 172], "mask_data": 259, "mask_decod": [262, 268], "mask_decoder_hq": 262, "mask_imag": [151, 153, 332], "mask_impu_subset": 20, "mask_in_chan": 267, "mask_input": [268, 270, 273], "mask_nam": 206, "mask_path": 172, "mask_postprocess": 273, "mask_threshold": [268, 272], "mask_to_rle_pytorch": 272, "maskbuild": 130, "maskdata": 272, "maskdecod": 265, "maskdecoderhq": 266, "maskfold": 206, "maskfolderinst": [151, 153], "master": [2, 71, 82, 83, 108, 109, 184, 195, 196, 220, 231, 232], "master_callback": [82, 108, 195, 231], "master_msg": [82, 108, 195, 231], "match": [8, 274, 303, 320, 321, 325, 333, 335, 337, 338], "match_points_to_polygon": 325, "materi": [0, 1, 60, 320, 343, 346], "mathemat": 320, "matplotlib": [285, 330], "matrix": [1, 95, 285], "matt": 344, "max": [138, 160, 253, 255, 318], "max_elements_per_cel": 324, "max_elev": 318, "max_latitud": 331, "max_level": [71, 184, 220], "max_longitud": 331, "max_missing_data_ratio": 331, "max_parse_level": 326, "max_record": 324, "max_sampl": 101, "max_token": 201, "maximum": [314, 324, 330, 331], "maxlat": 320, "maxlon": 320, "maxpool2d": [75, 188, 224], "maxpool2dstaticsamepad": [75, 188, 224], "maxrecordcount": 324, "maxscalenumpi": [138, 160], "mb": 0, "mbconvblock": [73, 186, 222], "mckenna": 344, "mdistanc": 147, "mean": [1, 6, 7, 80, 107, 118, 138, 160, 193, 229, 254, 342], "meaning": 2, "measur": [0, 1, 259, 299, 307, 309, 318, 338], "mecb": 34, "mecb_config": 34, "mechan": 326, "med_yr_blt": 8, "median": [7, 138, 160, 318], "medianscalenumpi": [138, 160], "medium": 317, "memori": [0, 73, 134, 135, 156, 157, 186, 222, 317], "memory_effici": [73, 186, 222], "memoryefficientswish": [74, 187, 223], "merb": 35, "merb_config": 35, "merchant": [0, 1, 346], "merg": [8, 138, 160, 320, 323, 335, 337], "merge_two_json": [20, 23, 26, 28, 48, 57], "merging_point_inventori": 335, "mesh": [6, 291, 301, 305, 314, 324, 325], "mesh_plot": 325, "mesh_polygon": 325, "messag": [12, 82, 108, 195, 231, 301, 305, 322, 324, 327], "met": [0, 1, 248, 250, 346], "metadata": [4, 10, 132, 296, 314, 320, 321, 330, 331], "meter": [299, 303, 338], "method": [0, 1, 3, 4, 5, 6, 7, 8, 14, 16, 18, 20, 23, 26, 28, 47, 48, 49, 51, 53, 57, 73, 89, 91, 118, 137, 159, 186, 203, 204, 206, 222, 237, 248, 270, 274, 275, 289, 291, 292, 297, 299, 301, 303, 305, 307, 309, 311, 312, 314, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338], "method_nam": 334, "methodnam": [84, 110, 197, 233], "methods__": [242, 246], "metr": 338, "metric": [89, 280, 338], "metric_ton": 338, "mg": 338, "mh_config": 36, "mi": 338, "mi2": 338, "microsoft": [3, 299, 315, 318], "mid_featur": 146, "might": [80, 107, 193, 229, 342], "mile": [325, 338], "milligram": 338, "millimet": 338, "millimetr": 338, "min": [7, 138, 160, 318], "min_area": 259, "min_depth": [74, 187, 223], "min_elev": 318, "min_latitud": 331, "min_longitud": 331, "min_mask_region_area": 259, "mini": [80, 107, 118, 193, 229], "minlat": 320, "minlon": 320, "mirror": [74, 187, 223], "mislabel": 327, "mismatch": 338, "miss": [2, 4, 7, 12, 18, 20, 51, 89, 91, 326, 327, 329, 331, 342], "mitig": 4, "ml": 318, "mlp": [144, 265, 266], "mlp_dim": [263, 269], "mlp_ratio": 264, "mlpblock": 263, "mlri": 37, "mlri_config": 37, "mlrm": 38, "mlrm_config": 38, "mm": 338, "mm2": 338, "mmuh": 39, "mmuh_config": 39, "mnist": 151, "mnistinst": [151, 154], "mobil": [73, 186, 222], "mobilenet": 120, "mobilenet_v2": 122, "mobilenetv2": 122, "mobilenetv2dil": 123, "modal": 7, "mode": [74, 129, 134, 135, 138, 156, 157, 160, 187, 223, 272, 318], "mode_nam": 95, "model": [2, 47, 57, 60, 65, 72, 74, 80, 87, 89, 91, 92, 94, 97, 132, 178, 185, 187, 193, 203, 206, 214, 221, 223, 229, 237, 242, 246, 250, 251, 252, 255, 258, 259, 270, 273, 274, 276, 277, 281, 285, 320, 323, 329, 330], "model_arch": [201, 203, 206, 250], "model_descript": 329, "model_dir": [126, 130, 132], "model_fil": [132, 285], "model_info": 281, "model_inp_s": 203, "model_nam": [73, 74, 186, 187, 222, 223, 281], "model_path": [87, 89, 91, 203, 206, 237, 242, 329], "model_properti": 203, "model_util": 323, "modelbuild": 123, "modelpath": [91, 237, 275], "modelutil": [323, 329], "modes_onli": 318, "modif": [0, 1, 6, 346], "modifi": [3, 4, 71, 94, 121, 122, 184, 220, 272, 273, 303, 318, 320], "modifiedresnet": 253, "modul": [0, 1, 4, 5, 6, 8, 9, 10, 13, 15, 17, 19, 21, 22, 25, 27, 29, 50, 52, 54, 58, 59, 61, 63, 65, 72, 78, 79, 86, 88, 90, 92, 93, 96, 97, 98, 105, 111, 113, 114, 120, 133, 141, 147, 151, 155, 163, 166, 171, 174, 176, 178, 185, 191, 192, 199, 202, 205, 207, 209, 211, 212, 214, 221, 227, 228, 236, 238, 241, 243, 245, 247, 249, 251, 256, 258, 262, 271, 276, 279, 286, 287, 290, 293, 295, 298, 300, 302, 304, 306, 308, 310, 313, 316, 319, 323, 333, 340], "modular": 6, "modulate_occ": [23, 53], "modulate_weight": [23, 53], "momentum": [80, 81, 107, 134, 135, 156, 157, 193, 194, 229, 230], "monkei": [83, 109, 196, 232], "more": [0, 2, 7, 74, 134, 135, 156, 157, 187, 223, 252, 265, 266, 314, 324, 342], "more_featur": 320, "mosaic": 317, "most": [0, 1, 6, 73, 94, 186, 222], "mp_dic": 20, "mpoli": 325, "ms_class": 3, "ms_footprint_handl": [6, 298], "ms_footprint_scrap": [6, 286], "ms_footprintscrap": [3, 6, 299], "ms_inventori": 3, "ms_scraper": 3, "msf": 40, "msf_config": 40, "msg": [82, 108, 195, 231], "multi": [264, 320, 327], "multilinestr": 327, "multimask_output": [265, 266, 268, 270], "multinomi": [137, 159], "multipl": [2, 7, 71, 80, 83, 107, 109, 116, 184, 193, 196, 220, 229, 232, 265, 266, 268, 270, 299, 318, 320, 324, 325], "multipli": [74, 187, 223], "multipolygon": [325, 327], "multiscal": [71, 184, 220], "must": [0, 1, 14, 16, 49, 71, 74, 134, 135, 156, 157, 184, 187, 204, 220, 223, 269, 289, 292, 297, 301, 305, 312, 320, 322, 325, 327, 338, 346], "mutualexclud": [138, 160], "mvit": 264, "mvitv2": 264, "my_data": 203, "my_image_set": 330, "my_model": 329, "my_multipolygon": 325, "my_polygon": 325, "my_predict": 330, "mydata": 6, "myer": 318, "mymodel": 326, "m\u00b2": 338, "n": [3, 8, 71, 80, 107, 137, 140, 159, 162, 184, 193, 220, 229, 267, 270, 281], "n_bldg_subset": 23, "n_head": 253, "n_layer": 272, "n_per_sid": 272, "n_point": 269, "n_possible_world": [7, 20, 23, 26, 28, 48], "n_pw": [20, 23, 28, 48, 57, 320], "na": [3, 7, 8], "name": [0, 1, 2, 3, 4, 6, 8, 12, 66, 74, 179, 187, 203, 206, 215, 223, 237, 239, 240, 250, 252, 280, 291, 292, 303, 309, 311, 312, 315, 318, 320, 321, 322, 324, 325, 326, 330, 332, 334, 338], "namedtupl": [73, 74, 186, 187, 222, 223], "nan": [311, 338], "narg": [3, 4, 8], "nation": [8, 9, 51, 291, 301, 303, 305, 318, 343], "nativ": 331, "natur": [0, 9, 342, 344], "nb_epoch": 281, "nbi": 301, "nbi_scrap": 286, "nbiscrap": 301, "nbldg_per_clust": 20, "nbrs_g": 20, "nc": 332, "nceaverag": [133, 155], "ncecriterion": [133, 155], "ncefunct": [135, 157], "ncrop": 5, "ndarrai": [138, 160, 259, 270, 280, 285, 332], "nearest": [20, 89, 138, 160, 333], "nearestneighbour": 7, "necessari": [0, 1, 74, 118, 187, 223, 242, 301, 305, 314, 329], "necessarili": 343, "need": [0, 3, 4, 5, 6, 26, 71, 74, 75, 80, 81, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 193, 194, 220, 223, 224, 229, 230, 253, 254, 263, 264, 265, 266, 269, 270, 273, 277, 282, 312, 314, 329, 342], "needed_featur": [28, 41], "needed_kei": [23, 26], "needs_input_grad": [74, 134, 135, 156, 157, 187, 223], "neeed": [6, 8], "neglig": [0, 1, 346], "neighbor": [20, 333], "neither": [0, 1], "nepoch": [87, 203, 206, 237, 242], "nest": [320, 325, 327], "net": 281, "net_dec": 123, "net_enc": 123, "network": [0, 2, 74, 80, 107, 138, 160, 187, 193, 223, 229, 309, 324], "neural": [138, 160], "new": [5, 6, 8, 18, 20, 23, 26, 28, 48, 49, 51, 57, 87, 116, 203, 237, 259, 289, 312, 320, 321, 334, 342], "new_featur": 320, "new_inventori": 7, "new_nam": 320, "new_prop": 23, "new_stat": 272, "nfhlrest_firmett": 324, "nfloor_detector": [2, 211], "nfloor_gpt": 58, "nfloor_vlm": 58, "nfloorgpt": [208, 244], "nfloors_detector": 58, "nfloorsgpt": 2, "nfloorsvlm": 2, "nfloorvlm": 210, "nga": 8, "nheri": [0, 1, 2, 9, 342, 344, 345], "nightli": [6, 8], "nj": 47, "nlcd": [51, 317], "nlcd_infer": 21, "nlcd_scraper": 316, "nlcd_to_coarse_land_cov": 50, "nlcdscraper": 317, "nlcdtocoarselandcov": 51, "nlem": [136, 158], "nm": 259, "nms_thresh": 259, "nms_threshold": 257, "nn": [80, 104, 193, 229, 252, 263, 264, 265, 266, 267, 269, 285], "no_urm": 53, "nois": [138, 160], "noisi": 0, "non": [3, 20, 74, 116, 132, 134, 135, 156, 157, 172, 187, 223, 252, 264, 270, 326, 327], "none": [6, 12, 16, 26, 28, 48, 60, 66, 71, 73, 74, 83, 87, 91, 94, 109, 112, 123, 126, 132, 134, 135, 151, 152, 153, 154, 156, 157, 172, 179, 184, 186, 187, 196, 200, 201, 203, 206, 208, 210, 215, 220, 222, 223, 232, 237, 242, 244, 246, 248, 250, 252, 253, 257, 259, 260, 261, 264, 267, 270, 275, 277, 280, 285, 291, 301, 305, 311, 315, 317, 318, 320, 321, 324, 325, 327, 330, 332, 338], "nonexist": 320, "noqa": 264, "nor": [0, 1], "norm_lay": [264, 277], "normal": [80, 81, 107, 133, 138, 155, 160, 193, 194, 203, 229, 230, 254, 264, 267, 268, 312, 338], "normalize_bbox_ord": 312, "normalize_unit": 338, "normalized_shap": 253, "normalizenumpi": [138, 160], "north_build": 321, "north_view": 321, "notadirectoryerror": [91, 132, 203, 206, 285], "notat": [74, 187, 223], "note": [1, 3, 12, 80, 83, 89, 95, 107, 109, 132, 193, 196, 229, 232, 303, 311, 314, 331], "notebook": 2, "notfounderror": [12, 326], "notic": [0, 1, 346], "notimplementederror": [203, 324], "notion": 1, "notsupportedcliexcept": 129, "now": [8, 253], "np": [7, 259, 270, 280, 285, 332], "npid": [0, 92], "npid_dataset": 147, "npid_lib": 147, "npid_model": 147, "npid_toolbox": 147, "npp": 20, "nr_slave": [82, 108, 195, 231], "nsampl": 320, "nsi": [2, 9, 303, 342], "nsi2brailsmap": 303, "nsi_class": 8, "nsi_data": 8, "nsi_integr": 2, "nsi_inventori": 8, "nsi_inventory_subset": 8, "nsi_pars": [8, 286], "nsmall": 3, "nti": [291, 305], "nti_scrap": 286, "ntiscrap": 305, "num": [5, 6], "num_channel": 263, "num_class": [73, 74, 123, 124, 125, 144, 186, 187, 222, 223, 255, 277, 281], "num_dense_lay": 144, "num_featur": [80, 81, 107, 193, 194, 229, 230], "num_head": [253, 264, 269], "num_lay": [265, 266], "num_multimask_output": [265, 266], "num_point": [273, 318], "num_pos_feat": 267, "num_repeat": [74, 187, 223], "num_sampl": [118, 330], "num_stori": 8, "num_window": 264, "number": [2, 3, 4, 7, 8, 20, 57, 71, 74, 87, 95, 118, 134, 135, 156, 157, 184, 187, 203, 206, 208, 210, 220, 223, 237, 242, 244, 250, 252, 267, 268, 270, 280, 303, 307, 314, 318, 320, 321, 324, 325, 330, 332, 338, 342], "numberofstori": [23, 26, 28, 48], "numberofstories_kei": [23, 26, 28, 48], "numberofunit": 48, "numberofunits_kei": 48, "numclass": 129, "numer": [80, 81, 107, 193, 194, 229, 230, 312, 320, 321, 338], "numpi": [71, 95, 138, 160, 184, 220, 274, 332], "nums_block_list": 146, "nums_class": 146, "numstori": [3, 7, 8], "nuse": 3, "nx2": 270, "o": [4, 5, 7, 8], "o65dis": 8, "obj": [112, 119, 320, 326], "objdata": 326, "object": [0, 1, 2, 5, 6, 8, 9, 16, 51, 66, 74, 82, 83, 87, 89, 91, 108, 109, 116, 118, 123, 129, 130, 132, 134, 135, 137, 138, 140, 156, 157, 159, 160, 162, 172, 179, 187, 195, 196, 200, 203, 206, 210, 215, 223, 231, 232, 237, 242, 246, 248, 250, 254, 257, 259, 270, 272, 274, 275, 280, 285, 291, 299, 301, 303, 305, 309, 311, 314, 315, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 338, 342], "objectid": [291, 324], "observ": [0, 1], "obstruct": 0, "obtain": [3, 4, 5, 8, 14, 16, 82, 108, 195, 231, 272, 294, 296, 297, 311, 314, 322, 324, 342, 345], "occ": [23, 53], "occtyp": 8, "occup": [2, 7, 8, 237, 303], "occupancy2": 7, "occupancy_classifi": [2, 58], "occupancyclass": [23, 26, 28, 48], "occupancyclass_kei": [23, 26, 28, 48], "occupancyclassifi": 237, "occur": [3, 12, 95, 324, 329], "odd": 325, "odgt": 101, "offici": [74, 187, 223], "often": 270, "ogc": 320, "old_nam": 320, "oldenburg": [0, 1], "older": [1, 252], "oldh": 274, "oldw": 274, "one": [0, 1, 2, 7, 20, 51, 71, 74, 75, 80, 81, 82, 89, 95, 107, 108, 118, 123, 124, 125, 134, 135, 136, 138, 139, 142, 143, 144, 145, 146, 156, 157, 158, 160, 161, 184, 187, 188, 193, 194, 195, 220, 223, 224, 229, 230, 231, 253, 263, 264, 265, 266, 269, 273, 277, 282, 285, 320, 321, 322, 327, 330, 338], "onli": [0, 1, 2, 7, 8, 80, 82, 107, 108, 193, 195, 229, 231, 270, 303, 311, 312, 320, 321, 325, 330], "onlin": 3, "onnx": [74, 187, 223, 271], "onto": 332, "onward": 1, "open": [3, 4, 5, 9, 51, 259, 327, 331], "openstreetmap": [3, 307, 309, 315], "oper": [51, 74, 116, 134, 135, 156, 157, 187, 203, 206, 223, 320, 323, 325], "opinion": 343, "oppos": 253, "opposit": 327, "opt": 101, "optim": [0, 1, 91, 94, 203, 252], "option": [1, 7, 16, 53, 87, 91, 94, 132, 172, 201, 203, 206, 210, 237, 246, 250, 257, 273, 285, 303, 312, 318, 320, 321, 322, 324, 325, 329, 330, 331, 332, 338], "optional_needed_kei": [23, 26], "order": [118, 320, 325], "org": 329, "organ": [2, 291, 301, 305], "orient": [9, 342], "orig_box": 272, "orig_h": 272, "orig_im_s": 273, "orig_net": 123, "orig_resnet": 123, "orig_w": 272, "origin": [0, 8, 51, 83, 109, 196, 232, 264, 268, 270, 272, 274, 320, 332, 342], "original_image_s": 270, "original_s": [268, 274], "orthomosa": 331, "osm": [3, 307, 309, 315, 322, 324], "osm_class": 3, "osm_footprint_scrap": [6, 286, 331], "osm_footprintscrap": [3, 6, 8, 307, 331], "osm_footprintsscrap": 3, "osm_id": 322, "osm_inventori": 3, "osm_power_network_scrap": 286, "osm_powernetworkscrap": 309, "osm_scrap": 3, "other": [0, 1, 7, 74, 116, 134, 135, 156, 157, 187, 223, 237, 250, 299, 303, 324, 346], "other_data_path": [151, 153], "other_idea": 58, "otherwis": [0, 1, 2, 74, 94, 187, 223, 259, 320, 321, 326, 327, 328, 338, 346], "ounc": 338, "our": 318, "out": [0, 1, 3, 8, 172, 303, 342, 346], "out_chan": 264, "out_channel": [74, 75, 142, 143, 187, 188, 223, 224], "out_featur": 146, "out_plan": [123, 282], "outcom": [137, 159], "outfil": [303, 325], "outlier": [0, 1], "outlin": [0, 7, 325, 344], "output": [2, 3, 7, 8, 14, 16, 73, 74, 80, 91, 95, 107, 134, 135, 156, 157, 186, 187, 193, 206, 222, 223, 229, 270, 272, 274, 285, 291, 303, 315, 320, 325, 330, 331, 332, 338], "output_devic": [83, 109, 112, 196, 232], "output_dim": [144, 253, 265, 266], "output_dim_ff": 144, "output_dir": [16, 257, 275, 332], "output_fil": [201, 320, 325], "output_filt": [74, 187, 223], "output_mod": 259, "output_path": 275, "output_s": 144, "outputfil": 315, "outputs": [134, 135, 156, 157], "outsid": 303, "over": [80, 91, 95, 107, 118, 193, 203, 229, 237, 259, 268, 325], "overlai": [3, 331, 332], "overlaid": 332, "overlaid_imag": 332, "overlaid_imageri": 331, "overlap": [116, 264], "overlap_ratio": 272, "overlay_asset_outlin": 331, "overpass": 309, "overrid": [7, 74, 116, 134, 135, 156, 157, 187, 223], "overridden": [71, 74, 75, 81, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 194, 220, 223, 224, 230, 253, 263, 264, 265, 266, 269, 273, 277, 282], "override_param": [73, 74, 186, 187, 222, 223], "overs": 324, "overtur": [3, 311, 312], "overture_id": 318, "overture_maps_footprint_scrap": 310, "overture_maps_scrap": [286, 318], "overture_releas": 311, "overturemap": [6, 311, 312], "overturemapsfootprintscrap": [311, 312, 318], "overturemapsscrap": [311, 312, 318], "overturereleas": [311, 318], "overview": 3, "overwirte_exist": [23, 26, 28, 48], "overwrit": [57, 320, 329], "own": [3, 259], "oz": 338, "p": [8, 74, 101, 130, 138, 160, 187, 223], "p1": 325, "p2": 325, "packag": [0, 9, 130, 138, 160, 254, 320, 326, 331, 340], "package_nam": 326, "package_path": 326, "pad": [74, 75, 95, 187, 188, 223, 224, 264, 268, 282], "pad_hw": 264, "page": 9, "pair": [206, 254, 312, 315, 318, 320, 321, 325, 327], "pano": 5, "paper": [264, 344], "parallel": [82, 83, 105, 108, 109, 195, 196, 231, 232, 318, 324], "param": [66, 74, 94, 95, 134, 135, 138, 156, 157, 160, 179, 187, 215, 223, 264, 277], "paramet": [0, 1, 12, 14, 16, 18, 20, 23, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 57, 66, 71, 73, 74, 80, 82, 89, 91, 94, 107, 108, 116, 118, 122, 124, 125, 132, 145, 179, 184, 186, 187, 193, 195, 204, 206, 215, 220, 222, 223, 229, 231, 237, 248, 250, 252, 253, 259, 264, 265, 266, 267, 268, 269, 270, 280, 285, 289, 291, 292, 294, 296, 297, 299, 301, 303, 305, 307, 309, 311, 312, 314, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 338], "parameters__": 203, "parent": 248, "pars": [0, 1, 2, 3, 4, 5, 6, 8, 89, 129, 311, 315, 318, 324, 325, 326, 338], "parse_aim": 47, "parse_arg": [3, 4, 5, 6, 8], "parse_devic": 129, "parse_input_list": 101, "parse_unit": 338, "parsed_api_kei": 4, "parser": [3, 4, 5, 6, 8], "part": [0, 6, 311, 325], "particular": [0, 1, 320, 346], "particularli": 3, "partit": 264, "pass": [71, 74, 75, 81, 82, 108, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 194, 195, 220, 223, 224, 230, 231, 253, 263, 264, 265, 266, 268, 269, 270, 273, 277, 282, 324, 338, 342], "patch": [83, 109, 196, 232, 264, 331], "patch_replication_callback": [83, 109, 196, 232], "patch_siz": [253, 264], "patch_sync_batchnorm": [80, 193, 229], "patchemb": 264, "path": [0, 1, 4, 5, 6, 7, 8, 14, 16, 87, 89, 91, 132, 151, 153, 172, 203, 206, 237, 242, 252, 275, 280, 285, 297, 320, 321, 324, 326, 327, 329, 330, 331, 332], "path_to_dir": 321, "pathlib": 5, "pd": [89, 320], "pdf": 327, "peak": [138, 160], "per": [80, 107, 193, 203, 206, 229, 237, 242, 314, 324, 338], "percentag": [7, 254], "perf": 1, "perfect": [3, 7, 8], "perform": [0, 1, 3, 6, 8, 71, 74, 75, 81, 87, 91, 94, 123, 124, 125, 132, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 194, 203, 206, 220, 223, 224, 230, 237, 253, 263, 264, 265, 266, 269, 273, 277, 280, 282, 324, 325, 327, 329, 333, 334, 335, 337, 338], "period": 3, "permiss": [0, 1], "permit": [0, 1, 346], "perturb": 1, "pic": 130, "piec": [7, 95], "pier": 0, "pil": [138, 160, 252], "pile": 0, "pip": [0, 1, 130, 138, 160, 254, 345], "pipe": [82, 108, 195, 231], "pipelin": [132, 285], "pitch": [2, 89], "pixel": [259, 268, 270], "pixel_acc": 123, "pixel_mean": 268, "pixel_std": 268, "pkl": 91, "place": [5, 82, 89, 108, 125, 195, 231, 259, 320, 338], "placehold": 51, "plainradam": 94, "plan": [5, 303], "planarea": [23, 26, 48], "planarea_kei": [23, 26, 48], "plane": 253, "platform": 3, "platt": [138, 160], "pleas": [0, 5, 318, 331, 332, 344], "plot": [87, 203, 206, 237, 242, 314, 324, 325, 330], "plot_accuraci": 203, "plot_cel": [314, 324], "plot_imag": 330, "plot_loss": [87, 206, 237, 242], "plot_mesh": 324, "plot_polygon_cel": [324, 325], "plot_tool": 323, "plottool": [323, 330], "plt": 285, "plu": 327, "pmg": 282, "png": [0, 321, 325, 327], "point": [1, 4, 7, 8, 259, 265, 266, 267, 268, 269, 270, 272, 303, 315, 318, 320, 325, 327, 333, 335, 336, 337], "point1": 320, "point_coord": [259, 268, 270, 273], "point_embed": 269, "point_grid": 259, "point_inventori": [320, 336, 337], "point_label": [268, 270, 273], "points_per_batch": 259, "points_per_sid": 259, "poisson": [138, 160], "poisson_downsampl": [138, 160], "poissonsubsampl": [138, 160], "poli": [325, 327], "poly1": 325, "poly2": 325, "poly_inventori": 320, "polygon": [2, 303, 309, 314, 318, 320, 322, 324, 325, 327, 331, 333, 336, 337], "polygon1": 320, "polygon1_asset": 320, "polygon2": 320, "polygon2_asset": 320, "polygon_inventori": [336, 337], "pool": [253, 324], "pool_scal": 123, "pop2amo65": 8, "pop2amu65": 8, "pop2pmo65": 8, "pop2pmu65": 8, "popual": 47, "popul": [47, 291, 317, 318], "populate_featur": [289, 291, 317, 318], "posit": [91, 264, 265, 266, 267, 269, 320], "position": 267, "positionembeddingrandom": 267, "possibl": [0, 1, 6, 7, 20, 57, 91, 320, 342, 346], "possible_height": 320, "possibli": 116, "post": 0, "postfirm": 28, "postfirm_kei": 28, "postfirm_year_by_c": 28, "postprocess": 273, "postprocess_mask": 268, "postprocess_small_region": 259, "pound": 338, "power": [2, 139, 161, 309], "ppm": 123, "ppm_deepsup": [123, 130], "ppmdeepsup": 123, "ppp": 0, "ppp_build": 0, "practic": [138, 160], "pre": [87, 91, 122, 124, 125, 132, 145, 172, 203, 206, 277, 285, 329], "precis": 338, "pred": [123, 129], "pred_idx_to_label": 255, "pred_iou_thresh": 259, "predefin": [248, 285], "predict": [1, 2, 6, 60, 87, 89, 91, 132, 200, 203, 204, 206, 208, 210, 237, 239, 240, 242, 244, 246, 248, 250, 259, 265, 266, 268, 270, 272, 275, 285, 320, 330], "predict_mask": [265, 266], "predict_torch": 270, "predict_wrapp": 255, "predicted_i": 259, "prediction_df": 255, "predictor": [91, 258], "prefer": 0, "prefix": 0, "preliminari": 324, "preliminary_cel": 324, "prepar": [2, 172, 203, 237, 280], "prepend": 253, "preprocess": [91, 132, 252, 255, 268, 280, 285], "preprocess_batch_img": 255, "prescrib": 342, "presenc": 2, "present": [2, 268, 320, 324, 325, 330], "preset": 320, "pretrain": [74, 121, 122, 124, 125, 126, 132, 145, 187, 223, 277, 281], "previou": [0, 2, 270], "primari": [334, 335], "primarili": 2, "primit": [7, 320], "print": [3, 4, 5, 6, 7, 8, 51, 66, 132, 179, 215, 285, 291, 312, 318, 320, 321, 322, 324, 325, 331, 338], "print_info": [3, 4, 5, 6, 8, 318, 320, 321], "print_mod": 318, "print_output": 8, "print_r": [132, 285], "print_releas": 312, "prior": [0, 1], "prob": [137, 159], "probabl": [118, 285], "proc": [138, 160], "proce": 7, "procedure__": 203, "process": [0, 3, 4, 5, 6, 8, 23, 26, 28, 48, 49, 57, 89, 91, 250, 269, 291, 301, 303, 305, 307, 309, 312, 317, 318, 320, 322, 324], "process_rang": 129, "processor": [0, 6, 7, 10, 342], "procur": [0, 1, 346], "produc": [0, 2, 5, 6, 7, 116, 270, 324, 332], "product": [0, 1], "profit": [0, 1, 346], "progress": [2, 277, 324], "project": 269, "promot": [0, 1], "prompt": [201, 210, 246, 248, 250, 265, 266, 267, 268, 270, 273], "prompt_and_save_capt": 201, "prompt_encod": [262, 268], "prompt_str": 200, "promptencod": 267, "propag": 264, "proper": 320, "properli": 237, "properti": [1, 16, 82, 89, 108, 116, 195, 231, 253, 257, 268, 270, 320, 321], "proport": 331, "provid": [0, 1, 2, 3, 5, 6, 7, 26, 47, 51, 57, 60, 87, 91, 116, 118, 132, 172, 203, 204, 206, 208, 237, 242, 244, 246, 268, 270, 274, 285, 291, 292, 294, 296, 299, 303, 307, 309, 311, 312, 314, 318, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 337, 338, 342, 344, 346], "proxim": [333, 335, 337], "pth": [130, 203, 206, 329], "public_school": 324, "publish": 344, "pure": 204, "purpos": [0, 1, 4, 5, 6, 8, 116, 330, 346], "put": [1, 9, 82, 108, 195, 231, 252], "pwd": [0, 1], "py": [0, 1, 3, 4, 5, 6, 7, 8, 71, 138, 160, 184, 220, 264], "pycoco": 272, "pypi": [6, 8, 345], "pyramid_level": [71, 184, 220], "python": [2, 5, 6, 7, 151, 152], "python3": [0, 1, 3, 5, 6, 7, 8, 130, 138, 160, 254], "pythonpath": [0, 1], "pytorch": [80, 81, 107, 122, 193, 194, 203, 206, 229, 230, 280, 285], "q": [264, 269], "q_h": 264, "q_size": 264, "q_w": 264, "qkv": 253, "qkv_bia": 264, "quadkei": 299, "qualit": 330, "qualiti": [0, 3, 259, 265, 266, 268, 270], "quatntati": 7, "queri": [264, 269, 307, 309, 318, 320, 322, 324], "query_area": [322, 325], "query_p": 269, "queryarea": 315, "queue": [82, 108, 195, 231], "quick": [3, 4, 5, 151, 153], "quickgelu": 253, "quickli": 2, "r": [0, 1, 4, 5, 74, 134, 135, 146, 156, 157, 187, 223, 318], "r6q": 8, "radam": 93, "rais": [4, 5, 12, 71, 89, 91, 132, 184, 206, 220, 248, 250, 285, 291, 294, 296, 301, 305, 312, 314, 320, 322, 324, 325, 326, 327, 328, 329, 330, 334, 338], "raises__": 203, "randn": [80, 107, 193, 229], "random": [0, 1, 3, 4, 5, 138, 160, 267, 318, 320, 330], "random_num_gener": [138, 160], "random_se": 330, "random_split": 116, "random_st": [138, 160], "randomcropnumpi": [138, 160], "randomgaussianblur": [138, 160], "randomli": [5, 116, 118, 138, 160, 318, 320, 330], "randomrot": [138, 160], "randomsampl": 118, "rang": [1, 66, 116, 118, 179, 215, 320], "range_max": [138, 160], "range_min": [138, 160], "rapid": [2, 323, 331], "rapid_tool": 2, "rapid_util": 323, "rapidutil": [323, 331], "raster": [317, 331], "raster_test_data": 331, "rate": [73, 186, 222], "ratio": [324, 330], "raw": [5, 8, 303], "rb": 322, "rcc": 87, "re": [0, 6, 8, 81, 194, 230, 254, 270, 329, 342], "reach": 0, "read": [5, 51, 303, 311, 318, 320, 331], "read_from_csv": [7, 320], "readabl": [74, 187, 223, 320, 322, 325, 329, 338], "readi": 2, "readlin": [4, 5], "real": [3, 75, 188, 224], "realiz": [20, 57, 320], "receiv": [82, 108, 195, 231], "receiving_point_inventori": 335, "recip": [71, 74, 75, 81, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 194, 220, 223, 224, 230, 253, 263, 264, 265, 266, 269, 273, 277, 282], "recogn": 338, "recognit": [138, 160], "recommend": [268, 343], "record": [259, 324, 329], "rect": [324, 327], "rectangl": [324, 325, 327], "rectangular": [307, 324, 325, 327], "recurs": [80, 193, 229, 320, 324], "red": 320, "redistribut": [0, 1, 346], "reduc": [80, 107, 193, 229, 320], "reevalu": 94, "refer": [320, 338, 344], "refin": 324, "reflect": [1, 138, 160, 343], "reformat": 338, "regent": [0, 1, 346], "regim": 1, "region": [2, 3, 4, 8, 9, 23, 53, 138, 160, 259, 272, 291, 292, 299, 301, 303, 305, 307, 309, 311, 314, 318, 322, 324, 325, 342, 344], "region_boundari": [6, 319, 324], "region_boundary_class": [3, 4, 5, 6, 8, 311, 318, 322, 324], "region_boundary_object": [3, 4, 5, 6, 8, 311, 318, 331], "region_data": [311, 318, 331], "regionboundari": [3, 4, 5, 6, 8, 292, 299, 301, 303, 305, 307, 309, 311, 314, 318, 322, 324, 331, 342], "regioninput": 322, "regist": [71, 74, 75, 81, 82, 108, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 194, 195, 220, 223, 224, 230, 231, 253, 263, 264, 265, 266, 269, 273, 277, 282], "register_slav": [82, 108, 195, 231], "regress": [71, 184, 220], "reject": 327, "rel": [91, 264], "rel_po": 264, "rel_pos_h": 264, "rel_pos_w": 264, "rel_pos_zero_init": 264, "relat": [210, 248, 272, 321], "relationship": [335, 336], "releas": [9, 311, 312, 318], "relev": [47, 291, 299, 303], "reli": [4, 329], "relu": [123, 269, 282], "remain": 0, "remov": [0, 5, 138, 160, 259, 264, 268, 272, 320, 330, 342], "remove_asset": 320, "remove_featur": 320, "remove_small_region": 272, "renam": 320, "reorder": 312, "repaircost": [7, 8], "repeat": [74, 187, 223], "replac": [7, 80, 118, 193, 229, 303, 320, 325], "replace_stride_with_dil": 277, "replacementcost": [23, 26, 48], "replacementcost_kei": [23, 26], "replic": [79, 82, 106, 108, 192, 195, 228, 231], "report": [0, 328], "repositori": [0, 1, 74, 121, 122, 187, 223, 344], "repres": [0, 1, 2, 7, 18, 71, 74, 116, 134, 135, 156, 157, 184, 187, 210, 220, 223, 248, 254, 301, 305, 320, 321, 322, 324, 325, 327, 330, 332], "represent": [252, 320, 325, 332, 338], "reproduc": [0, 1, 20, 57, 318, 320, 330, 346], "request": [7, 291, 296, 318, 324], "requested_attribut": 291, "requested_field": 324, "requestexcept": 324, "requir": [0, 1, 3, 4, 6, 8, 12, 74, 89, 134, 135, 156, 157, 187, 204, 223, 237, 242, 252, 259, 274, 275, 320, 326, 331], "require_grad": 281, "rerun": 259, "res1": [7, 8], "res3_ab_to_res1": 53, "res3a": [7, 8], "research": [2, 9], "reserv": 346, "reset": [140, 162, 270], "reset_imag": 270, "reset_paramet": [81, 194, 230], "reset_running_stat": [81, 194, 230], "residenti": [7, 237], "residu": [73, 186, 222, 264], "residual_attention_network": 141, "residualattentionblock": 253, "residualattentionmodel_92": 144, "residualattentionmodel_92_32input": 144, "residualattentionmodel_92_32input_upd": 144, "residualattentionmodel_92_smal": 144, "residualattentionmodel_92_small_1d": 144, "residualblock": 143, "residualblock1d": 143, "resiz": [91, 138, 160, 203, 268, 274, 330], "resize_longest_image_s": 273, "resizelongestsid": [270, 274], "resnet": [0, 120, 123, 125, 145, 163, 253, 276], "resnet101": [124, 145, 277], "resnet152": [145, 277], "resnet18": [80, 124, 145, 193, 229, 277], "resnet34": [145, 277], "resnet50": [124, 132, 145, 203, 277], "resnet50dil": [123, 130], "resnet_appli": 141, "resnet_cifar": 163, "resnetdil": 123, "resnext": 120, "resnext101": 125, "resnext101_32x8d": 277, "resnext50_32x4d": 277, "resolut": [268, 270, 296], "resolv": [5, 338], "resourc": 4, "respect": [203, 237], "respons": [303, 324], "rest": 324, "result": [0, 1, 7, 51, 82, 91, 108, 132, 195, 231, 252, 270, 291, 301, 303, 305, 311, 317, 318, 324, 325, 332, 334, 337, 338], "resum": 0, "retain": [0, 1, 346], "retrain": [87, 203, 206, 237, 242], "retri": 324, "retriev": [2, 3, 4, 5, 74, 116, 134, 135, 156, 157, 187, 206, 223, 291, 292, 294, 296, 297, 299, 301, 303, 305, 307, 309, 311, 314, 318, 320, 321, 322, 324, 326, 331, 338], "return": [3, 4, 5, 6, 7, 14, 16, 18, 20, 23, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 57, 60, 66, 71, 73, 74, 82, 89, 91, 94, 95, 108, 118, 122, 124, 125, 132, 134, 135, 145, 151, 153, 156, 157, 179, 184, 186, 187, 195, 203, 204, 206, 208, 215, 220, 222, 223, 231, 237, 242, 244, 246, 248, 250, 252, 254, 259, 264, 265, 266, 267, 268, 269, 270, 272, 275, 277, 280, 285, 289, 291, 292, 294, 296, 297, 299, 301, 303, 305, 307, 309, 311, 312, 314, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 338], "return_count": 129, "return_extra_metr": 273, "return_feature_map": 123, "return_index": 129, "return_invers": 129, "return_logit": 270, "return_single_mask": 273, "returns__": [203, 242], "revers": [254, 312], "rgb": [129, 268, 270, 280, 332], "rgb_mask": 332, "right": [0, 1, 346], "ring": 324, "risk": 5, "rle": [259, 272], "rle_to_mask": 272, "rm1": [7, 8], "rn101": 250, "rn50": 250, "rn50x16": 250, "rn50x4": 250, "rn50x64": 250, "roof": [2, 7, 89, 242, 246, 320, 329, 342], "roof_detail": 321, "roof_shape_classifi": [2, 58], "roof_shape_classification_gpt": 2, "roof_shape_classification_vlm": 2, "roof_shape_gpt": 58, "roof_shape_vlm": 58, "roof_typ": 320, "roofeaveheight": 89, "roofheight": 320, "roofpitch": 89, "roofshap": [3, 7, 8, 48], "roofshape_kei": 48, "roofshapeclassifi": 242, "roofshapegpt": 244, "roofshapevlm": 246, "roofslop": 48, "roofslope_kei": 48, "roofsystem": 48, "roofsystem_kei": 48, "rooftop": 2, "root": [151, 152, 153, 154, 206, 326], "root_dataset": 101, "root_dir": 129, "rotat": [138, 160], "roughli": 324, "round": [74, 89, 187, 223, 255, 325, 338], "round2nearest_multipl": [101, 130], "round_filt": [74, 187, 223], "round_repeat": [74, 187, 223], "row": [0, 1, 7, 95, 118, 325, 330], "rtol": 110, "rule": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 327], "ruleset": [23, 28, 48, 51, 53], "run": [1, 2, 3, 4, 5, 6, 7, 8, 71, 74, 75, 80, 81, 107, 123, 124, 125, 132, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 193, 194, 220, 223, 224, 229, 230, 253, 263, 264, 265, 266, 269, 273, 277, 282, 285, 334], "run_mast": [82, 108, 195, 231], "run_on_one_imag": 257, "run_slav": [82, 108, 195, 231], "running_mean": [80, 107, 193, 229], "running_var": [80, 107, 193, 229], "runtest": [84, 110, 197, 233], "runtimeerror": 322, "s1": 7, "safe": [82, 108, 195, 231], "sai": 254, "sam": [2, 262, 270, 273], "sam_model": 270, "sam_predictor": 257, "samautomaticmaskgener": 259, "same": [0, 1, 5, 7, 71, 75, 80, 107, 118, 184, 188, 193, 204, 220, 224, 229, 242, 269, 312, 317, 320, 325, 327, 338], "samonnxmodel": 273, "sampl": [3, 5, 7, 20, 57, 80, 107, 116, 118, 137, 159, 193, 203, 206, 229, 237, 242, 280, 317, 318, 320, 330], "sample_d": 20, "sample_inventori": 320, "sampler": 114, "sampleserver6": 324, "sampredictor": [268, 270], "san": 325, "sanjai": 344, "sascha": [0, 1, 344], "satellit": [3, 4, 294, 330], "satelliteimagesourc": 6, "satisfi": [66, 179, 215], "save": [1, 7, 14, 16, 74, 134, 135, 156, 157, 187, 203, 223, 275, 285, 294, 296, 297, 311, 314, 318, 324, 325, 331, 332], "save_directori": [294, 296, 297, 331], "save_for_backward": [74, 134, 135, 156, 157, 187, 223], "save_for_forward": [74, 134, 135, 156, 157, 187, 223], "save_masked_imag": [0, 92], "save_respons": 200, "saved_path": 275, "scalar": 320, "scale": [2, 9, 71, 116, 138, 160, 184, 220, 267, 342, 344], "scale_per_lay": 272, "scan": 6, "scatter": 112, "scenario": 6, "schoettler": 344, "scienc": [7, 9, 343], "scope": 326, "score": [0, 16, 132, 257, 270, 272], "scrape": [289, 291, 301, 303, 305, 307, 309, 311, 312, 317, 318], "scraper": [2, 3, 4, 5, 6, 8, 10, 342], "scraper_class": [4, 5, 6, 8, 311], "scraper_inventori": [8, 331], "scraper_object": 311, "scraper_typ": 6, "scratch": 3, "script": [1, 2, 3, 4, 5, 6, 7, 8, 273], "se_ratio": [74, 187, 223], "sea": [137, 159], "seamless": 2, "search": [6, 9, 311, 318, 322, 324], "secb": 42, "secb_config": 42, "second": [7, 320, 324, 325], "secondari": 334, "section": 0, "see": [0, 3, 73, 74, 81, 82, 108, 134, 135, 156, 157, 186, 187, 194, 195, 222, 223, 230, 231, 265, 266, 273], "seed": [5, 20, 23, 26, 28, 48, 57, 318, 320, 330], "seen": [0, 1, 80, 107, 193, 229], "segm": 101, "segm_transform": 101, "segment": [2, 121, 132, 172, 206, 257, 259, 323, 332, 342], "segment_anyth": 256, "segmentation_util": 323, "segmentationmodul": 123, "segmentationmodulebas": 123, "segmentationutil": [323, 332], "segsiz": 123, "seismic": 2, "select": [4, 5, 8, 20, 270, 291, 303, 320, 325, 330, 337], "select_mask": 273, "self": [91, 116, 132, 134, 135, 156, 157, 237, 311, 320], "semant": [1, 121], "semi": 0, "send": [82, 108, 195, 203, 231, 318, 324], "sens": 7, "sent": [82, 108, 195, 231], "separ": [0, 1, 74, 134, 135, 156, 157, 187, 223, 320], "seper": 3, "sequenc": [116, 264, 312, 322], "sequenti": [20, 118], "sequential_imput": 20, "sequentialsampl": 118, "serb": 43, "serb_config": 43, "seri": 2, "serial": 320, "serv": [3, 6, 242], "server": 324, "servic": [0, 1, 317, 318, 323, 324, 346], "services1": 324, "services5": 324, "set": [0, 1, 3, 4, 7, 8, 14, 16, 51, 60, 73, 74, 80, 91, 95, 107, 132, 134, 135, 156, 157, 186, 187, 193, 203, 204, 208, 222, 223, 229, 237, 242, 244, 246, 248, 254, 257, 267, 270, 275, 285, 303, 314, 318, 320, 321, 330, 342], "set_directori": 321, "set_imag": 270, "set_swish": [73, 186, 222], "set_torch_imag": 270, "setup": 340, "setup_context": [74, 134, 135, 156, 157, 187, 223], "setup_logg": 129, "sever": [2, 138, 160, 285], "sfha_tf": 324, "sgd": 203, "shall": [0, 1, 346], "shape": [2, 7, 71, 80, 107, 138, 160, 184, 193, 220, 229, 242, 246, 252, 259, 264, 265, 266, 267, 268, 269, 270, 272, 274, 320, 322, 324, 325, 327, 332], "share": [73, 83, 109, 186, 196, 222, 232, 335, 337], "sheathingthick": 48, "sheathingthickness_kei": 48, "short": [30, 338], "short_ton": 338, "shorter": 1, "shortest": 325, "shot": [16, 20, 257], "should": [0, 1, 12, 71, 74, 75, 81, 82, 89, 94, 108, 116, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 194, 195, 203, 206, 220, 223, 224, 230, 231, 237, 253, 263, 264, 265, 266, 268, 269, 273, 277, 282, 325, 330], "show": [1, 5, 6, 8, 330], "show_binary_mask": 257, "show_box": 257, "show_point": 257, "show_predict": 330, "shown": [0, 1, 3, 5, 7, 8], "shrink": [20, 23, 26, 28, 48, 57], "side": [274, 327], "sideffect": 95, "sigma": [138, 160], "sigmoid_output": [265, 266], "signal": 95, "signifi": 1, "signific": 254, "significantli": 0, "silenc": 48, "silent": [71, 74, 75, 81, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 194, 220, 223, 224, 230, 253, 263, 264, 265, 266, 269, 273, 277, 282], "simard": [138, 160], "simard2003": [138, 160], "simcent": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346], "simcenter_infer": 21, "simcenterinfer": 53, "similar": [253, 255], "simpl": [3, 6, 7, 325], "simple_token": 251, "simpletoken": 254, "simpli": 2, "simul": [342, 344], "sinc": [2, 3, 71, 74, 75, 81, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 194, 220, 223, 224, 230, 252, 253, 263, 264, 265, 266, 269, 273, 277, 282], "singl": [0, 1, 6, 7, 94, 204, 250, 265, 266, 268, 270, 320, 324, 327], "site": [130, 138, 160, 254], "size": [71, 74, 80, 87, 95, 101, 107, 116, 118, 138, 142, 160, 184, 187, 193, 203, 206, 220, 223, 229, 264, 267, 268, 269, 270, 272, 274], "size1": 142, "size2": 142, "size3": 142, "size4": 142, "skconv": 146, "skip": [66, 179, 215], "skip_first_layer_p": 269, "sknet": 141, "sknet101": 146, "sknet26": 146, "sknet50": 146, "skunit": 146, "slave": [82, 83, 108, 109, 195, 196, 231, 232], "slavepip": [82, 108, 195, 231], "slice": [80, 107, 138, 160, 193, 229], "slide": 95, "sliding_window": 95, "slightli": [151, 153], "small": [3, 8, 259, 272], "small_inventori": [3, 4, 5, 6, 330], "smaller": [0, 3, 8, 291, 301, 305, 314, 320, 324, 330], "smallinv": 8, "so": [0, 1, 5, 324, 327], "soft": [1, 280], "soft_label": 280, "softwar": [0, 1, 346], "softwaretest": [311, 331], "some": [0, 3, 7, 53, 83, 109, 196, 232, 273, 342], "someth": 254, "sort": [206, 320], "sourc": [0, 1, 2, 3, 8, 9, 318, 322, 338, 346], "source_cit": 324, "space": [2, 20, 272], "spacial_dim": 253, "spars": 267, "sparse_prompt_embed": [265, 266], "spatial": [20, 80, 107, 193, 229, 264, 267, 270, 292, 311, 320, 323, 333, 334, 335, 336, 337], "spatial_join_method": 323, "spatialjoinmethod": [323, 334, 335, 336, 337], "spatio": [80, 107, 193, 229], "special": [0, 1, 87, 346], "specif": [0, 1, 7, 12, 14, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 307, 311, 320, 322, 324, 327, 331, 336], "specifi": [2, 3, 4, 8, 14, 16, 66, 74, 87, 91, 94, 132, 172, 179, 187, 203, 206, 215, 223, 267, 280, 285, 292, 294, 296, 299, 301, 303, 305, 311, 314, 318, 320, 321, 322, 324, 325, 326, 330, 338], "speckl": [138, 160], "speed": 0, "sphinx": [9, 342], "spline_ord": [138, 160], "split": [6, 116, 138, 160, 203, 301, 303, 305, 314, 324, 325], "split_polygon_into_cel": 324, "splitlevel": [23, 26, 28], "splitlevel_kei": [23, 26, 28], "spmb": 44, "spmb_config": 44, "spolygon": 325, "spot": 2, "sqft": [8, 338], "sqrt": [80, 107, 193, 229], "squar": [138, 160, 268, 325, 338], "square_centimet": 338, "square_foot": 338, "square_inch": 338, "square_kilomet": 338, "square_met": 338, "square_mil": 338, "square_millimet": 338, "square_yard": 338, "squeez": [73, 186, 222], "st_damcat": 8, "stabil": [80, 81, 107, 193, 194, 229, 230, 272], "stability_scor": 259, "stability_score_offset": 259, "stability_score_thresh": 259, "stack": [71, 184, 220], "stage": 337, "standard": [0, 1, 2, 30, 73, 80, 107, 129, 186, 193, 222, 229, 318, 327, 338], "starea": 324, "start": [0, 1, 321], "start_idx": 101, "state": [0, 3, 6, 248, 311, 318, 322, 324], "state_dict": [252, 253], "statement": [6, 329, 331, 332], "static": [74, 116, 123, 134, 135, 156, 157, 187, 223, 259, 273, 274, 291, 312, 318, 323, 324, 325, 327, 328, 329, 330, 332, 334, 338], "static_bf": 324, "staticmethod": [74, 134, 135, 156, 157, 187, 223], "statist": [2, 7, 80, 107, 193, 229, 318], "statu": 324, "std": [1, 138, 160], "stddev": 318, "stderr": 277, "steel": 320, "steinkrau": [138, 160], "stella": 344, "stem": 253, "step": [0, 2, 5, 94, 331], "stepsiz": 95, "stl": 87, "stlength": 324, "stochast": 203, "stop": [203, 206], "store": [3, 6, 8, 74, 89, 129, 132, 134, 135, 140, 156, 157, 162, 187, 223, 272, 285, 292, 303, 311, 317, 318, 320, 322, 324], "stori": 307, "str": [3, 4, 5, 6, 8, 14, 16, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 66, 87, 89, 91, 129, 132, 179, 203, 206, 210, 215, 237, 242, 248, 250, 252, 257, 259, 270, 280, 285, 291, 292, 294, 296, 297, 299, 301, 305, 307, 309, 311, 312, 314, 318, 320, 321, 322, 324, 325, 326, 327, 329, 330, 331, 332, 334, 338], "str_type": 320, "straight": [74, 187, 223], "strategi": [324, 335, 337], "street": [2, 3, 4, 5, 89, 132, 210, 237, 248, 275, 296], "street_im": 4, "street_imag": 89, "street_level_damage_detect": 58, "street_processor": 238, "street_view": 321, "streetfilt": 6, "streetimagesourc": 6, "streetprocessor": 240, "streetview": [1, 5], "strict": [0, 1, 346], "strictli": 327, "stride": [71, 74, 75, 95, 123, 143, 146, 184, 187, 188, 220, 223, 224, 253, 264, 282], "strides_list": 146, "string": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 74, 91, 187, 223, 252, 254, 285, 303, 312, 315, 320, 322, 324, 325, 327, 330, 338], "string_list": [74, 187, 223], "strip": [4, 5], "structur": [0, 1, 3, 8, 237, 272, 303, 314, 315, 320, 327, 330], "structure_typ": [23, 53], "structuretyp": [23, 26, 48], "structuretype_kei": [23, 26], "student": 8, "studi": 2, "study_typ": 324, "stuff": 275, "style": 1, "sub": [0, 83, 109, 196, 232], "subclass": [6, 14, 16, 49, 71, 74, 75, 81, 116, 118, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 151, 152, 156, 157, 158, 161, 184, 187, 188, 194, 220, 223, 224, 230, 253, 263, 264, 265, 266, 269, 273, 277, 282, 289, 292, 294, 297, 312, 334], "subdirectori": [206, 237, 326], "subfold": 1, "submodul": 9, "subpackag": 9, "subplot": 330, "subsampl": [4, 5, 138, 160], "subsampled_inventori": 318, "subsequ": [4, 268, 270], "subset": [2, 3, 4, 5, 8, 116, 320, 330], "subset_nsi_processed_data": 8, "subsetrandomsampl": 118, "substat": 309, "substitut": [0, 1, 7, 346], "suburban": 51, "success": [320, 327], "successfulli": [320, 329], "suffic": 0, "suffici": 237, "suggest": [0, 1, 5, 338], "suitabl": [1, 325], "sum": [80, 107, 118, 193, 229, 324], "summari": [3, 318, 320], "summary_writ": 95, "supercategori": [66, 179, 215], "supnm": [66, 179, 215], "suppli": [0, 1, 3, 7, 91], "support": [1, 2, 4, 91, 116, 172, 203, 206, 250, 264, 273, 296, 299, 303, 309, 318, 320, 324, 327, 330, 338, 343], "supported_asset_elevation_mod": 318, "suppos": 320, "surfac": 325, "survei": 3, "swish": [73, 74, 186, 187, 222, 223], "swishimplement": [74, 187, 223], "switch": 6, "sy": [6, 7, 8], "symbol": 254, "sync_batchnorm": [78, 191, 227], "sync_bn": [83, 109, 196, 232], "syncbn": [80, 193, 229], "synchron": [80, 81, 107, 193, 194, 229, 230], "synchronizedbatchnorm": [80, 193, 229], "synchronizedbatchnorm1d": [80, 83, 107, 109, 193, 196, 229, 232], "synchronizedbatchnorm2d": [80, 107, 193, 229], "synchronizedbatchnorm3d": [80, 107, 193, 229], "syncmast": [82, 108, 195, 231], "syntax": 321, "system": [320, 326], "t": [74, 134, 135, 156, 157, 187, 223, 281], "tabl": 254, "taciroglu": 344, "take": [0, 4, 6, 7, 71, 74, 75, 81, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 194, 220, 223, 224, 230, 252, 253, 263, 264, 265, 266, 269, 273, 277, 282, 299, 342], "taken": [1, 342], "tar": [151, 152], "target": [116, 136, 138, 158, 160, 274, 318, 338], "target_height": [138, 160], "target_kei": [23, 26], "target_length": 274, "target_tensor": 116, "target_transform": [151, 152, 153, 154], "target_width": [138, 160], "task": [0, 291, 301, 305, 324, 325, 335], "task_descript": 324, "techniqu": [2, 4, 7], "templat": 250, "tempor": [2, 80, 107, 193, 229], "tensor": [73, 74, 80, 107, 116, 134, 135, 156, 157, 186, 187, 193, 222, 223, 229, 252, 264, 265, 266, 267, 268, 269, 270, 272, 274, 280], "tensordataset": 116, "tensorflow": [74, 75, 187, 188, 223, 224], "term": 342, "termin": [5, 6, 7, 8], "terminologi": [80, 107, 193, 229], "test": [0, 1, 3, 4, 5, 6, 8, 81, 97, 147, 151, 152, 194, 230, 281, 285], "test_list": [151, 152], "test_softlabel": 281, "test_transform": [132, 285], "testcas": [84, 110, 197, 233], "testdataset": 101, "testload": [281, 285], "texa": 318, "text": [210, 248, 250, 252, 253, 254], "text_featur": 255, "text_input": 255, "text_prompt": [210, 246, 248, 250], "text_threshold": 257, "textual": [246, 250], "tgz_md5": [151, 152], "th": 113, "than": [0, 1, 118, 252, 270, 314, 320, 324, 325, 330], "thei": [1, 2, 5, 6, 7, 9, 74, 118, 134, 135, 156, 157, 187, 223, 285, 338], "them": [3, 71, 74, 75, 81, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 194, 220, 223, 224, 230, 253, 263, 264, 265, 266, 269, 273, 277, 282, 294, 296, 317, 318, 326, 329, 330, 338], "theori": [0, 1, 346], "therefor": [0, 1], "thi": [0, 1, 3, 4, 5, 6, 7, 8, 11, 12, 14, 16, 20, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 51, 71, 74, 75, 80, 81, 82, 83, 87, 91, 94, 107, 108, 109, 121, 122, 123, 124, 125, 132, 134, 135, 136, 139, 142, 143, 144, 145, 146, 151, 152, 156, 157, 158, 161, 172, 184, 187, 188, 193, 194, 195, 196, 203, 206, 210, 220, 223, 224, 229, 230, 231, 232, 237, 242, 248, 250, 253, 254, 259, 263, 264, 265, 266, 268, 269, 270, 273, 274, 277, 282, 285, 291, 292, 294, 296, 297, 299, 301, 303, 305, 307, 309, 311, 312, 314, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 343, 346], "this_inventori": [28, 48, 57], "those": [9, 74, 187, 223, 324, 342, 343], "though": [74, 134, 135, 156, 157, 187, 223], "thread": [82, 108, 195, 231, 324], "three": [1, 3, 270, 327, 338], "threshold": [16, 257, 270, 272, 324], "threshold_offset": 272, "through": [83, 109, 196, 232, 320, 326, 330, 342], "throw": 7, "tiburon": [3, 4, 8], "tif": 331, "tile": 317, "tilemap": 294, "time": [0, 3, 4, 74, 89, 187, 223, 320], "timespan": 1, "timestamp": 320, "titl": 330, "tmp": [4, 5, 7, 8, 203, 206, 275, 285, 329, 330], "to_json": [28, 48, 57], "to_numpi": 272, "to_tensor": [138, 160], "to_unit": 338, "togeth": [9, 138, 160, 342], "token": [252, 254, 264], "toler": 203, "ton": 338, "ton_u": 338, "ton_uk": 338, "tonylin": 122, "took": 7, "tool": [272, 344], "top": [1, 314, 330], "torch": [71, 74, 80, 107, 134, 135, 156, 157, 184, 187, 193, 203, 206, 220, 223, 229, 250, 252, 253, 263, 264, 265, 266, 267, 268, 269, 270, 274, 280, 285], "torchtestcas": [84, 110, 197, 233], "torchvis": [80, 193, 229, 252, 253, 285], "toronto": [151, 152], "tort": [0, 1, 346], "total": [6, 8, 280, 311, 318, 320, 321, 324, 331], "total_asset": 324, "totensor": [138, 160], "tower": 320, "trace": 273, "traci": 344, "train": [73, 74, 80, 87, 89, 91, 92, 97, 107, 122, 124, 125, 145, 151, 152, 153, 154, 186, 187, 193, 203, 206, 222, 223, 229, 237, 242, 276, 277, 280, 285, 329], "train_data_dir": [203, 206], "train_detector": [63, 176, 212], "train_list": [151, 152], "train_weight": 280, "traindataset": 101, "trained_model": 203, "trained_model_rooftyp": 329, "trained_seg_model": 206, "trainer": 203, "trainy_g_list": 20, "transfer": [203, 206], "transform": [132, 138, 151, 152, 153, 154, 160, 172, 206, 252, 253, 262, 264, 265, 266, 268, 270, 271, 280, 285, 309, 331], "transformed_imag": 270, "transformer_dim": [265, 266], "transformer_head": 253, "transformer_lay": 253, "transformer_width": 253, "transient": 324, "transmission_lines_gdb": 324, "transpar": 332, "travers": [80, 193, 229, 320], "tree": 51, "tri": 1, "triangular": 325, "trigger": [82, 108, 195, 231], "true": [7, 8, 20, 23, 26, 28, 48, 57, 66, 73, 74, 75, 80, 87, 94, 95, 107, 118, 122, 124, 125, 132, 134, 135, 145, 151, 152, 153, 154, 156, 157, 179, 186, 187, 188, 193, 200, 203, 206, 215, 222, 223, 224, 229, 237, 242, 253, 264, 270, 275, 277, 281, 282, 285, 312, 314, 318, 320, 321, 324, 327, 328, 329, 330, 331, 338], "truncat": 252, "truth": [1, 285], "try": [4, 8], "tune": 203, "tunnel": [291, 305], "tupl": [74, 89, 134, 135, 138, 156, 157, 160, 187, 223, 254, 264, 267, 268, 270, 280, 312, 315, 318, 320, 322, 324, 325, 327, 331], "two": [0, 1, 3, 4, 5, 8, 74, 89, 134, 135, 156, 157, 187, 203, 223, 252, 318, 320, 324, 325, 327, 334, 337], "twowayattentionblock": 269, "twowaytransform": 269, "tx": 318, "txt": [0, 1, 4, 5, 129, 254], "type": [2, 3, 4, 5, 6, 7, 8, 10, 14, 16, 18, 20, 23, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 51, 57, 71, 73, 74, 87, 89, 95, 132, 134, 135, 138, 156, 157, 160, 172, 184, 186, 187, 204, 206, 220, 222, 223, 237, 242, 246, 248, 250, 259, 264, 265, 266, 267, 268, 269, 270, 277, 280, 285, 289, 291, 292, 294, 296, 297, 299, 301, 303, 305, 307, 309, 311, 312, 314, 317, 318, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 338, 342], "type_of_th": 12, "typeerror": [248, 250, 291, 301, 305, 314, 320, 325, 327, 328, 334], "typic": [5, 6, 270, 292, 312, 320], "u": [6, 8], "u65dis": 8, "uint8": [130, 259, 270, 274], "un": 270, "unavail": 318, "unchang": [320, 324, 338], "uncompress": 272, "uncompressed_rl": 272, "uncrop_boxes_xyxi": 272, "uncrop_mask": 272, "uncrop_point": 272, "under": [8, 9, 318, 320, 324, 343, 345, 346], "understand": [2, 7, 9, 342], "undesir": 95, "uneven": 1, "unexpectedli": 322, "uni": [0, 1], "unicod": 254, "uniform": 324, "uniformli": 324, "union": [203, 252, 280, 321, 322], "uniqu": [129, 280, 320, 326, 330], "unit": [3, 6, 291, 299, 301, 303, 305, 307, 309, 311, 314, 318, 322, 323, 324, 338], "unit_convert": 323, "unit_default": 338, "unit_typ": 338, "unit_valid": 338, "unitconvert": [323, 338], "unittest": [79, 106, 192, 228], "univers": [0, 1, 346], "unk": 254, "unknown": [6, 7, 51], "unless": [94, 320], "unload": 89, "unmap": 51, "unpartit": 264, "unrecogn": 338, "unsupport": 338, "unwant": 5, "up": [0, 3, 4, 8, 74, 118, 134, 135, 156, 157, 187, 223, 237, 242, 254], "updat": [3, 6, 8, 23, 26, 28, 48, 49, 51, 57, 94, 129, 140, 162, 237, 291, 317, 320, 321], "update_filenam": 321, "update_inventori": 20, "update_properti": 321, "update_tim": 318, "update_world_r": 320, "updated_inv": 51, "updated_inventori": [317, 318], "upernet": 123, "upload": 5, "upon": [1, 343], "upscal": 268, "urban": [2, 3], "url": [126, 151, 152, 324, 329], "urn": 320, "us": [2, 3, 4, 5, 6, 7, 8, 11, 12, 14, 16, 18, 20, 47, 51, 60, 74, 80, 81, 82, 83, 87, 91, 107, 108, 109, 116, 132, 134, 135, 156, 157, 187, 193, 194, 195, 196, 203, 204, 206, 208, 210, 223, 229, 230, 231, 232, 237, 242, 244, 246, 248, 250, 252, 257, 259, 267, 268, 270, 273, 285, 289, 291, 292, 297, 299, 303, 307, 309, 311, 312, 314, 318, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 342, 345, 346], "usa": [3, 314, 315], "usa_class": 3, "usa_footprint_scrap": [6, 286], "usa_footprintscrap": [3, 4, 5, 6, 314], "usa_footprintsscrap": 3, "usa_inventori": 3, "usa_scrap": 3, "usag": [6, 74, 82, 108, 134, 135, 156, 157, 187, 195, 223, 231], "use_abs_po": 264, "use_default": [47, 48], "use_rel_po": 264, "use_softmax": 123, "use_stability_scor": 273, "user": [1, 3, 5, 7, 57, 91, 129, 285, 315, 320, 321, 324, 338], "user_footprint": 286, "user_infer": 21, "user_path": 57, "user_scattered_col": 112, "userfootprint": 315, "userinfer": 57, "userscattereddataparallel": 112, "usg": [2, 51, 317, 318], "usgs_data_scrap": 286, "usgs_elev_scrap": 318, "usgs_elevation_scrap": [2, 316], "usgselevationscrap": 318, "usual": [82, 108, 195, 231], "utf": [4, 5, 254], "util": [3, 4, 6, 7, 10, 63, 65, 72, 89, 92, 93, 97, 104, 120, 132, 133, 155, 176, 178, 185, 199, 212, 214, 221, 250, 251, 258, 279, 285, 322], "utils_extra": [72, 185, 221], "uw": [323, 331], "v": [110, 269, 338], "v2": 122, "v3": 344, "v_datum": 324, "vacanc": [81, 194, 230], "val": [0, 1, 129, 140, 162], "val_cont": 8, "val_struct": 8, "val_veh": 8, "valdataset": 101, "valid": [0, 1, 48, 89, 91, 132, 203, 206, 320, 321, 322, 323, 324, 325, 327, 328, 331, 332, 334, 338], "validate_coordin": 327, "validate_inventori": 328, "validationcondit": 322, "valu": [0, 1, 2, 3, 5, 7, 51, 71, 74, 80, 95, 107, 129, 132, 134, 135, 140, 156, 157, 162, 184, 187, 193, 203, 204, 206, 220, 223, 229, 237, 242, 268, 269, 270, 272, 285, 311, 312, 317, 318, 320, 321, 324, 325, 327, 330, 338], "valueerror": [4, 71, 89, 184, 203, 206, 220, 248, 250, 294, 296, 312, 320, 324, 325, 329, 330, 334, 338], "vanishingpoint": 6, "var": [80, 107, 193, 229], "vari": [3, 331], "variabl": [0, 1, 20, 26, 60, 80, 107, 193, 208, 229, 237, 244, 254], "varianc": [80, 107, 193, 229], "variat": [1, 338], "variou": [296, 325, 327], "vector": [80, 107, 193, 229], "vel_unit": 324, "veloc": 324, "verif": 3, "verifi": [3, 327], "verify_and_download_model": 257, "version": [80, 107, 193, 229, 252, 312, 318, 320, 344, 345], "versu": 203, "vert1": 303, "vertic": 303, "vertlast": 303, "via": [0, 320, 338], "view": [4, 5, 296, 343], "virtual": 204, "vision": [2, 323, 329, 331], "vision_lay": 253, "vision_patch_s": 253, "vision_width": 253, "visiondataset": 206, "visiontransform": 253, "visit": 318, "visual": [1, 138, 160, 257, 275, 285, 292, 323, 324, 325, 330, 332], "vit": [250, 266], "vit_dim": 266, "vjp": [74, 134, 135, 156, 157, 187, 223], "vlm": 2, "vlm_image_classifi": 58, "vlm_segment": [2, 58], "vlmsegment": 275, "vocab": 254, "vocab_s": 253, "volumetr": [80, 107, 193, 229], "volunt": 3, "w": [8, 74, 80, 107, 134, 135, 138, 156, 157, 160, 187, 193, 223, 229, 264, 268, 269, 270, 274, 332], "w1": [7, 8], "wa": [0, 1, 9, 91, 320, 321, 342], "wael": 344, "wai": [0, 1, 2, 5, 8, 74, 118, 134, 135, 151, 153, 156, 157, 187, 223, 346], "wait": 206, "wang": 344, "want": [3, 82, 108, 195, 231, 254, 303], "wari": 95, "warmup": 94, "warn": [0, 321], "warranti": [0, 1, 346], "wc4": 8, "we": [3, 5, 83, 109, 196, 232, 252, 254, 342], "weight": [0, 1, 23, 48, 53, 74, 118, 123, 129, 187, 223, 276, 280, 311, 318, 323, 329, 338], "weight_decai": 94, "weightedrandomsampl": 118, "weights_init": 123, "well": [1, 151, 153, 274], "were": [74, 82, 108, 134, 135, 156, 157, 187, 195, 223, 231, 285, 320], "wgs84": [318, 331], "what": [3, 273, 342], "when": [0, 1, 3, 6, 7, 8, 12, 80, 82, 83, 95, 107, 108, 109, 118, 193, 195, 196, 229, 231, 232, 252, 254, 312, 320, 322, 324, 326], "where": [1, 3, 12, 80, 89, 95, 107, 193, 203, 206, 229, 253, 267, 268, 270, 285, 297, 312, 320, 325, 327, 330, 331, 332, 335], "wherea": 3, "whether": [0, 1, 73, 74, 87, 132, 134, 135, 156, 157, 172, 186, 187, 203, 206, 222, 223, 242, 248, 252, 265, 266, 268, 280, 320, 327, 328, 346], "which": [0, 1, 3, 4, 5, 6, 7, 8, 71, 80, 82, 107, 108, 118, 138, 151, 153, 160, 184, 193, 195, 203, 204, 220, 229, 231, 237, 242, 270, 275, 285, 294, 296, 297, 301, 305, 314, 318, 320, 324, 330, 336, 338, 342], "while": [2, 7, 71, 74, 75, 81, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 194, 220, 223, 224, 230, 253, 263, 264, 265, 266, 269, 273, 277, 282, 330], "whitespac": [5, 254], "whitespace_clean": 254, "whole": [0, 1], "whose": [321, 342], "width": [71, 80, 107, 184, 193, 220, 229, 253, 264, 321], "width_coeffici": [74, 187, 223], "width_per_group": 277, "wil": 342, "windcecbruleset": 29, "windcerbruleset": 29, "windefruleset": 29, "windmecbruleset": 29, "windmerbruleset": 29, "windmetavarruleset": 29, "windmhruleset": 29, "windmlriruleset": 29, "windmlrmruleset": 29, "windmmuhruleset": 29, "windmsfruleset": 29, "window": [2, 5, 6, 7, 8, 95, 264, 342], "window_partit": 264, "window_s": 264, "window_unpartit": 264, "windowarea": 48, "windowarea_kei": 48, "windsecbruleset": 29, "windserbruleset": 29, "windspmbruleset": 29, "windwmuhruleset": 29, "windwsfruleset": 29, "windzon": 48, "windzone_kei": 48, "wise": 1, "within": [0, 1, 6, 8, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 71, 74, 75, 81, 123, 124, 125, 134, 135, 136, 139, 142, 143, 144, 145, 146, 156, 157, 158, 161, 184, 187, 188, 194, 220, 223, 224, 230, 253, 263, 264, 265, 266, 269, 273, 277, 282, 292, 299, 301, 303, 305, 311, 314, 318, 320, 324, 325, 326, 333, 336], "withing": 311, "without": [0, 1, 3, 6, 7, 80, 107, 118, 193, 203, 229, 318, 320, 327, 330, 337, 346], "wkt": 324, "wm": 317, "wmuh": 45, "wmuh_config": 45, "wod": 87, "word": 254, "work": [0, 2, 5, 6, 254, 312, 318, 332, 342, 343], "work_dir": [132, 285], "workflow": [4, 6, 7, 342], "world": [7, 20, 57, 320, 342], "world_real": 320, "would": [1, 5, 6, 7, 118], "wp": 264, "wrap": [80, 107, 116, 118, 193, 229, 320], "wrapper": [237, 242], "write": [8, 51, 303, 311, 320, 325], "write_dict": 275, "write_polygon_to_geojson": 325, "write_to_geojson": [7, 8, 311, 318, 320], "written": [0, 1, 3, 4, 6, 7, 8, 320, 325], "wrong": 328, "wrote": [311, 318, 320], "wsf": [36, 46], "wsf_config": 46, "www": [151, 152, 318, 342], "x": [8, 74, 75, 80, 84, 101, 107, 123, 124, 125, 130, 134, 135, 136, 138, 139, 142, 143, 144, 145, 146, 156, 157, 158, 160, 161, 187, 188, 193, 197, 223, 224, 229, 233, 253, 263, 264, 265, 266, 267, 268, 269, 270, 272, 277, 282, 318, 320, 344], "x1": [71, 184, 220], "x2": [71, 184, 220], "x4": 272, "xhxw": 272, "xmax": [16, 257], "xmin": [16, 257], "xpu": 129, "xywh": 259, "xyxi": [16, 257, 270, 272], "y": [8, 80, 84, 107, 134, 135, 156, 157, 193, 197, 229, 233, 270, 318, 320], "y1": [71, 184, 220], "y2": [71, 184, 220], "y_gt": 95, "y_pred": 95, "yaml": [130, 312], "yard": 338, "yd": 338, "yd2": 338, "year": [2, 280, 285, 303], "year_built_classifi": [1, 2, 58], "year_class": [23, 53], "yearbuilt": [23, 26, 28, 48], "yearbuilt_kei": [23, 26, 28, 48], "yearbuiltclassifi": 285, "yearbuiltfold": 280, "yet": 3, "yield": 118, "ymax": [16, 257], "ymin": [16, 257], "you": [2, 4, 5, 6, 74, 83, 109, 134, 135, 156, 157, 187, 196, 223, 232, 254, 303, 322, 345], "your": [2, 5, 6, 51, 254, 329], "yourself": 312, "yu": 344, "yunhui": 344, "z": [135, 157], "z0": 48, "z0_kei": 48, "z999": 320, "zenodo": [329, 344], "zero": [16, 257, 320, 332], "zero_init_residu": 277, "zhao": 344, "zone": 291, "zone_subti": 324, "zoom": [138, 160], "zsarn\u00f3czai": 344, "zylo117": [71, 75, 184, 188, 220, 224]}, "titles": ["Raised Foundation Classification", "Year Built Classification", "Examples", "Building Footprints", "Downloading Images", "Image Filters", "Importer", "Imputation Algorithms", "NSI Integration", "Indices and tables", "brails package", "brails.constants module", "brails.exceptions module", "brails.filters package", "brails.filters.filter module", "brails.filters.house_view package", "brails.filters.house_view.house_view module", "brails.imputers package", "brails.imputers.imputation module", "brails.imputers.knn_imputer package", "brails.imputers.knn_imputer.knn_imputer module", "brails.inferers package", "brails.inferers.hazus_inferer package", "brails.inferers.hazus_inferer.hazus_inferer module", "brails.inferers.hazus_inferer.hazus_rulesets module", "brails.inferers.hazus_inferer_earthquake package", "brails.inferers.hazus_inferer_earthquake.hazus_inferer_earthquake module", "brails.inferers.hazus_inferer_flood package", "brails.inferers.hazus_inferer_flood.hazus_inferer_flood module", "brails.inferers.hazus_inferer_wind package", "brails.inferers.hazus_inferer_wind.BuildingClassRulesets module", "brails.inferers.hazus_inferer_wind.WindCECBRulesets module", "brails.inferers.hazus_inferer_wind.WindCERBRulesets module", "brails.inferers.hazus_inferer_wind.WindEFRulesets module", "brails.inferers.hazus_inferer_wind.WindMECBRulesets module", "brails.inferers.hazus_inferer_wind.WindMERBRulesets module", "brails.inferers.hazus_inferer_wind.WindMHRulesets module", "brails.inferers.hazus_inferer_wind.WindMLRIRulesets module", "brails.inferers.hazus_inferer_wind.WindMLRMRulesets module", "brails.inferers.hazus_inferer_wind.WindMMUHRulesets module", "brails.inferers.hazus_inferer_wind.WindMSFRulesets module", "brails.inferers.hazus_inferer_wind.WindMetaVarRulesets module", "brails.inferers.hazus_inferer_wind.WindSECBRulesets module", "brails.inferers.hazus_inferer_wind.WindSERBRulesets module", "brails.inferers.hazus_inferer_wind.WindSPMBRulesets module", "brails.inferers.hazus_inferer_wind.WindWMUHRulesets module", "brails.inferers.hazus_inferer_wind.WindWSFRulesets module", "brails.inferers.hazus_inferer_wind.auto_HU_NJ module", "brails.inferers.hazus_inferer_wind.hazus_inferer_wind module", "brails.inferers.inference_engine module", "brails.inferers.nlcd_inferer package", "brails.inferers.nlcd_inferer.nlcd_to_coarse_land_cover module", "brails.inferers.simcenter_inferer package", "brails.inferers.simcenter_inferer.simCenter_inferer module", "brails.inferers.user_inferer package", "brails.inferers.user_inferer.content_value_inferer module", "brails.inferers.user_inferer.floor_area_inferer module", "brails.inferers.user_inferer.user_inferer module", "brails.processors package", "brails.processors.building_material_llm package", "brails.processors.building_material_llm.building_material_llm module", "brails.processors.chimney_detector package", "brails.processors.chimney_detector.chimney_detector module", "brails.processors.chimney_detector.lib package", "brails.processors.chimney_detector.lib.backbone module", "brails.processors.chimney_detector.lib.efficientdet package", "brails.processors.chimney_detector.lib.efficientdet.coco module", "brails.processors.chimney_detector.lib.efficientdet.config module", "brails.processors.chimney_detector.lib.efficientdet.dataset module", "brails.processors.chimney_detector.lib.efficientdet.loss module", "brails.processors.chimney_detector.lib.efficientdet.model module", "brails.processors.chimney_detector.lib.efficientdet.utils module", "brails.processors.chimney_detector.lib.efficientnet package", "brails.processors.chimney_detector.lib.efficientnet.model module", "brails.processors.chimney_detector.lib.efficientnet.utils module", "brails.processors.chimney_detector.lib.efficientnet.utils_extra module", "brails.processors.chimney_detector.lib.infer_detector module", "brails.processors.chimney_detector.lib.train_detector module", "brails.processors.chimney_detector.lib.utils package", "brails.processors.chimney_detector.lib.utils.sync_batchnorm package", "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm module", "brails.processors.chimney_detector.lib.utils.sync_batchnorm.batchnorm_reimpl module", "brails.processors.chimney_detector.lib.utils.sync_batchnorm.comm module", "brails.processors.chimney_detector.lib.utils.sync_batchnorm.replicate module", "brails.processors.chimney_detector.lib.utils.sync_batchnorm.unittest module", "brails.processors.chimney_detector.lib.utils.utils module", "brails.processors.cons_type_classifier package", "brails.processors.cons_type_classifier.ConstructionTypeClassifier module", "brails.processors.facade_parser package", "brails.processors.facade_parser.facade_parser module", "brails.processors.ffh_predictor_klepac package", "brails.processors.ffh_predictor_klepac.ffh_predictor_klepac module", "brails.processors.foundation_classifier package", "brails.processors.foundation_classifier.attention_utils package", "brails.processors.foundation_classifier.attention_utils.radam module", "brails.processors.foundation_classifier.attention_utils.utils module", "brails.processors.foundation_classifier.csail_segmentation_tool package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.config.defaults module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.data package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.dataset module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.eval_multipro module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.batchnorm module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.comm module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.replicate module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.modules.unittest module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.nn.parallel.data_parallel module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataloader module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.dataset module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.distributed module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.data.sampler module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.lib.utils.th module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models package", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.hrnet module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.mobilenet module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.models module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnet module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.resnext module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.models.utils module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.test module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.train module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_seg.utils module", "brails.processors.foundation_classifier.csail_segmentation_tool.csail_segmentation module", "brails.processors.foundation_classifier.detect module", "brails.processors.foundation_classifier.foundation_classifier module", "brails.processors.foundation_classifier.lib package", "brails.processors.foundation_classifier.lib.LinearAverage module", "brails.processors.foundation_classifier.lib.NCEAverage module", "brails.processors.foundation_classifier.lib.NCECriterion module", "brails.processors.foundation_classifier.lib.alias_multinomial module", "brails.processors.foundation_classifier.lib.custom_transforms module", "brails.processors.foundation_classifier.lib.normalize module", "brails.processors.foundation_classifier.lib.utils module", "brails.processors.foundation_classifier.models package", "brails.processors.foundation_classifier.models.attention_module module", "brails.processors.foundation_classifier.models.basic_layer module", "brails.processors.foundation_classifier.models.residual_attention_network module", "brails.processors.foundation_classifier.models.resnet_applied module", "brails.processors.foundation_classifier.models.sknet module", "brails.processors.foundation_classifier.npid package", "brails.processors.foundation_classifier.npid.MDistance module", "brails.processors.foundation_classifier.npid.cifar module", "brails.processors.foundation_classifier.npid.main module", "brails.processors.foundation_classifier.npid.npid_datasets package", "brails.processors.foundation_classifier.npid.npid_datasets.cifar module", "brails.processors.foundation_classifier.npid.npid_datasets.folder module", "brails.processors.foundation_classifier.npid.npid_datasets.mnist module", "brails.processors.foundation_classifier.npid.npid_lib package", "brails.processors.foundation_classifier.npid.npid_lib.LinearAverage module", "brails.processors.foundation_classifier.npid.npid_lib.NCEAverage module", "brails.processors.foundation_classifier.npid.npid_lib.NCECriterion module", "brails.processors.foundation_classifier.npid.npid_lib.alias_multinomial module", "brails.processors.foundation_classifier.npid.npid_lib.custom_transforms module", "brails.processors.foundation_classifier.npid.npid_lib.normalize module", "brails.processors.foundation_classifier.npid.npid_lib.utils module", "brails.processors.foundation_classifier.npid.npid_models package", "brails.processors.foundation_classifier.npid.npid_models.resnet module", "brails.processors.foundation_classifier.npid.npid_models.resnet_cifar module", "brails.processors.foundation_classifier.npid.npid_toolbox package", "brails.processors.foundation_classifier.npid.npid_toolbox.calculate_all_distances module", "brails.processors.foundation_classifier.npid.test module", "brails.processors.foundation_classifier.save_masked_images module", "brails.processors.foundation_classifier.train module", "brails.processors.foundation_classifier.utils package", "brails.processors.foundation_classifier.utils.Datasets module", "brails.processors.foundation_classifier.utils.generate_csv module", "brails.processors.garage_detector package", "brails.processors.garage_detector.garage_detector module", "brails.processors.garage_detector.lib package", "brails.processors.garage_detector.lib.backbone module", "brails.processors.garage_detector.lib.efficientdet package", "brails.processors.garage_detector.lib.efficientdet.coco module", "brails.processors.garage_detector.lib.efficientdet.config module", "brails.processors.garage_detector.lib.efficientdet.dataset module", "brails.processors.garage_detector.lib.efficientdet.loss module", "brails.processors.garage_detector.lib.efficientdet.model module", "brails.processors.garage_detector.lib.efficientdet.utils module", "brails.processors.garage_detector.lib.efficientnet package", "brails.processors.garage_detector.lib.efficientnet.model module", "brails.processors.garage_detector.lib.efficientnet.utils module", "brails.processors.garage_detector.lib.efficientnet.utils_extra module", "brails.processors.garage_detector.lib.infer_detector module", "brails.processors.garage_detector.lib.train_detector module", "brails.processors.garage_detector.lib.utils package", "brails.processors.garage_detector.lib.utils.sync_batchnorm package", "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm module", "brails.processors.garage_detector.lib.utils.sync_batchnorm.batchnorm_reimpl module", "brails.processors.garage_detector.lib.utils.sync_batchnorm.comm module", "brails.processors.garage_detector.lib.utils.sync_batchnorm.replicate module", "brails.processors.garage_detector.lib.utils.sync_batchnorm.unittest module", "brails.processors.garage_detector.lib.utils.utils module", "brails.processors.gpt_base_model package", "brails.processors.gpt_base_model.GPT module", "brails.processors.gpt_base_model.utils module", "brails.processors.image_classifier package", "brails.processors.image_classifier.image_classifier module", "brails.processors.image_processor module", "brails.processors.image_segmenter package", "brails.processors.image_segmenter.image_segmenter module", "brails.processors.nFloor_gpt package", "brails.processors.nFloor_gpt.nFloor_gpt module", "brails.processors.nFloor_vlm package", "brails.processors.nFloor_vlm.nFloor_vlm module", "brails.processors.nfloors_detector package", "brails.processors.nfloors_detector.lib package", "brails.processors.nfloors_detector.lib.backbone module", "brails.processors.nfloors_detector.lib.efficientdet package", "brails.processors.nfloors_detector.lib.efficientdet.coco module", "brails.processors.nfloors_detector.lib.efficientdet.config module", "brails.processors.nfloors_detector.lib.efficientdet.dataset module", "brails.processors.nfloors_detector.lib.efficientdet.loss module", "brails.processors.nfloors_detector.lib.efficientdet.model module", "brails.processors.nfloors_detector.lib.efficientdet.utils module", "brails.processors.nfloors_detector.lib.efficientnet package", "brails.processors.nfloors_detector.lib.efficientnet.model module", "brails.processors.nfloors_detector.lib.efficientnet.utils module", "brails.processors.nfloors_detector.lib.efficientnet.utils_extra module", "brails.processors.nfloors_detector.lib.infer_detector module", "brails.processors.nfloors_detector.lib.train_detector module", "brails.processors.nfloors_detector.lib.utils package", "brails.processors.nfloors_detector.lib.utils.sync_batchnorm package", "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm module", "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.batchnorm_reimpl module", "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.comm module", "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.replicate module", "brails.processors.nfloors_detector.lib.utils.sync_batchnorm.unittest module", "brails.processors.nfloors_detector.lib.utils.utils module", "brails.processors.nfloors_detector.nfloor_detector module", "brails.processors.occupancy_classifier package", "brails.processors.occupancy_classifier.occupancy_classifier module", "brails.processors.other_idea package", "brails.processors.other_idea.arial_processing module", "brails.processors.other_idea.street_processor module", "brails.processors.roof_shape_classifier package", "brails.processors.roof_shape_classifier.roof_shape_classifier module", "brails.processors.roof_shape_gpt package", "brails.processors.roof_shape_gpt.roof_shape_gpt module", "brails.processors.roof_shape_vlm package", "brails.processors.roof_shape_vlm.roof_shape_vlm module", "brails.processors.street_level_damage_detection package", "brails.processors.street_level_damage_detection.street_level_damage_detection module", "brails.processors.vlm_image_classifier package", "brails.processors.vlm_image_classifier.CLIPClassifier module", "brails.processors.vlm_image_classifier.clip package", "brails.processors.vlm_image_classifier.clip.clip module", "brails.processors.vlm_image_classifier.clip.model module", "brails.processors.vlm_image_classifier.clip.simple_tokenizer module", "brails.processors.vlm_image_classifier.clip.utils module", "brails.processors.vlm_segmenter package", "brails.processors.vlm_segmenter.grounded_sam_utils module", "brails.processors.vlm_segmenter.segment_anything package", "brails.processors.vlm_segmenter.segment_anything.automatic_mask_generator module", "brails.processors.vlm_segmenter.segment_anything.build_sam module", "brails.processors.vlm_segmenter.segment_anything.build_sam_hq module", "brails.processors.vlm_segmenter.segment_anything.modeling package", "brails.processors.vlm_segmenter.segment_anything.modeling.common module", "brails.processors.vlm_segmenter.segment_anything.modeling.image_encoder module", "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder module", "brails.processors.vlm_segmenter.segment_anything.modeling.mask_decoder_hq module", "brails.processors.vlm_segmenter.segment_anything.modeling.prompt_encoder module", "brails.processors.vlm_segmenter.segment_anything.modeling.sam module", "brails.processors.vlm_segmenter.segment_anything.modeling.transformer module", "brails.processors.vlm_segmenter.segment_anything.predictor module", "brails.processors.vlm_segmenter.segment_anything.utils package", "brails.processors.vlm_segmenter.segment_anything.utils.amg module", "brails.processors.vlm_segmenter.segment_anything.utils.onnx module", "brails.processors.vlm_segmenter.segment_anything.utils.transforms module", "brails.processors.vlm_segmenter.vlm_segmenter module", "brails.processors.year_built_classifier package", "brails.processors.year_built_classifier.Resnet module", "brails.processors.year_built_classifier.detect module", "brails.processors.year_built_classifier.lib package", "brails.processors.year_built_classifier.lib.datasets module", "brails.processors.year_built_classifier.lib.utils module", "brails.processors.year_built_classifier.model module", "brails.processors.year_built_classifier.train module", "brails.processors.year_built_classifier.weights package", "brails.processors.year_built_classifier.year_built_classifier module", "brails.scrapers package", "brails.scrapers.asce_hazard_data_scraper package", "brails.scrapers.asce_hazard_data_scraper.asce_hazard_data_scraper module", "brails.scrapers.asset_data_augmenter module", "brails.scrapers.fema_firm_scraper package", "brails.scrapers.fema_firm_scraper.fema_firm_scraper module", "brails.scrapers.footprint_scraper module", "brails.scrapers.google_satellite package", "brails.scrapers.google_satellite.google_satellite module", "brails.scrapers.google_streetview package", "brails.scrapers.google_streetview.google_streetview module", "brails.scrapers.image_scraper module", "brails.scrapers.ms_footprint_scraper package", "brails.scrapers.ms_footprint_scraper.ms_footprint_handler module", "brails.scrapers.nbi_scraper package", "brails.scrapers.nbi_scraper.nbi_scraper module", "brails.scrapers.nsi_parser package", "brails.scrapers.nsi_parser.nsi_parser module", "brails.scrapers.nti_scraper package", "brails.scrapers.nti_scraper.nti_scraper module", "brails.scrapers.osm_footprint_scraper package", "brails.scrapers.osm_footprint_scraper.osm_footprint_scraper module", "brails.scrapers.osm_power_network_scraper package", "brails.scrapers.osm_power_network_scraper.osm_power_network_scraper module", "brails.scrapers.overture_maps_scraper package", "brails.scrapers.overture_maps_scraper.overture_maps_footprint_scraper module", "brails.scrapers.overture_maps_scraper.overture_maps_scraper module", "brails.scrapers.usa_footprint_scraper package", "brails.scrapers.usa_footprint_scraper.usa_footprint_scraper module", "brails.scrapers.user_footprints module", "brails.scrapers.usgs_data_scrapers package", "brails.scrapers.usgs_data_scrapers.nlcd_scraper module", "brails.scrapers.usgs_data_scrapers.usgs_elevation_scraper module", "brails.types package", "brails.types.asset_inventory module", "brails.types.image_set module", "brails.types.region_boundary module", "brails.utils package", "brails.utils.arcgisapi_service_helper module", "brails.utils.geo_tools module", "brails.utils.importer module", "brails.utils.input_validator module", "brails.utils.inventory_validator module", "brails.utils.model_utils module", "brails.utils.plot_tools module", "brails.utils.rapid_utils module", "brails.utils.segmentation_utils module", "brails.utils.spatial_join_methods package", "brails.utils.spatial_join_methods.base module", "brails.utils.spatial_join_methods.distance_based_point_matcher module", "brails.utils.spatial_join_methods.get_points_in_polygons module", "brails.utils.spatial_join_methods.get_points_near_polygons module", "brails.utils.unit_converter module", "conf module", "BrailsPlusPlus", "setup module", "About", "Acknowledgements", "How to Cite", "Installation", "Copyright and License"], "titleterms": {"3": [0, 1], "about": 342, "acknowledg": 343, "algorithm": 7, "alias_multinomi": [137, 159], "amg": 272, "arcgisapi_service_help": 324, "arial_process": 239, "asce_hazard_data_scrap": [287, 288], "asset_data_augment": 289, "asset_inventori": 320, "attention_modul": 142, "attention_util": [93, 94, 95], "auto_hu_nj": 47, "automatic_mask_gener": 259, "backbon": [64, 177, 213], "base": 334, "basic_lay": 143, "batchnorm": [80, 107, 193, 229], "batchnorm_reimpl": [81, 194, 230], "brail": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "brailsplusplu": 340, "bsd": [0, 1], "build": 3, "build_sam": 260, "build_sam_hq": 261, "building_material_llm": [59, 60], "buildingclassruleset": 30, "built": 1, "calculate_all_dist": 167, "calus": 1, "chimney_detector": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "cifar": [149, 152], "cite": 344, "classif": [0, 1], "claus": 0, "clean": [0, 1], "clip": [251, 252, 253, 254, 255], "clipclassifi": 250, "coco": [66, 179, 215], "comm": [82, 108, 195, 231], "common": 263, "conf": 339, "config": [67, 98, 99, 180, 216], "cons_type_classifi": [86, 87], "constant": 11, "constructiontypeclassifi": 87, "content": [1, 9], "content_value_infer": 55, "copyright": [0, 1, 346], "csail_seg": [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "csail_segment": 130, "csail_segmentation_tool": [96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "custom_transform": [138, 160], "data": [0, 1, 100, 114, 115, 116, 117, 118], "data_parallel": 112, "dataload": 115, "dataset": [0, 1, 68, 101, 116, 172, 181, 217, 280], "default": 99, "detect": [131, 278], "distance_based_point_match": 335, "distribut": 117, "download": 4, "efficientdet": [65, 66, 67, 68, 69, 70, 71, 178, 179, 180, 181, 182, 183, 184, 214, 215, 216, 217, 218, 219, 220], "efficientnet": [72, 73, 74, 75, 185, 186, 187, 188, 221, 222, 223, 224], "eval": 102, "eval_multipro": 103, "exampl": [2, 237], "except": 12, "execut": [0, 1], "facade_pars": [88, 89], "fema_firm_scrap": [290, 291], "ffh_predictor_klepac": [90, 91], "filter": [5, 13, 14, 15, 16], "floor_area_infer": 56, "folder": 153, "footprint": 3, "footprint_scrap": 292, "format": [0, 1], "foundat": [0, 1], "foundation_classifi": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "galleri": 2, "garage_detector": [174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "generate_csv": 173, "geo_tool": 325, "get_points_in_polygon": 336, "get_points_near_polygon": 337, "google_satellit": [293, 294], "google_streetview": [295, 296], "gpt": 200, "gpt_base_model": [199, 200, 201], "grounded_sam_util": 257, "hazus_infer": [22, 23, 24], "hazus_inferer_earthquak": [25, 26], "hazus_inferer_flood": [27, 28], "hazus_inferer_wind": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "hazus_ruleset": 24, "house_view": [15, 16], "how": [0, 1, 344], "hrnet": 121, "i": [0, 1], "imag": [0, 4, 5], "image_classifi": [202, 203], "image_encod": 264, "image_processor": 204, "image_scrap": 297, "image_segment": [205, 206], "image_set": 321, "import": [6, 326], "improv": 0, "imput": [7, 17, 18, 19, 20], "indic": 9, "infer": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "infer_detector": [76, 189, 225], "inference_engin": 49, "input": [0, 1], "input_valid": 327, "instal": [0, 1, 345], "integr": 8, "inventory_valid": 328, "knn_imput": [19, 20], "lib": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 133, 134, 135, 136, 137, 138, 139, 140, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 279, 280, 281], "licens": [0, 1, 346], "linearaverag": [134, 156], "loss": [69, 182, 218], "main": 150, "mask": 0, "mask_decod": 265, "mask_decoder_hq": 266, "mdistanc": 148, "mnist": 154, "mobilenet": 122, "model": [0, 1, 70, 73, 120, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 183, 186, 219, 222, 253, 262, 263, 264, 265, 266, 267, 268, 269, 282], "model_util": 329, "modul": [11, 12, 14, 16, 18, 20, 23, 24, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 55, 56, 57, 60, 62, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 87, 89, 91, 94, 95, 99, 101, 102, 103, 106, 107, 108, 109, 110, 112, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167, 168, 169, 170, 172, 173, 175, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 200, 201, 203, 204, 206, 208, 210, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 242, 244, 246, 248, 250, 252, 253, 254, 255, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 285, 288, 289, 291, 292, 294, 296, 297, 299, 301, 303, 305, 307, 309, 311, 312, 314, 315, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 341], "ms_footprint_handl": 299, "ms_footprint_scrap": [298, 299], "nbi_scrap": [300, 301], "nceaverag": [135, 157], "ncecriterion": [136, 158], "nfloor_detector": 235, "nfloor_gpt": [207, 208], "nfloor_vlm": [209, 210], "nfloors_detector": [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235], "nlcd_infer": [50, 51], "nlcd_scraper": 317, "nlcd_to_coarse_land_cov": 51, "nn": [105, 106, 107, 108, 109, 110, 111, 112], "normal": [139, 161], "note": 237, "notebook": [3, 7, 8], "npid": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "npid_dataset": [151, 152, 153, 154], "npid_lib": [155, 156, 157, 158, 159, 160, 161, 162], "npid_model": [163, 164, 165], "npid_toolbox": [166, 167], "nsi": 8, "nsi_pars": [302, 303], "nti_scrap": [304, 305], "occupancy_classifi": [236, 237], "onnx": 273, "option": 0, "osm_footprint_scrap": [306, 307], "osm_power_network_scrap": [308, 309], "other_idea": [238, 239, 240], "overture_maps_footprint_scrap": 311, "overture_maps_scrap": [310, 311, 312], "packag": [10, 13, 15, 17, 19, 21, 22, 25, 27, 29, 50, 52, 54, 58, 59, 61, 63, 65, 72, 78, 79, 86, 88, 90, 92, 93, 96, 97, 98, 100, 104, 105, 106, 111, 113, 114, 120, 133, 141, 147, 151, 155, 163, 166, 171, 174, 176, 178, 185, 191, 192, 199, 202, 205, 207, 209, 211, 212, 214, 221, 227, 228, 236, 238, 241, 243, 245, 247, 249, 251, 256, 258, 262, 271, 276, 279, 284, 286, 287, 290, 293, 295, 298, 300, 302, 304, 306, 308, 310, 313, 316, 319, 323, 333], "parallel": [111, 112], "plot_tool": 330, "pre": 0, "predictor": 270, "pretrain": [0, 1], "processor": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285], "prompt_encod": 267, "radam": 94, "rais": 0, "rapid_util": 331, "region_boundari": 322, "replic": [83, 109, 196, 232], "residual_attention_network": 144, "resnet": [124, 164, 277], "resnet_appli": 145, "resnet_cifar": 165, "resnext": 125, "roof_shape_classifi": [241, 242], "roof_shape_gpt": [243, 244], "roof_shape_vlm": [245, 246], "sam": 268, "sampler": 118, "save": 0, "save_masked_imag": 169, "scraper": [286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "segment_anyth": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "segmentation_util": 332, "setup": 341, "simcenter_infer": [52, 53], "simple_token": 254, "sknet": 146, "spatial_join_method": [333, 334, 335, 336, 337], "street_level_damage_detect": [247, 248], "street_processor": 240, "submodul": [10, 13, 15, 17, 19, 21, 22, 25, 27, 29, 50, 52, 54, 58, 59, 61, 63, 65, 72, 78, 79, 86, 88, 90, 92, 93, 96, 97, 98, 106, 111, 113, 114, 120, 133, 141, 147, 151, 155, 163, 166, 171, 174, 176, 178, 185, 191, 192, 199, 202, 205, 207, 209, 211, 212, 214, 221, 227, 228, 236, 238, 241, 243, 245, 247, 249, 251, 256, 258, 262, 271, 276, 279, 286, 287, 290, 293, 295, 298, 300, 302, 304, 306, 308, 310, 313, 316, 319, 323, 333], "subpackag": [10, 13, 15, 17, 21, 58, 61, 63, 78, 92, 96, 97, 104, 105, 113, 147, 174, 176, 191, 211, 212, 227, 249, 256, 258, 276, 286, 323], "sync_batchnorm": [79, 80, 81, 82, 83, 84, 192, 193, 194, 195, 196, 197, 228, 229, 230, 231, 232, 233], "tabl": [1, 9], "test": [127, 168], "th": 119, "train": [0, 1, 128, 170, 283], "train_detector": [77, 190, 226], "transform": [269, 274], "type": [319, 320, 321, 322], "unit_convert": 338, "unittest": [84, 110, 197, 233], "unsupervis": 0, "us": [0, 1], "usa_footprint_scrap": [313, 314], "user_footprint": 315, "user_infer": [54, 55, 56, 57], "usgs_data_scrap": [316, 317, 318], "usgs_elevation_scrap": 318, "util": [71, 74, 78, 79, 80, 81, 82, 83, 84, 85, 95, 113, 114, 115, 116, 117, 118, 119, 126, 129, 140, 162, 171, 172, 173, 184, 187, 191, 192, 193, 194, 195, 196, 197, 198, 201, 220, 223, 227, 228, 229, 230, 231, 232, 233, 234, 255, 271, 272, 273, 274, 281, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "utils_extra": [75, 188, 224], "vlm_image_classifi": [249, 250, 251, 252, 253, 254, 255], "vlm_segment": [256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275], "weight": 284, "what": [0, 1], "windcecbruleset": 31, "windcerbruleset": 32, "windefruleset": 33, "windmecbruleset": 34, "windmerbruleset": 35, "windmetavarruleset": 41, "windmhruleset": 36, "windmlriruleset": 37, "windmlrmruleset": 38, "windmmuhruleset": 39, "windmsfruleset": 40, "windsecbruleset": 42, "windserbruleset": 43, "windspmbruleset": 44, "windwmuhruleset": 45, "windwsfruleset": 46, "year": 1, "year_built_classifi": [276, 277, 278, 279, 280, 281, 282, 283, 284, 285]}})